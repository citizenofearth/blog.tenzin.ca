{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/npmlogo.svg","path":"images/npmlogo.svg","modified":1,"renderable":0},{"_id":"source/images/npm.png","path":"images/npm.png","modified":1,"renderable":0},{"_id":"source/images/paradigms.png","path":"images/paradigms.png","modified":1,"renderable":0},{"_id":"source/images/react.png","path":"images/react.png","modified":1,"renderable":0},{"_id":"source/images/pwa.png","path":"images/pwa.png","modified":1,"renderable":0},{"_id":"source/images/reactlogo.png","path":"images/reactlogo.png","modified":1,"renderable":0},{"_id":"source/images/reactrouter.png","path":"images/reactrouter.png","modified":1,"renderable":0},{"_id":"source/images/photography/01.jpg","path":"images/photography/01.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/06.jpg","path":"images/photography/06.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/05.jpg","path":"images/photography/05.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/03.jpg","path":"images/photography/03.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/08.jpg","path":"images/photography/08.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/09.jpg","path":"images/photography/09.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/16.jpg","path":"images/photography/16.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/17.jpg","path":"images/photography/17.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/19.jpg","path":"images/photography/19.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/21.jpg","path":"images/photography/21.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/22.jpg","path":"images/photography/22.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/23.jpg","path":"images/photography/23.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/24.jpg","path":"images/photography/24.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/26.jpg","path":"images/photography/26.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/28.jpg","path":"images/photography/28.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/29.jpg","path":"images/photography/29.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/32.jpg","path":"images/photography/32.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/31.jpg","path":"images/photography/31.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/37.jpg","path":"images/photography/37.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/38.jpg","path":"images/photography/38.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/40.jpg","path":"images/photography/40.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/39.jpg","path":"images/photography/39.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/43.jpg","path":"images/photography/43.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/44.jpg","path":"images/photography/44.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/45.jpg","path":"images/photography/45.jpg","modified":1,"renderable":0},{"_id":"themes/cactus-dark/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"source/images/cors.png","path":"images/cors.png","modified":1,"renderable":0},{"_id":"source/images/photography/02.jpg","path":"images/photography/02.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/04.jpg","path":"images/photography/04.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/10.jpg","path":"images/photography/10.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/11.jpg","path":"images/photography/11.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/14.jpg","path":"images/photography/14.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/12.jpg","path":"images/photography/12.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/15.jpg","path":"images/photography/15.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/13.jpg","path":"images/photography/13.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/18.jpg","path":"images/photography/18.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/20.jpg","path":"images/photography/20.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/25.jpg","path":"images/photography/25.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/27.jpg","path":"images/photography/27.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/30.jpg","path":"images/photography/30.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/33.jpg","path":"images/photography/33.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/35.jpg","path":"images/photography/35.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/34.jpg","path":"images/photography/34.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/36.jpg","path":"images/photography/36.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/41.jpg","path":"images/photography/41.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/42.jpg","path":"images/photography/42.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/46.jpg","path":"images/photography/46.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/47.jpg","path":"images/photography/47.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/49.jpg","path":"images/photography/49.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/51.jpg","path":"images/photography/51.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/50.jpg","path":"images/photography/50.jpg","modified":1,"renderable":0},{"_id":"themes/cactus-dark/source/lib/justified-gallery/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/jquery.justifiedGallery.min.js","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/justified-gallery/justifiedGallery.min.css","path":"lib/justified-gallery/justifiedGallery.min.css","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/styles.css","path":"lib/meslo-LG/styles.css","modified":1,"renderable":1},{"_id":"source/images/photography/07.jpg","path":"images/photography/07.jpg","modified":1,"renderable":0},{"_id":"source/images/photography/48.jpg","path":"images/photography/48.jpg","modified":1,"renderable":0},{"_id":"themes/cactus-dark/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"source/images/me.png","path":"images/me.png","modified":1,"renderable":0},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"source/images/d3.png","path":"images/d3.png","modified":1,"renderable":0},{"_id":"source/images/datascience.png","path":"images/datascience.png","modified":1,"renderable":0},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Bold.ttf","modified":1,"renderable":1}],"Cache":[{"_id":"themes/cactus-dark/README.md","hash":"686612747b12b185108ed55b43c6b204f6e92ed3","modified":1500409531586},{"_id":"themes/cactus-dark/_config.yml","hash":"ea8a098ac62269a4364926253729c061cdd87fea","modified":1555944872322},{"_id":"themes/cactus-dark/LICENSE","hash":"cc3850d9c259671d364690098c9bf250c2ab0808","modified":1500409531585},{"_id":"source/_data/projects.json","hash":"4d574167425a5238d4337842fb2cecacc16775ff","modified":1555943867312},{"_id":"source/about/index.md","hash":"9f0daa702048c53a14f820aa990524f7eff37c75","modified":1553111687348},{"_id":"source/_posts/cross-origin-resource-sharing.md","hash":"eb25ec5db8e8fa2da34e4de7bd973f6f46f44518","modified":1555964583465},{"_id":"source/_posts/hello-world.md","hash":"2f0b5713a43a37358540a7a0a743e6c5f1ebfcbf","modified":1555964851658},{"_id":"source/_posts/learning-react.md","hash":"4c62c77d0137e20f567ca76631c4a1180f7b95e8","modified":1555944768073},{"_id":"source/_posts/d3.md","hash":"6eea517d5fd6956bd999e0dda0ef4da3f5688e49","modified":1555964596376},{"_id":"source/_posts/data-science.md","hash":"8fed48fafb22a6a49d2a6f207d65f82aca824e07","modified":1555095299922},{"_id":"source/_posts/progressive-web-apps.md","hash":"43dbe7bb5eabb06b92797a362e526c1339a57302","modified":1555964496000},{"_id":"source/_posts/react-fundamentals.md","hash":"d8a83a7152636498ff6e6ffa2f089a59229acb8f","modified":1555964493213},{"_id":"source/_posts/programming-paradigms.md","hash":"eaae0732a93bc481123b909b40ae48e2fa19c281","modified":1555966225437},{"_id":"source/images/npmlogo.svg","hash":"e3030b78a240b11b27175648170db2dbdb06c07e","modified":1553111687349},{"_id":"source/images/npm.png","hash":"e3030b78a240b11b27175648170db2dbdb06c07e","modified":1553111687348},{"_id":"source/images/paradigms.png","hash":"00dc9d46517dbe22bae7798a28f8434d1ab8b5f8","modified":1555946892571},{"_id":"source/images/react.png","hash":"649e2805ef6ca039efe0d58a9c33265c7d75a6ed","modified":1553111687350},{"_id":"source/images/pwa.png","hash":"fda84d3e3c98247be682691a392c90398b995ac0","modified":1553111687349},{"_id":"source/css/custom.css","hash":"3d25ad6f97a348ab45101c61d5676665757e22cd","modified":1506962305622},{"_id":"source/images/reactlogo.png","hash":"d6b2e01797df5b6ac8b56e9acb243ce602a4c5ca","modified":1553111687351},{"_id":"source/photography/index.md","hash":"6470ca8289033c5157f74396f5b9c4a253499443","modified":1553111687352},{"_id":"source/images/reactrouter.png","hash":"4d8b8e4d7cfc79efbc35e86ed4b5e7c230609a4a","modified":1553111687351},{"_id":"themes/cactus-dark/layout/index.ejs","hash":"522a84895d3d502ff9cb5cf14bede125354d3e68","modified":1500409531599},{"_id":"themes/cactus-dark/layout/archive.ejs","hash":"86d37400e04a0609bc327a52c98c7645273c22d4","modified":1500409531598},{"_id":"themes/cactus-dark/layout/layout.ejs","hash":"37a7f1f6f289c1cec4528e33f6f3f8435b5616ff","modified":1500409531600},{"_id":"themes/cactus-dark/layout/page.ejs","hash":"3bd8fd1446058dbbbcef6543b323ab46fd8f1a0c","modified":1500409531601},{"_id":"themes/cactus-dark/layout/post.ejs","hash":"07245374d3b74bfd5fd7b91228e55aa19b14e017","modified":1500409531601},{"_id":"themes/cactus-dark/scripts/thumbnail.js","hash":"3d841aa267026703a5cc29f4ffbb613f0a2bbd45","modified":1500409531603},{"_id":"themes/cactus-dark/scripts/meta.js","hash":"6b05bc75ab2478a1f01deab46919164895eb1f6d","modified":1500409531602},{"_id":"source/images/photography/01.jpg","hash":"9aaf05f925b5c6d5425842ea1e9ed893c3ace8f7","modified":1506962305625},{"_id":"source/images/photography/06.jpg","hash":"6d1c77edca71b0e7f8762bf5a3ad5fd68264f0cc","modified":1506962305640},{"_id":"source/images/photography/05.jpg","hash":"bda404045757ec6bc6ff7a9b17de71a050328662","modified":1506962305637},{"_id":"source/images/photography/03.jpg","hash":"9db6699938783d352dc6518a16a84bbef5be8e0b","modified":1506962305631},{"_id":"source/images/photography/08.jpg","hash":"c8a0404c47c2b2c4c24057d3c8f21d9fb25c4bc2","modified":1506962305646},{"_id":"source/images/photography/09.jpg","hash":"002e6f2e456c27cb3011de6bdcc32173675bc8b5","modified":1506962305648},{"_id":"source/images/photography/16.jpg","hash":"453360cfbf6d1fdf456c3cd6ee14eca0ae04f702","modified":1506962305665},{"_id":"source/images/photography/17.jpg","hash":"fa8f05fb93078c73a73922a5bf8c94bce57dcb9a","modified":1506962305668},{"_id":"source/images/photography/19.jpg","hash":"1d043b6a427d91374b8793677963100e1eaf5367","modified":1506962305672},{"_id":"source/images/photography/21.jpg","hash":"624e35b2a2bba816cd92e6f057b1c36cca191388","modified":1506962305677},{"_id":"source/images/photography/22.jpg","hash":"ddd385f9147a357f70869d89823817c52baaa13f","modified":1506962305679},{"_id":"source/images/photography/23.jpg","hash":"0e47e60708a571b7aa6949f9cd0cbf58d95034a8","modified":1506962305681},{"_id":"source/images/photography/24.jpg","hash":"75496f4fb22d4e2e24e0eee59022cd77d9769327","modified":1506962305684},{"_id":"source/images/photography/26.jpg","hash":"9f6af451de8184103612ed2bdbc9ddb9baee8432","modified":1506962305689},{"_id":"source/images/photography/28.jpg","hash":"3437625d8d90714946c227e08a5ebae1bd7ae7f9","modified":1506962305695},{"_id":"source/images/photography/29.jpg","hash":"6ba27c127fbdee8fc46c88557e55ece99cbb28df","modified":1506962305697},{"_id":"source/images/photography/32.jpg","hash":"540e0522448fa96223356cdf8dd314c6d1692f97","modified":1506962305704},{"_id":"source/images/photography/31.jpg","hash":"e450514fedf3ecce37fa3376be6e45a601a96093","modified":1506962305702},{"_id":"source/images/photography/37.jpg","hash":"25db47b1b1a50cd87b1b2bfea65f9f4472f91c0d","modified":1506962305716},{"_id":"source/images/photography/38.jpg","hash":"19d7298415a5104ce1b0f6a7f0106be4f84cb60b","modified":1506962305719},{"_id":"source/images/photography/40.jpg","hash":"ef1348a4f1079d45f1205f1663c9987e8f93be32","modified":1506962305724},{"_id":"source/images/photography/39.jpg","hash":"d6ff147ac7e2ce145746b87c26e69abac6d4dc08","modified":1506962305722},{"_id":"source/images/photography/43.jpg","hash":"5ad6281def189eb00db687c27d68b91332d014cb","modified":1506962305733},{"_id":"source/images/photography/44.jpg","hash":"2c93660ec56ae87df5a591ae64e7f1961741f87c","modified":1506962305735},{"_id":"source/images/photography/45.jpg","hash":"301a720e0fda9d88fd5f52b5f10b7a2a389762fe","modified":1506962305738},{"_id":"themes/cactus-dark/layout/_partial/comments.ejs","hash":"394b5c90e562093c19d69f2b30a5bfb34dd75369","modified":1500409531588},{"_id":"themes/cactus-dark/layout/_partial/header.ejs","hash":"b71b93f9a703730b5d76644b8a45858a7987a8c9","modified":1500409531590},{"_id":"themes/cactus-dark/layout/_partial/footer.ejs","hash":"7b030b46e9a2377bfef7c0cc4ae5242f6f017561","modified":1500409531589},{"_id":"themes/cactus-dark/layout/_partial/head.ejs","hash":"c733e6b0324b7dc033721c794c56befc81a35a82","modified":1500409531589},{"_id":"themes/cactus-dark/layout/_partial/scripts.ejs","hash":"a0ffcf5ab5c5a9bd70217f08573a4b3e0f515cc4","modified":1500409531597},{"_id":"themes/cactus-dark/layout/_partial/styles.ejs","hash":"2b040c8ea4b4a0f628b9ff1086d7ec9491c96958","modified":1524684845234},{"_id":"themes/cactus-dark/source/images/favicon.ico","hash":"758eaf22c8b7b2e638cb36d02b12b2a7c8caa8ca","modified":1500409531649},{"_id":"themes/cactus-dark/source/images/apple-touch-icon.png","hash":"fe56b876b7403bc897da418116e9d46453ad6659","modified":1500409531647},{"_id":"themes/cactus-dark/source/images/favicon-192x192.png","hash":"da6c651903505976fcd2f07c737449f6cebebad7","modified":1500409531648},{"_id":"themes/cactus-dark/source/css/_extend.styl","hash":"c6c36d8d0eae2621f4b0be71234e46ef58b214ff","modified":1519758711685},{"_id":"themes/cactus-dark/source/images/logo.png","hash":"9c8e91283479afabe42d0e7023c4a37094e372b1","modified":1500409531650},{"_id":"themes/cactus-dark/source/css/_mixins.styl","hash":"851e49d3d42482958cf20b6e845f4bc2ee08acdd","modified":1500409531636},{"_id":"themes/cactus-dark/source/css/_util.styl","hash":"4b2ee65cab4c3d775947a476c71252dc49cbbb1b","modified":1500409531643},{"_id":"themes/cactus-dark/source/css/_variables.styl","hash":"3833d0a641e306a0b52e5f984ca26bab7f1835ef","modified":1524750054728},{"_id":"themes/cactus-dark/source/css/style.styl","hash":"c4024cf17a2d10597d290b849e256b279b45d0c2","modified":1519758711698},{"_id":"themes/cactus-dark/source/js/main.js","hash":"da2218b79c4fff69c5fea8c2398978f03603e68f","modified":1500409531651},{"_id":"source/images/cors.png","hash":"07738c89ad74bbaf437c9e9efc14f8f7246006be","modified":1555964562923},{"_id":"source/images/photography/02.jpg","hash":"83aef8272c89b7b4041738c73ac03a62a7648e07","modified":1506962305628},{"_id":"source/images/photography/04.jpg","hash":"734ce17c29eda4ebde7d1b4fe533bb89c98e8456","modified":1506962305635},{"_id":"source/images/photography/10.jpg","hash":"00c4d0db9603823872aaa6266baf071dc8574d93","modified":1506962305651},{"_id":"source/images/photography/11.jpg","hash":"14acd52d244fcfd60ec1fc2a5973ae85a72630ba","modified":1506962305653},{"_id":"source/images/photography/14.jpg","hash":"080334a45db355ae4c0d75698982951e371b7012","modified":1506962305660},{"_id":"source/images/photography/12.jpg","hash":"c406e43e9c6c34124c5c9d7329fb0179e333840d","modified":1506962305656},{"_id":"source/images/photography/15.jpg","hash":"aefd751ed7e59d8a60654c591b371231382f3f09","modified":1506962305663},{"_id":"source/images/photography/13.jpg","hash":"1441a072621c8c1548c589f92fd023cfa623290f","modified":1506962305658},{"_id":"source/images/photography/18.jpg","hash":"73d021d282a357ca4e3aaf9d1ee14f3856a7ab00","modified":1506962305670},{"_id":"source/images/photography/20.jpg","hash":"b7dc30c50ce435f522a7a20339e5eae5e5ec7a49","modified":1506962305674},{"_id":"source/images/photography/25.jpg","hash":"1b95402818807a58bc7a497ce4173d376f63ea48","modified":1506962305686},{"_id":"source/images/photography/27.jpg","hash":"0cca5f7f8fb194c7f3c5a33a445cb496d9e11e15","modified":1506962305693},{"_id":"source/images/photography/30.jpg","hash":"609c4e1f5b0bc33003635f3565bb57ecf12e7fa6","modified":1506962305700},{"_id":"source/images/photography/33.jpg","hash":"8b0917ea67ee5c563cc2fd71f855faace6e41631","modified":1506962305707},{"_id":"source/images/photography/35.jpg","hash":"9bc7892dd33069a28de2f4a5a044a3ea9e617629","modified":1506962305711},{"_id":"source/images/photography/34.jpg","hash":"486835593f0e8b8e35e80b77f6efe828233c15da","modified":1506962305709},{"_id":"source/images/photography/36.jpg","hash":"655940e58b59e5e252905be05d901862999d8d2c","modified":1506962305713},{"_id":"source/images/photography/41.jpg","hash":"aa4d5eede09ac7dea287092ae7ec168be9769ea1","modified":1506962305727},{"_id":"source/images/photography/42.jpg","hash":"14db00e523b04ee17d3768b1ce5c58610b61687d","modified":1506962305730},{"_id":"source/images/photography/46.jpg","hash":"474a064c6d096d1720a24e748320130e2230354b","modified":1506962305741},{"_id":"source/images/photography/47.jpg","hash":"3a454806c4dd8e82f8625afa47f252b13291062c","modified":1506962305744},{"_id":"source/images/photography/49.jpg","hash":"23f9a5386d480bc9072fa4a052bfb5a14ca56545","modified":1506962305751},{"_id":"source/images/photography/51.jpg","hash":"805703a2ce37c6975217d95ad4736ac55604099c","modified":1506962305757},{"_id":"source/images/photography/50.jpg","hash":"e712a7b4258aa793d4a9f840774714a9c068b449","modified":1506962305754},{"_id":"themes/cactus-dark/source/css/_partial/archive.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1500409531637},{"_id":"themes/cactus-dark/layout/_partial/post/date.ejs","hash":"1e4023733ab7f1321c2d6ff75d358f3e49b6e42c","modified":1500409531593},{"_id":"themes/cactus-dark/layout/_partial/post/gallery.ejs","hash":"725ab823c2fb4a5e444eca3afa617d88f305ef71","modified":1500409531593},{"_id":"themes/cactus-dark/layout/_partial/post/actions_mobile.ejs","hash":"ff5c9511a7275ef8db4d89aecd81a0f62a5de86f","modified":1500409531592},{"_id":"themes/cactus-dark/layout/_partial/post/actions_desktop.ejs","hash":"1972780b529e7f1f213627704ee325ceb21717fc","modified":1500409531591},{"_id":"themes/cactus-dark/layout/_partial/post/tag.ejs","hash":"b35e8b20eff179b197fd97da3871bd84f3952634","modified":1500409531595},{"_id":"themes/cactus-dark/layout/_partial/post/share.ejs","hash":"8f31bd4d509a6c6aff35dfc76fd99460ffeeb0dd","modified":1500409531595},{"_id":"themes/cactus-dark/layout/_partial/post/title.ejs","hash":"67da1757316408a72393e6d2aab4ec635e1d30c1","modified":1500409531596},{"_id":"themes/cactus-dark/source/css/_highlight/agate.styl","hash":"c01db6c4e7648b217048a8deefeee189688a9290","modified":1500409531607},{"_id":"themes/cactus-dark/source/css/_highlight/androidstudio.styl","hash":"b0923fe15d0b5eb24d3c6236cb2fc30ee14a4c56","modified":1500409531608},{"_id":"themes/cactus-dark/source/css/_highlight/arta.styl","hash":"3bc322455f657aa29f455f91009034af08cdc65c","modified":1500409531609},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-cave-dark.styl","hash":"a6b1960d8a3b39d035e06ce92af4f00a259b5c56","modified":1500409531609},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-dune-dark.styl","hash":"68021a92fd7d6895426d0cc7f0929aa95633d742","modified":1500409531610},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-estuary-dark.styl","hash":"6c051f034c229c49ffc9a2ec96c032441b0c6586","modified":1500409531611},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-lakeside-dark.styl","hash":"64ab6ab93a092a890d3d0fdeb23e4b6a2d0f2887","modified":1500409531613},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-forest-dark.styl","hash":"15559324ee3a5f9bf6724ec9606f6f2e16cdc24d","modified":1500409531611},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-plateau-dark.styl","hash":"8a6c187afcd60152306c003e1a5903e57d9428dd","modified":1500409531613},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-savanna-dark.styl","hash":"5261a100e84cf34f4752c24dfaddfa05c7be96f7","modified":1500409531614},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-seaside-dark.styl","hash":"434b7f0bdd5f91bf79d5b4ca46820db4a8e10166","modified":1500409531616},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"fa0cccd0f0dc015218cf8c1bba0b53c8c9383135","modified":1500409531616},{"_id":"themes/cactus-dark/source/css/_highlight/codepen-embed.styl","hash":"7432ce9edb047b6382d28c82054a7e2a77e476c3","modified":1500409531617},{"_id":"themes/cactus-dark/source/css/_highlight/dark.styl","hash":"df4c1dc05567ad0812d0cd3133cb2a2a5fd23c04","modified":1500409531618},{"_id":"themes/cactus-dark/source/css/_highlight/darkula.styl","hash":"3c943561a885092286ec8db14e9177036bf8d21f","modified":1500409531619},{"_id":"themes/cactus-dark/source/css/_highlight/far.styl","hash":"5989aea14ccd0153d17ee19b3e125dae06c75f3c","modified":1500409531619},{"_id":"themes/cactus-dark/source/css/_highlight/ir-black.styl","hash":"c59db73998af32ce8419a5d2d335bcc9cfbaae45","modified":1500409531622},{"_id":"themes/cactus-dark/source/css/_highlight/hopscotch.styl","hash":"7ec8d75a9c9d58f65868ea64289873302d3fad5e","modified":1500409531620},{"_id":"themes/cactus-dark/source/css/_highlight/kimbie.styl","hash":"3b998c640eeb2c6192fee24bc78b4137de475dd7","modified":1500409531622},{"_id":"themes/cactus-dark/source/css/_highlight/monokai-sublime.styl","hash":"32955f699687b5fc2e4072804cb90925912d3c7c","modified":1500409531623},{"_id":"themes/cactus-dark/source/css/_highlight/obsidian.styl","hash":"8145db8ec349548f09d91d7a05c00c83ff84d146","modified":1500409531626},{"_id":"themes/cactus-dark/source/css/_highlight/paraiso.styl","hash":"50f1cee8a5b3b165b4184ead0a99dc564b62ef4f","modified":1500409531627},{"_id":"themes/cactus-dark/source/css/_highlight/pojoaque.styl","hash":"d9f4b35c9f6115029600a8a023b559013e2b4e75","modified":1500409531628},{"_id":"themes/cactus-dark/source/css/_highlight/rainbow.styl","hash":"516c7080d64b12730357358dee2adc42c43c4516","modified":1500409531630},{"_id":"themes/cactus-dark/source/css/_highlight/railscasts.styl","hash":"1ff800d9b6de464fafe591682cc48bf983202758","modified":1500409531629},{"_id":"themes/cactus-dark/source/css/_highlight/sunburst.styl","hash":"482bbb2bc461b22e9d6ce55f0f84767e1cfae99a","modified":1500409531631},{"_id":"themes/cactus-dark/source/css/_highlight/tomorrow-night-blue.styl","hash":"eeafa86697c857c4e9a84ad48c0d56a7154997a3","modified":1500409531632},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-heath-dark.styl","hash":"bf62cafe316eb874f1f43679957dc3add4fbea34","modified":1500409531612},{"_id":"themes/cactus-dark/source/css/_highlight/solarized-dark.styl","hash":"577458d1f6c02bc42e312066bf7dd7e427cab057","modified":1500409531630},{"_id":"themes/cactus-dark/source/css/_highlight/tomorrow-night-bright.styl","hash":"f3cd5ed391d40265e36fcd9f7daced52773fb886","modified":1500409531632},{"_id":"themes/cactus-dark/source/css/_highlight/tomorrow-night-eighties.styl","hash":"1cd947f3d414fa5c1435caea509f27c99f6dc5b3","modified":1500409531633},{"_id":"themes/cactus-dark/source/css/_highlight/tomorrow-night.styl","hash":"b2a175caa23631f764b2f6fe2bac9739f5f5e078","modified":1500409531634},{"_id":"themes/cactus-dark/source/css/_highlight/zenburn.styl","hash":"6908313d2666d31fc9d8658fd7e8dda3de2bb596","modified":1500409531636},{"_id":"themes/cactus-dark/source/css/_partial/comments.styl","hash":"d2700a2454fc2cd2d0e351d77db4f8d26de14da7","modified":1500409531638},{"_id":"themes/cactus-dark/source/css/_partial/article.styl","hash":"8a5190148143ace129c5ceb1bce4c84d48c080c7","modified":1506962305760},{"_id":"themes/cactus-dark/source/css/_partial/header.styl","hash":"a074d7cef936bec0b439e5d527e766abe261ae8b","modified":1524056055788},{"_id":"themes/cactus-dark/source/css/_partial/footer.styl","hash":"18d0dfecd18a216bf75cff72c46493f261421b40","modified":1500409531639},{"_id":"themes/cactus-dark/source/css/_partial/index.styl","hash":"27f1bce32e60f097b65bf178f49c80b4bf0fc0e6","modified":1519758711690},{"_id":"themes/cactus-dark/source/lib/justified-gallery/jquery.justifiedGallery.min.js","hash":"1c7fd3bd976f671ba396ad4dbbb7157006243bf5","modified":1500409531673},{"_id":"themes/cactus-dark/source/lib/justified-gallery/justifiedGallery.min.css","hash":"45fa2fad51cecfc41107dbd4637450b746a7cbc3","modified":1500409531673},{"_id":"themes/cactus-dark/source/lib/meslo-LG/styles.css","hash":"b366332901cf5cdf2b7891053cfa3791d06e52d5","modified":1500409531719},{"_id":"source/images/photography/07.jpg","hash":"1d0cbdfb21c0957825b7eb5bb4a0073609c6b037","modified":1506962305643},{"_id":"source/images/photography/48.jpg","hash":"ce21a31c240bf48beb9eec52eb45fe60474cf135","modified":1506962305748},{"_id":"themes/cactus-dark/source/css/_highlight/hybrid.styl","hash":"d3ee1bcefc94f5f87a2b76a689f4c31594501d07","modified":1500409531621},{"_id":"themes/cactus-dark/source/css/_highlight/monokai.styl","hash":"8489fc71bedefa8f271808126296fce6381f9e04","modified":1500409531625},{"_id":"themes/cactus-dark/source/lib/jquery/jquery.min.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1500409531671},{"_id":"themes/cactus-dark/source/css/_partial/post/actions_desktop.styl","hash":"58741c5c6b373bf579448f6ca6fd3772bfe003a3","modified":1553111687353},{"_id":"themes/cactus-dark/source/css/_partial/post/actions_mobile.styl","hash":"1db44e6c1b091150c9ad6737f65b240cd4dcd061","modified":1500409531642},{"_id":"themes/cactus-dark/source/lib/font-awesome/css/font-awesome.css","hash":"a02674d823c7b577d38c3cdb91953993b6e4b3a0","modified":1500409531653},{"_id":"themes/cactus-dark/source/lib/font-awesome/css/font-awesome.min.css","hash":"3c1d63dd1176c77f9f4cdb1616fbb08c31b9822f","modified":1500409531654},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1500409531657},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1500409531669},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1500409531668},{"_id":"source/images/me.png","hash":"3e80857cd9c5f65b1e6ed19187d75c75a28970fe","modified":1500409531005},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1500409531656},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1500409531663},{"_id":"source/images/d3.png","hash":"d95b51d9e951938b7cbd2a3fa3c110530aca87ce","modified":1555964814031},{"_id":"source/images/datascience.png","hash":"0208feeda4fcaa63478d801d6de4bf3eebb97d67","modified":1555095226236},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1500409531661},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","hash":"d895a1bd25e36c58b7f463ebe14de09f186d5ab4","modified":1500409531713},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","hash":"68700db02debd4b922304134da83b829cbfddfc9","modified":1500409531700},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","hash":"56fa0e33a390b704afc56af93a31576ccdbbdd9e","modified":1500409531719},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","hash":"7f7cdbdcc26279c04046632e22d872f111bc9399","modified":1500409531716},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","hash":"a9a431fc7a6c3a67c98021d4035c12a07a4f1070","modified":1500409531684},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","hash":"bfa1ed9a263ed78462f06d322de13bd5bd0906b2","modified":1500409531680},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","hash":"65ddb11e75ee93909e845ab912a36717c48f1c94","modified":1500409531697},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","hash":"2b912dd13f052f645ee19951604610bb350d50af","modified":1500409531691},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","hash":"5e220152adefe905b2197f873d7cee99eca50e91","modified":1500409531706},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","hash":"df202ce09cbdc70bc16b81983a13ef0f94e46f10","modified":1500409531710},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","hash":"96c97a0a098ca40802f948ae56fa37aa6683d034","modified":1500409531687},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","hash":"a8a8df3393bccc365335fc5eb0a62a6b7ccd32b9","modified":1500409531694},{"_id":"public/css/custom.css","hash":"1aaed3bcba576e70f5e8b2838450cedcda7d3ed5","modified":1555966263911},{"_id":"public/photography/index.html","hash":"2ef348e4cc0a10e76b067d526bf376dc64a680c8","modified":1555966264299},{"_id":"public/2017/10/01/progressive-web-apps/index.html","hash":"16288bca00904f875950ce068aff7649702c2adc","modified":1555966264299},{"_id":"public/2017/10/01/learning-react/index.html","hash":"4903721e69ce396a2f22839ff4e8c8c3b8e73979","modified":1555966264299},{"_id":"public/2017/04/19/hello-world/index.html","hash":"f16f672cc08085f333035e3c6a5d7acf3a843059","modified":1555966264299},{"_id":"public/archives/index.html","hash":"53479e55efac67c9177e1c3b3ee4294f54a6cb04","modified":1555966264299},{"_id":"public/archives/2017/index.html","hash":"03f571c67f6f207bdcea066613ecab172f17e913","modified":1555966264300},{"_id":"public/archives/2017/04/index.html","hash":"6257582d601031e1912848fe70a1efa347199418","modified":1555966264300},{"_id":"public/archives/2017/10/index.html","hash":"2f2f3ad2a9380f445107aaab151c7d48384fd872","modified":1555966264300},{"_id":"public/archives/2018/index.html","hash":"16c22f6f90904a8bc4b497690f54b31d336766eb","modified":1555966264300},{"_id":"public/archives/2018/04/index.html","hash":"6d56c61056fbba91d86a8a15e2c50f7944ccba5e","modified":1555966264300},{"_id":"public/archives/2019/index.html","hash":"9b3c1c4cb983caaf3c47f1211c0f85575b8f4b4d","modified":1555966264300},{"_id":"public/archives/2019/03/index.html","hash":"40a661d680f31c20ba3ea47e8f81ee019dc08f82","modified":1555966264300},{"_id":"public/archives/2019/04/index.html","hash":"5360e9dff613ab36513cc1b9d77e3b2bf548dc54","modified":1555966264300},{"_id":"public/index.html","hash":"e1e2ad16e5c2a1c5d3a5c418f31bd4bb0256cae7","modified":1555966264300},{"_id":"public/tags/react/index.html","hash":"ef443eed1fe9f24783372afcf26713bd06ff58cf","modified":1555966264300},{"_id":"public/tags/javascript/index.html","hash":"44875463faae62b45aeac33cbcbe5f309bc70fa3","modified":1555966264300},{"_id":"public/tags/hello/index.html","hash":"ae3ce3e3b87f66c6fa91a86947b629f146fb69f3","modified":1555966264300},{"_id":"public/tags/xhr/index.html","hash":"ea66491255b5e6730d8a41434f52423aa00cfc94","modified":1555966264300},{"_id":"public/tags/ajax/index.html","hash":"ca4e1ad5e304873aeb29b9f9ed3d3d6c24e235a2","modified":1555966264300},{"_id":"public/tags/cors/index.html","hash":"d8ec5874f8e79737a47bda22b1f78c35ae19027a","modified":1555966264301},{"_id":"public/tags/d3/index.html","hash":"c275d6a72c8a2f64e4f82d43ed9454dd823e201d","modified":1555966264301},{"_id":"public/tags/data/index.html","hash":"68b3c83a01c4d6a4dfac66f1ad4a6b3b0843dee6","modified":1555966264301},{"_id":"public/tags/data-science/index.html","hash":"99156d0faac3617a2709139263e710515abcddf8","modified":1555966264301},{"_id":"public/tags/pwa/index.html","hash":"03eef527c5e26c6ead7b39cf9b72fc56d46bdc6b","modified":1555966264301},{"_id":"public/tags/programming/index.html","hash":"b1f717f294f932c92e8fab1d836f9d54014a05b6","modified":1555966264301},{"_id":"public/about/index.html","hash":"0c00a5681602ed5c7d81b1b9fec90c4532372d0d","modified":1555966264301},{"_id":"public/2019/04/22/programming-paradigms/index.html","hash":"d481f431ace0071eb350c605be7d15e0aaff4320","modified":1555966264301},{"_id":"public/2019/04/11/data-science/index.html","hash":"7e897569811e36a7976f88a1459bf1c6f07c3e88","modified":1555966264301},{"_id":"public/2019/03/14/cross-origin-resource-sharing/index.html","hash":"09e2e1b5cd61b80c57a89637bda63214b86611f3","modified":1555966264301},{"_id":"public/2018/04/10/react-fundamentals/index.html","hash":"793a331c68797e724836f15a454484f2e8e2b70f","modified":1555966264301},{"_id":"public/2017/04/23/d3/index.html","hash":"c30dc836b8f22d8bf57d4c16db7a697eb0575c5b","modified":1555966264301},{"_id":"public/images/npmlogo.svg","hash":"e3030b78a240b11b27175648170db2dbdb06c07e","modified":1555966264338},{"_id":"public/images/npm.png","hash":"e3030b78a240b11b27175648170db2dbdb06c07e","modified":1555966264338},{"_id":"public/images/react.png","hash":"649e2805ef6ca039efe0d58a9c33265c7d75a6ed","modified":1555966264338},{"_id":"public/images/photography/06.jpg","hash":"6d1c77edca71b0e7f8762bf5a3ad5fd68264f0cc","modified":1555966264338},{"_id":"public/images/photography/08.jpg","hash":"c8a0404c47c2b2c4c24057d3c8f21d9fb25c4bc2","modified":1555966264338},{"_id":"public/images/photography/03.jpg","hash":"9db6699938783d352dc6518a16a84bbef5be8e0b","modified":1555966264338},{"_id":"public/images/reactrouter.png","hash":"4d8b8e4d7cfc79efbc35e86ed4b5e7c230609a4a","modified":1555966264338},{"_id":"public/images/photography/16.jpg","hash":"453360cfbf6d1fdf456c3cd6ee14eca0ae04f702","modified":1555966264338},{"_id":"public/images/photography/17.jpg","hash":"fa8f05fb93078c73a73922a5bf8c94bce57dcb9a","modified":1555966264338},{"_id":"public/images/reactlogo.png","hash":"d6b2e01797df5b6ac8b56e9acb243ce602a4c5ca","modified":1555966264339},{"_id":"public/images/photography/19.jpg","hash":"1d043b6a427d91374b8793677963100e1eaf5367","modified":1555966264339},{"_id":"public/images/photography/21.jpg","hash":"624e35b2a2bba816cd92e6f057b1c36cca191388","modified":1555966264339},{"_id":"public/images/photography/22.jpg","hash":"ddd385f9147a357f70869d89823817c52baaa13f","modified":1555966264339},{"_id":"public/images/photography/23.jpg","hash":"0e47e60708a571b7aa6949f9cd0cbf58d95034a8","modified":1555966264339},{"_id":"public/images/photography/24.jpg","hash":"75496f4fb22d4e2e24e0eee59022cd77d9769327","modified":1555966264339},{"_id":"public/images/photography/26.jpg","hash":"9f6af451de8184103612ed2bdbc9ddb9baee8432","modified":1555966264339},{"_id":"public/images/photography/28.jpg","hash":"3437625d8d90714946c227e08a5ebae1bd7ae7f9","modified":1555966264339},{"_id":"public/images/photography/29.jpg","hash":"6ba27c127fbdee8fc46c88557e55ece99cbb28df","modified":1555966264339},{"_id":"public/images/photography/32.jpg","hash":"540e0522448fa96223356cdf8dd314c6d1692f97","modified":1555966264340},{"_id":"public/images/photography/31.jpg","hash":"e450514fedf3ecce37fa3376be6e45a601a96093","modified":1555966264340},{"_id":"public/images/photography/38.jpg","hash":"19d7298415a5104ce1b0f6a7f0106be4f84cb60b","modified":1555966264340},{"_id":"public/images/photography/39.jpg","hash":"d6ff147ac7e2ce145746b87c26e69abac6d4dc08","modified":1555966264340},{"_id":"public/images/photography/37.jpg","hash":"25db47b1b1a50cd87b1b2bfea65f9f4472f91c0d","modified":1555966264340},{"_id":"public/images/photography/40.jpg","hash":"ef1348a4f1079d45f1205f1663c9987e8f93be32","modified":1555966264340},{"_id":"public/images/photography/43.jpg","hash":"5ad6281def189eb00db687c27d68b91332d014cb","modified":1555966264342},{"_id":"public/images/photography/45.jpg","hash":"301a720e0fda9d88fd5f52b5f10b7a2a389762fe","modified":1555966264342},{"_id":"public/images/photography/44.jpg","hash":"2c93660ec56ae87df5a591ae64e7f1961741f87c","modified":1555966264342},{"_id":"public/images/favicon.ico","hash":"758eaf22c8b7b2e638cb36d02b12b2a7c8caa8ca","modified":1555966264342},{"_id":"public/images/apple-touch-icon.png","hash":"fe56b876b7403bc897da418116e9d46453ad6659","modified":1555966264342},{"_id":"public/images/favicon-192x192.png","hash":"da6c651903505976fcd2f07c737449f6cebebad7","modified":1555966264343},{"_id":"public/images/logo.png","hash":"9c8e91283479afabe42d0e7023c4a37094e372b1","modified":1555966264343},{"_id":"public/images/paradigms.png","hash":"00dc9d46517dbe22bae7798a28f8434d1ab8b5f8","modified":1555966264663},{"_id":"public/images/pwa.png","hash":"fda84d3e3c98247be682691a392c90398b995ac0","modified":1555966264663},{"_id":"public/images/photography/01.jpg","hash":"9aaf05f925b5c6d5425842ea1e9ed893c3ace8f7","modified":1555966264664},{"_id":"public/images/photography/09.jpg","hash":"002e6f2e456c27cb3011de6bdcc32173675bc8b5","modified":1555966264664},{"_id":"public/images/photography/05.jpg","hash":"bda404045757ec6bc6ff7a9b17de71a050328662","modified":1555966264664},{"_id":"public/images/photography/02.jpg","hash":"83aef8272c89b7b4041738c73ac03a62a7648e07","modified":1555966264664},{"_id":"public/images/photography/04.jpg","hash":"734ce17c29eda4ebde7d1b4fe533bb89c98e8456","modified":1555966264664},{"_id":"public/images/photography/10.jpg","hash":"00c4d0db9603823872aaa6266baf071dc8574d93","modified":1555966264664},{"_id":"public/images/photography/11.jpg","hash":"14acd52d244fcfd60ec1fc2a5973ae85a72630ba","modified":1555966264664},{"_id":"public/images/photography/14.jpg","hash":"080334a45db355ae4c0d75698982951e371b7012","modified":1555966264665},{"_id":"public/images/photography/12.jpg","hash":"c406e43e9c6c34124c5c9d7329fb0179e333840d","modified":1555966264665},{"_id":"public/images/photography/15.jpg","hash":"aefd751ed7e59d8a60654c591b371231382f3f09","modified":1555966264665},{"_id":"public/images/photography/13.jpg","hash":"1441a072621c8c1548c589f92fd023cfa623290f","modified":1555966264665},{"_id":"public/images/photography/18.jpg","hash":"73d021d282a357ca4e3aaf9d1ee14f3856a7ab00","modified":1555966264665},{"_id":"public/images/photography/20.jpg","hash":"b7dc30c50ce435f522a7a20339e5eae5e5ec7a49","modified":1555966264665},{"_id":"public/images/photography/25.jpg","hash":"1b95402818807a58bc7a497ce4173d376f63ea48","modified":1555966264665},{"_id":"public/images/photography/27.jpg","hash":"0cca5f7f8fb194c7f3c5a33a445cb496d9e11e15","modified":1555966264665},{"_id":"public/images/photography/30.jpg","hash":"609c4e1f5b0bc33003635f3565bb57ecf12e7fa6","modified":1555966264665},{"_id":"public/images/photography/33.jpg","hash":"8b0917ea67ee5c563cc2fd71f855faace6e41631","modified":1555966264666},{"_id":"public/images/photography/35.jpg","hash":"9bc7892dd33069a28de2f4a5a044a3ea9e617629","modified":1555966264666},{"_id":"public/images/photography/34.jpg","hash":"486835593f0e8b8e35e80b77f6efe828233c15da","modified":1555966264666},{"_id":"public/images/photography/36.jpg","hash":"655940e58b59e5e252905be05d901862999d8d2c","modified":1555966264666},{"_id":"public/images/photography/41.jpg","hash":"aa4d5eede09ac7dea287092ae7ec168be9769ea1","modified":1555966264666},{"_id":"public/images/photography/42.jpg","hash":"14db00e523b04ee17d3768b1ce5c58610b61687d","modified":1555966264666},{"_id":"public/images/photography/46.jpg","hash":"474a064c6d096d1720a24e748320130e2230354b","modified":1555966264666},{"_id":"public/images/photography/47.jpg","hash":"3a454806c4dd8e82f8625afa47f252b13291062c","modified":1555966264666},{"_id":"public/images/photography/49.jpg","hash":"23f9a5386d480bc9072fa4a052bfb5a14ca56545","modified":1555966264666},{"_id":"public/images/photography/51.jpg","hash":"805703a2ce37c6975217d95ad4736ac55604099c","modified":1555966264667},{"_id":"public/images/photography/50.jpg","hash":"e712a7b4258aa793d4a9f840774714a9c068b449","modified":1555966264667},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1555966264667},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1555966264667},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1555966264667},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1555966264667},{"_id":"public/js/main.js","hash":"84de9c1a8a4a82b9446163c47b89937f44a7dee0","modified":1555966264676},{"_id":"public/lib/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1555966264676},{"_id":"public/lib/meslo-LG/styles.css","hash":"eb88d0b9f1bbef99070e9627e2c96d892036bf7e","modified":1555966264676},{"_id":"public/css/style.css","hash":"4c4c2606afdcdd1c20ecdf2c872c61f9904bf441","modified":1555966264676},{"_id":"public/images/cors.png","hash":"07738c89ad74bbaf437c9e9efc14f8f7246006be","modified":1555966264676},{"_id":"public/images/photography/07.jpg","hash":"1d0cbdfb21c0957825b7eb5bb4a0073609c6b037","modified":1555966264676},{"_id":"public/images/photography/48.jpg","hash":"ce21a31c240bf48beb9eec52eb45fe60474cf135","modified":1555966264676},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1555966264677},{"_id":"public/lib/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1555966264699},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1555966264711},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1555966264749},{"_id":"public/images/me.png","hash":"3e80857cd9c5f65b1e6ed19187d75c75a28970fe","modified":1555966264783},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1555966264842},{"_id":"public/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","hash":"d895a1bd25e36c58b7f463ebe14de09f186d5ab4","modified":1555966264854},{"_id":"public/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","hash":"68700db02debd4b922304134da83b829cbfddfc9","modified":1555966264855},{"_id":"public/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","hash":"7f7cdbdcc26279c04046632e22d872f111bc9399","modified":1555966264855},{"_id":"public/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","hash":"65ddb11e75ee93909e845ab912a36717c48f1c94","modified":1555966264856},{"_id":"public/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","hash":"96c97a0a098ca40802f948ae56fa37aa6683d034","modified":1555966264856},{"_id":"public/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","hash":"a9a431fc7a6c3a67c98021d4035c12a07a4f1070","modified":1555966264866},{"_id":"public/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","hash":"56fa0e33a390b704afc56af93a31576ccdbbdd9e","modified":1555966264866},{"_id":"public/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","hash":"a8a8df3393bccc365335fc5eb0a62a6b7ccd32b9","modified":1555966264867},{"_id":"public/lib/jquery/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1555966264872},{"_id":"public/images/d3.png","hash":"d95b51d9e951938b7cbd2a3fa3c110530aca87ce","modified":1555966264872},{"_id":"public/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","hash":"5e220152adefe905b2197f873d7cee99eca50e91","modified":1555966264881},{"_id":"public/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","hash":"df202ce09cbdc70bc16b81983a13ef0f94e46f10","modified":1555966264881},{"_id":"public/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","hash":"2b912dd13f052f645ee19951604610bb350d50af","modified":1555966264881},{"_id":"public/images/datascience.png","hash":"0208feeda4fcaa63478d801d6de4bf3eebb97d67","modified":1555966264885},{"_id":"public/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","hash":"bfa1ed9a263ed78462f06d322de13bd5bd0906b2","modified":1555966264889}],"Category":[],"Data":[{"_id":"projects","data":[{"name":"tenzin.ca","url":"http://tenzin.ca/","desc":"home"},{"name":"curriculum vitae","url":"#","desc":"hire me"},{"name":"photography","url":"/photography/","desc":"a brief portfolio"},{"name":"eve online","url":"https://github.com/citizenofearth/eve","desc":"musings on the scifi space simulator"},{"name":"javascript patterns","url":"https://github.com/citizenofearth/javascript-patterns","desc":"common recipes for javascript"},{"name":"todomvc","url":"https://github.com/citizenofearth/todomvc","desc":"basic todo app written in several front-end frameworks"},{"name":"es6 features","url":"https://github.com/citizenofearth/es6features","desc":"overview of ecmascript 6"},{"name":"d3","url":"https://github.com/citizenofearth/d3","desc":"data driven documents"}]}],"Page":[{"_content":".button {\n\tdisplay: inline-block;\n\tmargin: 0;\n\tpadding: 0.5rem 1.5rem;\n\tborder: 0;\n\tbackground-color: #6b847b;\n\tcolor: #fff;\n\ttext-decoration: none;\n\tfont-weight: 700;\n\tfont-size: 1rem;\n\tline-height: 1.5;\n\tfont-family: \"Helvetica Neue\", Arial, sans-serif;\n\tcursor: pointer;\n\t-webkit-appearance: none;\n\t-webkit-font-smoothing: antialiased;\n}\n\n.button:hover {\n\topacity: 0.85;\n}\n\n.button:active {\n\tbox-shadow: inset 0 3px 4px hsla(0, 0%, 0%, 0.2);\n}\n\n.button:focus {\n\toutline: thin dotted #444;\n\toutline: 5px auto -webkit-focus-ring-color;\n\toutline-offset: -2px;\n}","source":"css/custom.css","raw":".button {\n\tdisplay: inline-block;\n\tmargin: 0;\n\tpadding: 0.5rem 1.5rem;\n\tborder: 0;\n\tbackground-color: #6b847b;\n\tcolor: #fff;\n\ttext-decoration: none;\n\tfont-weight: 700;\n\tfont-size: 1rem;\n\tline-height: 1.5;\n\tfont-family: \"Helvetica Neue\", Arial, sans-serif;\n\tcursor: pointer;\n\t-webkit-appearance: none;\n\t-webkit-font-smoothing: antialiased;\n}\n\n.button:hover {\n\topacity: 0.85;\n}\n\n.button:active {\n\tbox-shadow: inset 0 3px 4px hsla(0, 0%, 0%, 0.2);\n}\n\n.button:focus {\n\toutline: thin dotted #444;\n\toutline: 5px auto -webkit-focus-ring-color;\n\toutline-offset: -2px;\n}","date":"2017-10-02T16:38:25.622Z","updated":"2017-10-02T16:38:25.622Z","path":"css/custom.css","layout":"false","title":"","comments":1,"_id":"cjusu50iy0001wkqz2380zf6z","content":".button {\n\tdisplay: inline-block;\n\tmargin: 0;\n\tpadding: 0.5rem 1.5rem;\n\tborder: 0;\n\tbackground-color: #6b847b;\n\tcolor: #fff;\n\ttext-decoration: none;\n\tfont-weight: 700;\n\tfont-size: 1rem;\n\tline-height: 1.5;\n\tfont-family: \"Helvetica Neue\", Arial, sans-serif;\n\tcursor: pointer;\n\t-webkit-appearance: none;\n\t-webkit-font-smoothing: antialiased;\n}\n\n.button:hover {\n\topacity: 0.85;\n}\n\n.button:active {\n\tbox-shadow: inset 0 3px 4px hsla(0, 0%, 0%, 0.2);\n}\n\n.button:focus {\n\toutline: thin dotted #444;\n\toutline: 5px auto -webkit-focus-ring-color;\n\toutline-offset: -2px;\n}","site":{"data":{"projects":[{"name":"tenzin.ca","url":"http://tenzin.ca/","desc":"home"},{"name":"curriculum vitae","url":"#","desc":"hire me"},{"name":"photography","url":"/photography/","desc":"a brief portfolio"},{"name":"eve online","url":"https://github.com/citizenofearth/eve","desc":"musings on the scifi space simulator"},{"name":"javascript patterns","url":"https://github.com/citizenofearth/javascript-patterns","desc":"common recipes for javascript"},{"name":"todomvc","url":"https://github.com/citizenofearth/todomvc","desc":"basic todo app written in several front-end frameworks"},{"name":"es6 features","url":"https://github.com/citizenofearth/es6features","desc":"overview of ecmascript 6"},{"name":"d3","url":"https://github.com/citizenofearth/d3","desc":"data driven documents"}]}},"excerpt":"","more":".button {\n\tdisplay: inline-block;\n\tmargin: 0;\n\tpadding: 0.5rem 1.5rem;\n\tborder: 0;\n\tbackground-color: #6b847b;\n\tcolor: #fff;\n\ttext-decoration: none;\n\tfont-weight: 700;\n\tfont-size: 1rem;\n\tline-height: 1.5;\n\tfont-family: \"Helvetica Neue\", Arial, sans-serif;\n\tcursor: pointer;\n\t-webkit-appearance: none;\n\t-webkit-font-smoothing: antialiased;\n}\n\n.button:hover {\n\topacity: 0.85;\n}\n\n.button:active {\n\tbox-shadow: inset 0 3px 4px hsla(0, 0%, 0%, 0.2);\n}\n\n.button:focus {\n\toutline: thin dotted #444;\n\toutline: 5px auto -webkit-focus-ring-color;\n\toutline-offset: -2px;\n}"},{"title":"photography","date":"2017-04-10T09:53:24.000Z","_content":"\n_photos taken by me on canon 40d or minolta hi-matic 7s_\n\n![alt text](../images/photography/01.jpg \"camping on wolfe island in kingston, ontario\")\n\n![alt text](../images/photography/02.jpg \"elmer holmes bobst libarary in new york university\")\n\n![alt text](../images/photography/03.jpg \"cuba : lonely 5am swim\")\n\n![alt text](../images/photography/07.jpg \"cuba : palm tree bark\")\n\n![alt text](../images/photography/05.jpg \"cuba : home\")\n\n![alt text](../images/photography/08.jpg \"cuba : impending storms\")\n\n![alt text](../images/photography/09.jpg \"cuba : relaxing\")\n\n![alt text](../images/photography/10.jpg \"cuba : horse in the shade\")\n\n![alt text](../images/photography/11.jpg \"cuba : horse in the shade 2\")\n\n![alt text](../images/photography/12.jpg \"cuba : park in matanzas\")\n\n![alt text](../images/photography/06.jpg \"cuba : friend on the beach\")\n\n![alt text](../images/photography/04.jpg \"cuba : perfect shade\")\n\n![alt text](../images/photography/13.jpg \"montreal : barbed wire\")\n\n![alt text](../images/photography/14.jpg \"montreal : metro system\")\n\n![alt text](../images/photography/15.jpg \"montreal : metro system 2\")\n\n![alt text](../images/photography/16.jpg \"montreal : metro system 3\")\n\n![alt text](../images/photography/17.jpg \"montreal : 'l'homme' sculpture by alexander calder\")\n\n![alt text](../images/photography/18.jpg \"february in chicago\")\n\n![alt text](../images/photography/19.jpg \"february in chicago 2\")\n\n![alt text](../images/photography/20.jpg \"didi\")\n\n![alt text](../images/photography/21.jpg \"didi 2\")\n\n![alt text](../images/photography/22.jpg \"montreal planetarium\")\n\n![alt text](../images/photography/23.jpg \"full bloom\")\n\n![alt text](../images/photography/24.jpg \"downtown montreal\")\n\n![alt text](../images/photography/27.jpg \"downtown montreal 2\")\n\n![alt text](../images/photography/25.jpg \"toronto : street scrabble in kensington market\")\n\n![alt text](../images/photography/26.jpg \"rememberance of things past\")\n\n![alt text](../images/photography/28.jpg \"wu tang clan\")\n\n![alt text](../images/photography/29.jpg \"sun hits the face of a drummer at occupy montreal protests\")\n\n![alt text](../images/photography/30.jpg \"occupy montreal\")\n\n![alt text](../images/photography/31.jpg \"an inch above ground\")\n\n![alt text](../images/photography/32.jpg \"montreal : beer and bowling\")\n\n![alt text](../images/photography/33.jpg \"montreal : beer and bowling 2\")\n\n![alt text](../images/photography/34.jpg \"new york : halloween\")\n\n![alt text](../images/photography/36.jpg \"new york : halloween 2\")\n\n![alt text](../images/photography/37.jpg \"break\")\n\n![alt text](../images/photography/38.jpg \"break 2\")\n\n![alt text](../images/photography/39.jpg \"rickard's\")\n\n![alt text](../images/photography/40.jpg \"autumn night in montreal\")\n\n![alt text](../images/photography/41.jpg \"chasing waterfalls\")\n\n![alt text](../images/photography/42.jpg \"chasing waterfalls 2\")\n\n![alt text](../images/photography/43.jpg \"chasing waterfalls 3\")\n\n![alt text](../images/photography/44.jpg \"chasing waterfalls 4\")\n\n![alt text](../images/photography/45.jpg \"montreal : sculpture in parc jean drapeau\")\n\n![alt text](../images/photography/46.jpg \"montreal : sculpture in parc jean drapeau 2\")\n\n![alt text](../images/photography/47.jpg \"montreal : sculpture in parc jean drapeau 3\")\n\n![alt text](../images/photography/48.jpg \"mother nature's bronchioles\")\n\n![alt text](../images/photography/50.jpg \"montreal : silo 5 in old montreal\")\n","source":"photography/index.md","raw":"---\ntitle: photography\ndate: 2017-04-10 5:53:24\n---\n\n_photos taken by me on canon 40d or minolta hi-matic 7s_\n\n![alt text](../images/photography/01.jpg \"camping on wolfe island in kingston, ontario\")\n\n![alt text](../images/photography/02.jpg \"elmer holmes bobst libarary in new york university\")\n\n![alt text](../images/photography/03.jpg \"cuba : lonely 5am swim\")\n\n![alt text](../images/photography/07.jpg \"cuba : palm tree bark\")\n\n![alt text](../images/photography/05.jpg \"cuba : home\")\n\n![alt text](../images/photography/08.jpg \"cuba : impending storms\")\n\n![alt text](../images/photography/09.jpg \"cuba : relaxing\")\n\n![alt text](../images/photography/10.jpg \"cuba : horse in the shade\")\n\n![alt text](../images/photography/11.jpg \"cuba : horse in the shade 2\")\n\n![alt text](../images/photography/12.jpg \"cuba : park in matanzas\")\n\n![alt text](../images/photography/06.jpg \"cuba : friend on the beach\")\n\n![alt text](../images/photography/04.jpg \"cuba : perfect shade\")\n\n![alt text](../images/photography/13.jpg \"montreal : barbed wire\")\n\n![alt text](../images/photography/14.jpg \"montreal : metro system\")\n\n![alt text](../images/photography/15.jpg \"montreal : metro system 2\")\n\n![alt text](../images/photography/16.jpg \"montreal : metro system 3\")\n\n![alt text](../images/photography/17.jpg \"montreal : 'l'homme' sculpture by alexander calder\")\n\n![alt text](../images/photography/18.jpg \"february in chicago\")\n\n![alt text](../images/photography/19.jpg \"february in chicago 2\")\n\n![alt text](../images/photography/20.jpg \"didi\")\n\n![alt text](../images/photography/21.jpg \"didi 2\")\n\n![alt text](../images/photography/22.jpg \"montreal planetarium\")\n\n![alt text](../images/photography/23.jpg \"full bloom\")\n\n![alt text](../images/photography/24.jpg \"downtown montreal\")\n\n![alt text](../images/photography/27.jpg \"downtown montreal 2\")\n\n![alt text](../images/photography/25.jpg \"toronto : street scrabble in kensington market\")\n\n![alt text](../images/photography/26.jpg \"rememberance of things past\")\n\n![alt text](../images/photography/28.jpg \"wu tang clan\")\n\n![alt text](../images/photography/29.jpg \"sun hits the face of a drummer at occupy montreal protests\")\n\n![alt text](../images/photography/30.jpg \"occupy montreal\")\n\n![alt text](../images/photography/31.jpg \"an inch above ground\")\n\n![alt text](../images/photography/32.jpg \"montreal : beer and bowling\")\n\n![alt text](../images/photography/33.jpg \"montreal : beer and bowling 2\")\n\n![alt text](../images/photography/34.jpg \"new york : halloween\")\n\n![alt text](../images/photography/36.jpg \"new york : halloween 2\")\n\n![alt text](../images/photography/37.jpg \"break\")\n\n![alt text](../images/photography/38.jpg \"break 2\")\n\n![alt text](../images/photography/39.jpg \"rickard's\")\n\n![alt text](../images/photography/40.jpg \"autumn night in montreal\")\n\n![alt text](../images/photography/41.jpg \"chasing waterfalls\")\n\n![alt text](../images/photography/42.jpg \"chasing waterfalls 2\")\n\n![alt text](../images/photography/43.jpg \"chasing waterfalls 3\")\n\n![alt text](../images/photography/44.jpg \"chasing waterfalls 4\")\n\n![alt text](../images/photography/45.jpg \"montreal : sculpture in parc jean drapeau\")\n\n![alt text](../images/photography/46.jpg \"montreal : sculpture in parc jean drapeau 2\")\n\n![alt text](../images/photography/47.jpg \"montreal : sculpture in parc jean drapeau 3\")\n\n![alt text](../images/photography/48.jpg \"mother nature's bronchioles\")\n\n![alt text](../images/photography/50.jpg \"montreal : silo 5 in old montreal\")\n","updated":"2019-03-20T19:54:47.352Z","path":"photography/index.html","comments":1,"layout":"page","_id":"cjusu50j40003wkqzcq9nk4tt","content":"<p><em>photos taken by me on canon 40d or minolta hi-matic 7s</em></p>\n<p><img src=\"../images/photography/01.jpg\" alt=\"alt text\" title=\"camping on wolfe island in kingston, ontario\"></p>\n<p><img src=\"../images/photography/02.jpg\" alt=\"alt text\" title=\"elmer holmes bobst libarary in new york university\"></p>\n<p><img src=\"../images/photography/03.jpg\" alt=\"alt text\" title=\"cuba : lonely 5am swim\"></p>\n<p><img src=\"../images/photography/07.jpg\" alt=\"alt text\" title=\"cuba : palm tree bark\"></p>\n<p><img src=\"../images/photography/05.jpg\" alt=\"alt text\" title=\"cuba : home\"></p>\n<p><img src=\"../images/photography/08.jpg\" alt=\"alt text\" title=\"cuba : impending storms\"></p>\n<p><img src=\"../images/photography/09.jpg\" alt=\"alt text\" title=\"cuba : relaxing\"></p>\n<p><img src=\"../images/photography/10.jpg\" alt=\"alt text\" title=\"cuba : horse in the shade\"></p>\n<p><img src=\"../images/photography/11.jpg\" alt=\"alt text\" title=\"cuba : horse in the shade 2\"></p>\n<p><img src=\"../images/photography/12.jpg\" alt=\"alt text\" title=\"cuba : park in matanzas\"></p>\n<p><img src=\"../images/photography/06.jpg\" alt=\"alt text\" title=\"cuba : friend on the beach\"></p>\n<p><img src=\"../images/photography/04.jpg\" alt=\"alt text\" title=\"cuba : perfect shade\"></p>\n<p><img src=\"../images/photography/13.jpg\" alt=\"alt text\" title=\"montreal : barbed wire\"></p>\n<p><img src=\"../images/photography/14.jpg\" alt=\"alt text\" title=\"montreal : metro system\"></p>\n<p><img src=\"../images/photography/15.jpg\" alt=\"alt text\" title=\"montreal : metro system 2\"></p>\n<p><img src=\"../images/photography/16.jpg\" alt=\"alt text\" title=\"montreal : metro system 3\"></p>\n<p><img src=\"../images/photography/17.jpg\" alt=\"alt text\" title=\"montreal : &#39;l&#39;homme&#39; sculpture by alexander calder\"></p>\n<p><img src=\"../images/photography/18.jpg\" alt=\"alt text\" title=\"february in chicago\"></p>\n<p><img src=\"../images/photography/19.jpg\" alt=\"alt text\" title=\"february in chicago 2\"></p>\n<p><img src=\"../images/photography/20.jpg\" alt=\"alt text\" title=\"didi\"></p>\n<p><img src=\"../images/photography/21.jpg\" alt=\"alt text\" title=\"didi 2\"></p>\n<p><img src=\"../images/photography/22.jpg\" alt=\"alt text\" title=\"montreal planetarium\"></p>\n<p><img src=\"../images/photography/23.jpg\" alt=\"alt text\" title=\"full bloom\"></p>\n<p><img src=\"../images/photography/24.jpg\" alt=\"alt text\" title=\"downtown montreal\"></p>\n<p><img src=\"../images/photography/27.jpg\" alt=\"alt text\" title=\"downtown montreal 2\"></p>\n<p><img src=\"../images/photography/25.jpg\" alt=\"alt text\" title=\"toronto : street scrabble in kensington market\"></p>\n<p><img src=\"../images/photography/26.jpg\" alt=\"alt text\" title=\"rememberance of things past\"></p>\n<p><img src=\"../images/photography/28.jpg\" alt=\"alt text\" title=\"wu tang clan\"></p>\n<p><img src=\"../images/photography/29.jpg\" alt=\"alt text\" title=\"sun hits the face of a drummer at occupy montreal protests\"></p>\n<p><img src=\"../images/photography/30.jpg\" alt=\"alt text\" title=\"occupy montreal\"></p>\n<p><img src=\"../images/photography/31.jpg\" alt=\"alt text\" title=\"an inch above ground\"></p>\n<p><img src=\"../images/photography/32.jpg\" alt=\"alt text\" title=\"montreal : beer and bowling\"></p>\n<p><img src=\"../images/photography/33.jpg\" alt=\"alt text\" title=\"montreal : beer and bowling 2\"></p>\n<p><img src=\"../images/photography/34.jpg\" alt=\"alt text\" title=\"new york : halloween\"></p>\n<p><img src=\"../images/photography/36.jpg\" alt=\"alt text\" title=\"new york : halloween 2\"></p>\n<p><img src=\"../images/photography/37.jpg\" alt=\"alt text\" title=\"break\"></p>\n<p><img src=\"../images/photography/38.jpg\" alt=\"alt text\" title=\"break 2\"></p>\n<p><img src=\"../images/photography/39.jpg\" alt=\"alt text\" title=\"rickard&#39;s\"></p>\n<p><img src=\"../images/photography/40.jpg\" alt=\"alt text\" title=\"autumn night in montreal\"></p>\n<p><img src=\"../images/photography/41.jpg\" alt=\"alt text\" title=\"chasing waterfalls\"></p>\n<p><img src=\"../images/photography/42.jpg\" alt=\"alt text\" title=\"chasing waterfalls 2\"></p>\n<p><img src=\"../images/photography/43.jpg\" alt=\"alt text\" title=\"chasing waterfalls 3\"></p>\n<p><img src=\"../images/photography/44.jpg\" alt=\"alt text\" title=\"chasing waterfalls 4\"></p>\n<p><img src=\"../images/photography/45.jpg\" alt=\"alt text\" title=\"montreal : sculpture in parc jean drapeau\"></p>\n<p><img src=\"../images/photography/46.jpg\" alt=\"alt text\" title=\"montreal : sculpture in parc jean drapeau 2\"></p>\n<p><img src=\"../images/photography/47.jpg\" alt=\"alt text\" title=\"montreal : sculpture in parc jean drapeau 3\"></p>\n<p><img src=\"../images/photography/48.jpg\" alt=\"alt text\" title=\"mother nature&#39;s bronchioles\"></p>\n<p><img src=\"../images/photography/50.jpg\" alt=\"alt text\" title=\"montreal : silo 5 in old montreal\"></p>\n","site":{"data":{"projects":[{"name":"tenzin.ca","url":"http://tenzin.ca/","desc":"home"},{"name":"curriculum vitae","url":"#","desc":"hire me"},{"name":"photography","url":"/photography/","desc":"a brief portfolio"},{"name":"eve online","url":"https://github.com/citizenofearth/eve","desc":"musings on the scifi space simulator"},{"name":"javascript patterns","url":"https://github.com/citizenofearth/javascript-patterns","desc":"common recipes for javascript"},{"name":"todomvc","url":"https://github.com/citizenofearth/todomvc","desc":"basic todo app written in several front-end frameworks"},{"name":"es6 features","url":"https://github.com/citizenofearth/es6features","desc":"overview of ecmascript 6"},{"name":"d3","url":"https://github.com/citizenofearth/d3","desc":"data driven documents"}]}},"excerpt":"","more":"<p><em>photos taken by me on canon 40d or minolta hi-matic 7s</em></p>\n<p><img src=\"../images/photography/01.jpg\" alt=\"alt text\" title=\"camping on wolfe island in kingston, ontario\"></p>\n<p><img src=\"../images/photography/02.jpg\" alt=\"alt text\" title=\"elmer holmes bobst libarary in new york university\"></p>\n<p><img src=\"../images/photography/03.jpg\" alt=\"alt text\" title=\"cuba : lonely 5am swim\"></p>\n<p><img src=\"../images/photography/07.jpg\" alt=\"alt text\" title=\"cuba : palm tree bark\"></p>\n<p><img src=\"../images/photography/05.jpg\" alt=\"alt text\" title=\"cuba : home\"></p>\n<p><img src=\"../images/photography/08.jpg\" alt=\"alt text\" title=\"cuba : impending storms\"></p>\n<p><img src=\"../images/photography/09.jpg\" alt=\"alt text\" title=\"cuba : relaxing\"></p>\n<p><img src=\"../images/photography/10.jpg\" alt=\"alt text\" title=\"cuba : horse in the shade\"></p>\n<p><img src=\"../images/photography/11.jpg\" alt=\"alt text\" title=\"cuba : horse in the shade 2\"></p>\n<p><img src=\"../images/photography/12.jpg\" alt=\"alt text\" title=\"cuba : park in matanzas\"></p>\n<p><img src=\"../images/photography/06.jpg\" alt=\"alt text\" title=\"cuba : friend on the beach\"></p>\n<p><img src=\"../images/photography/04.jpg\" alt=\"alt text\" title=\"cuba : perfect shade\"></p>\n<p><img src=\"../images/photography/13.jpg\" alt=\"alt text\" title=\"montreal : barbed wire\"></p>\n<p><img src=\"../images/photography/14.jpg\" alt=\"alt text\" title=\"montreal : metro system\"></p>\n<p><img src=\"../images/photography/15.jpg\" alt=\"alt text\" title=\"montreal : metro system 2\"></p>\n<p><img src=\"../images/photography/16.jpg\" alt=\"alt text\" title=\"montreal : metro system 3\"></p>\n<p><img src=\"../images/photography/17.jpg\" alt=\"alt text\" title=\"montreal : &#39;l&#39;homme&#39; sculpture by alexander calder\"></p>\n<p><img src=\"../images/photography/18.jpg\" alt=\"alt text\" title=\"february in chicago\"></p>\n<p><img src=\"../images/photography/19.jpg\" alt=\"alt text\" title=\"february in chicago 2\"></p>\n<p><img src=\"../images/photography/20.jpg\" alt=\"alt text\" title=\"didi\"></p>\n<p><img src=\"../images/photography/21.jpg\" alt=\"alt text\" title=\"didi 2\"></p>\n<p><img src=\"../images/photography/22.jpg\" alt=\"alt text\" title=\"montreal planetarium\"></p>\n<p><img src=\"../images/photography/23.jpg\" alt=\"alt text\" title=\"full bloom\"></p>\n<p><img src=\"../images/photography/24.jpg\" alt=\"alt text\" title=\"downtown montreal\"></p>\n<p><img src=\"../images/photography/27.jpg\" alt=\"alt text\" title=\"downtown montreal 2\"></p>\n<p><img src=\"../images/photography/25.jpg\" alt=\"alt text\" title=\"toronto : street scrabble in kensington market\"></p>\n<p><img src=\"../images/photography/26.jpg\" alt=\"alt text\" title=\"rememberance of things past\"></p>\n<p><img src=\"../images/photography/28.jpg\" alt=\"alt text\" title=\"wu tang clan\"></p>\n<p><img src=\"../images/photography/29.jpg\" alt=\"alt text\" title=\"sun hits the face of a drummer at occupy montreal protests\"></p>\n<p><img src=\"../images/photography/30.jpg\" alt=\"alt text\" title=\"occupy montreal\"></p>\n<p><img src=\"../images/photography/31.jpg\" alt=\"alt text\" title=\"an inch above ground\"></p>\n<p><img src=\"../images/photography/32.jpg\" alt=\"alt text\" title=\"montreal : beer and bowling\"></p>\n<p><img src=\"../images/photography/33.jpg\" alt=\"alt text\" title=\"montreal : beer and bowling 2\"></p>\n<p><img src=\"../images/photography/34.jpg\" alt=\"alt text\" title=\"new york : halloween\"></p>\n<p><img src=\"../images/photography/36.jpg\" alt=\"alt text\" title=\"new york : halloween 2\"></p>\n<p><img src=\"../images/photography/37.jpg\" alt=\"alt text\" title=\"break\"></p>\n<p><img src=\"../images/photography/38.jpg\" alt=\"alt text\" title=\"break 2\"></p>\n<p><img src=\"../images/photography/39.jpg\" alt=\"alt text\" title=\"rickard&#39;s\"></p>\n<p><img src=\"../images/photography/40.jpg\" alt=\"alt text\" title=\"autumn night in montreal\"></p>\n<p><img src=\"../images/photography/41.jpg\" alt=\"alt text\" title=\"chasing waterfalls\"></p>\n<p><img src=\"../images/photography/42.jpg\" alt=\"alt text\" title=\"chasing waterfalls 2\"></p>\n<p><img src=\"../images/photography/43.jpg\" alt=\"alt text\" title=\"chasing waterfalls 3\"></p>\n<p><img src=\"../images/photography/44.jpg\" alt=\"alt text\" title=\"chasing waterfalls 4\"></p>\n<p><img src=\"../images/photography/45.jpg\" alt=\"alt text\" title=\"montreal : sculpture in parc jean drapeau\"></p>\n<p><img src=\"../images/photography/46.jpg\" alt=\"alt text\" title=\"montreal : sculpture in parc jean drapeau 2\"></p>\n<p><img src=\"../images/photography/47.jpg\" alt=\"alt text\" title=\"montreal : sculpture in parc jean drapeau 3\"></p>\n<p><img src=\"../images/photography/48.jpg\" alt=\"alt text\" title=\"mother nature&#39;s bronchioles\"></p>\n<p><img src=\"../images/photography/50.jpg\" alt=\"alt text\" title=\"montreal : silo 5 in old montreal\"></p>\n"},{"title":"about","date":"2017-04-09T21:16:10.000Z","_content":"\ni'm a web developer born and raised in winnipeg, manitoba and currently living in montreal, quebec where i did my bachelors of science in mathematics at mcgill university and diploma in web development at concordia university. i love coding, calculus, camping, canoes, cameras, and cycling.\n\n<!-- CV -->\n\n[**→ curriculum vitae** (/kəˈrɪkjᵿləm ˈviːtaɪ/, /ˈwiːtaɪ/, or /ˈvaɪtiː/)](#)\n\n<!-- /CV -->\n\n<!-- CONTACT INFO -->\n\n## contact information\n\nphone : +1.514.<a href=\"mailto:tenzin@tenzin.ca\">mail.me</a>\nemail : <a href=\"mailto:tenzin@tenzin.ca\">tenzin[at]tenzin[dot]ca</a>\n\n<!-- /CONTACT INFO -->\n\n<!-- PROFILE PIC -->\n\n<br>_here is an old photo of me_\n![alt text](../images/me.png \"here is an old picture of me\")\n\n<!-- /PROFILE PIC -->\n\n<!-- GOOGLE MAPS -->\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBm8XpxrP2QYGkoUl7YFyBk8uIqjzWFGTc&extension=.js\"></script>\n<script src=\"https://cdn.mapkit.io/v1/infobox.js\"></script>\n<link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n<link href=\"https://cdn.mapkit.io/v1/infobox.css\" rel=\"stylesheet\" >\n\n<script>\n  google.maps.event.addDomListener(window, 'load', init);\n  var map, markersArray = [];\n\n  function bindInfoWindow(marker, map, location) {\n  google.maps.event.addListener(marker, 'click', function() {\n    function close(location) {\n      location.ib.close();\n      location.infoWindowVisible = false;\n      location.ib = null;\n    }\n\n    if (location.infoWindowVisible === true) {\n      close(location);\n    } else {\n      markersArray.forEach(function(loc, index){\n        if (loc.ib && loc.ib !== null) {\n          close(loc);\n        }\n      });\n\n      var boxText = document.createElement('div');\n      boxText.style.cssText = 'background: #fff;';\n      boxText.classList.add('md-whiteframe-2dp');\n\n      function buildPieces(location, el, part, icon) {\n        if (location[part] === '') {\n          return '';\n        } else if (location.iw[part]) {\n          switch(el){\n            case 'photo':\n              if (location.photo){\n                return '<div class=\"iw-photo\" style=\"background-image: url(' + location.photo + ');\"></div>';\n               } else {\n                return '';\n              }\n              break;\n            case 'iw-toolbar':\n              return '<div class=\"iw-toolbar\"><h3 class=\"md-subhead\">' + location.title + '</h3></div>';\n              break;\n            case 'div':\n              switch(part){\n                case 'email':\n                  return '<div class=\"iw-details\"><i class=\"material-icons\" style=\"color:#4285f4;\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><span><a href=\"mailto:' + location.email + '\" target=\"_blank\">' + location.email + '</a></span></div>';\n                  break;\n                case 'web':\n                  return '<div class=\"iw-details\"><i class=\"material-icons\" style=\"color:#4285f4;\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><span><a href=\"' + location.web + '\" target=\"_blank\">' + location.web_formatted + '</a></span></div>';\n                  break;\n                case 'desc':\n                  return '<label class=\"iw-desc\" for=\"cb_details\"><input type=\"checkbox\" id=\"cb_details\"/><h3 class=\"iw-x-details\">Details</h3><i class=\"material-icons toggle-open-details\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><p class=\"iw-x-details\">' + location.desc + '</p></label>';\n                  break;\n                default:\n                  return '<div class=\"iw-details\"><i class=\"material-icons\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><span>' + location[part] + '</span></div>';\n                break;\n              }\n              break;\n            case 'open_hours':\n              var items = '';\n              if (location.open_hours.length > 0){\n                for (var i = 0; i < location.open_hours.length; ++i) {\n                  if (i !== 0){\n                    items += '<li><strong>' + location.open_hours[i].day + '</strong><strong>' + location.open_hours[i].hours +'</strong></li>';\n                  }\n                  var first = '<li><label for=\"cb_hours\"><input type=\"checkbox\" id=\"cb_hours\"/><strong>' + location.open_hours[0].day + '</strong><strong>' + location.open_hours[0].hours +'</strong><i class=\"material-icons toggle-open-hours\"><img src=\"//cdn.mapkit.io/v1/icons/keyboard_arrow_down.svg\"/></i><ul>' + items + '</ul></label></li>';\n                }\n                return '<div class=\"iw-list\"><i class=\"material-icons first-material-icons\" style=\"color:#4285f4;\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><ul>' + first + '</ul></div>';\n               } else {\n                return '';\n              }\n              break;\n           }\n        } else {\n          return '';\n        }\n      }\n\n      boxText.innerHTML =\n        buildPieces(location, 'photo', 'photo', '') +\n        buildPieces(location, 'iw-toolbar', 'title', '') +\n        buildPieces(location, 'div', 'address', 'location_on') +\n        buildPieces(location, 'div', 'web', 'public') +\n        buildPieces(location, 'div', 'email', 'email') +\n        buildPieces(location, 'div', 'tel', 'phone') +\n        buildPieces(location, 'div', 'int_tel', 'phone') +\n        buildPieces(location, 'open_hours', 'open_hours', 'access_time') +\n        buildPieces(location, 'div', 'desc', 'keyboard_arrow_down');\n\n      var myOptions = {\n        alignBottom: true,\n        content: boxText,\n        disableAutoPan: true,\n        maxWidth: 0,\n        pixelOffset: new google.maps.Size(-140, -40),\n        zIndex: null,\n        boxStyle: {\n          opacity: 1,\n          width: '280px'\n        },\n        closeBoxMargin: '0px 0px 0px 0px',\n        infoBoxClearance: new google.maps.Size(1, 1),\n        isHidden: false,\n        pane: 'floatPane',\n        enableEventPropagation: false\n      };\n\n      location.ib = new InfoBox(myOptions);\n      location.ib.open(map, marker);\n      location.infoWindowVisible = true;\n    }\n  });\n  }\n\n  function init() {\n    var mapOptions = {\n      center: new google.maps.LatLng(45.47289238859529,-73.58219251416017),\n      zoom: 10,\n      gestureHandling: 'none',\n      fullscreenControl: false,\n      zoomControl: false,\n      disableDoubleClickZoom: false,\n      mapTypeControl: false,\n      scaleControl: false,\n      scrollwheel: true,\n      streetViewControl: false,\n      draggable : true,\n      clickableIcons: false,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      styles: [{\"featureType\":\"all\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"on\"}]},{\"featureType\":\"all\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"},{\"saturation\":\"-100\"}]},{\"featureType\":\"all\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"saturation\":36},{\"color\":\"#000000\"},{\"lightness\":40},{\"visibility\":\"off\"}]},{\"featureType\":\"all\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"visibility\":\"off\"},{\"color\":\"#000000\"},{\"lightness\":16}]},{\"featureType\":\"all\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":20}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":17},{\"weight\":1.2}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":20}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"landscape.natural\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"poi\",\"elementType\":\"geometry\",\"stylers\":[{\"lightness\":21}]},{\"featureType\":\"poi\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"poi\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry\",\"stylers\":[{\"visibility\":\"on\"},{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"},{\"lightness\":17}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#7f8d89\"},{\"lightness\":29},{\"weight\":0.2}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":18}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":16}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"transit\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":19}]},{\"featureType\":\"water\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#2b3638\"},{\"visibility\":\"on\"}]},{\"featureType\":\"water\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#2b3638\"},{\"lightness\":17}]},{\"featureType\":\"water\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#24282b\"}]},{\"featureType\":\"water\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#24282b\"}]},{\"featureType\":\"water\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]}]\n    }\n    var mapElement = document.getElementById('mapkit-5897');\n    var map = new google.maps.Map(mapElement, mapOptions);\n    var locations = [\n      {\"title\":\"Montréal\",\"address\":\"Montréal, QC, Canada\",\"desc\":\"\",\"tel\":\"\",\"int_tel\":\"\",\"email\":\"\",\"web\":\"\",\"web_formatted\":\"\",\"open\":\"\",\"time\":\"\",\"lat\":45.5016889,\"lng\":-73.56725599999999,\"vicinity\":\"Montréal\",\"open_hours\":\"\",\"marker\":{\"url\":\"https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi_hdpi.png\",\"scaledSize\":{\"width\":25,\"height\":42,\"j\":\"px\",\"f\":\"px\"},\"origin\":{\"x\":0,\"y\":0},\"anchor\":{\"x\":12,\"y\":42}},\"iw\":{\"address\":true,\"desc\":true,\"email\":true,\"enable\":true,\"int_tel\":true,\"open\":true,\"open_hours\":true,\"photo\":true,\"tel\":true,\"title\":true,\"web\":true}}\n    ];\n    for (i = 0; i < locations.length; i++) {\n      marker = new google.maps.Marker({\n        icon: locations[i].marker,\n        position: new google.maps.LatLng(locations[i].lat, locations[i].lng),\n        map: map,\n        title: locations[i].title,\n        address: locations[i].address,\n        desc: locations[i].desc,\n        tel: locations[i].tel,\n        int_tel: locations[i].int_tel,\n        vicinity: locations[i].vicinity,\n        open: locations[i].open,\n        open_hours: locations[i].open_hours,\n        photo: locations[i].photo,\n        time: locations[i].time,\n        email: locations[i].email,\n        web: locations[i].web,\n        iw: locations[i].iw\n      });\n      markersArray.push(marker);\n\n      if (locations[i].iw.enable === true){\n        bindInfoWindow(marker, map, locations[i]);\n      }\n    }\n  }\n</script>\n\n<style>\n  .gmnoprint {\n    display:none;\n  }\n  .gm-style-cc {\n    display:none;\n  }\n  .map-responsive{\n    overflow:hidden;\n    padding-bottom:56.25%;\n    position:relative;\n    height:0;\n  }\n  .map-responsive iframe{\n    left:0;\n    top:0;\n    height:100%;\n    width:100%;\n    position:absolute;\n  }\n</style>\n\n_here is where you can find me_\n\n<div id='mapkit-5897' class=\"map-responsive\"></div>\n<!-- /GOOGLE MAPS -->\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-04-09 17:16:10\n---\n\ni'm a web developer born and raised in winnipeg, manitoba and currently living in montreal, quebec where i did my bachelors of science in mathematics at mcgill university and diploma in web development at concordia university. i love coding, calculus, camping, canoes, cameras, and cycling.\n\n<!-- CV -->\n\n[**→ curriculum vitae** (/kəˈrɪkjᵿləm ˈviːtaɪ/, /ˈwiːtaɪ/, or /ˈvaɪtiː/)](#)\n\n<!-- /CV -->\n\n<!-- CONTACT INFO -->\n\n## contact information\n\nphone : +1.514.<a href=\"mailto:tenzin@tenzin.ca\">mail.me</a>\nemail : <a href=\"mailto:tenzin@tenzin.ca\">tenzin[at]tenzin[dot]ca</a>\n\n<!-- /CONTACT INFO -->\n\n<!-- PROFILE PIC -->\n\n<br>_here is an old photo of me_\n![alt text](../images/me.png \"here is an old picture of me\")\n\n<!-- /PROFILE PIC -->\n\n<!-- GOOGLE MAPS -->\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBm8XpxrP2QYGkoUl7YFyBk8uIqjzWFGTc&extension=.js\"></script>\n<script src=\"https://cdn.mapkit.io/v1/infobox.js\"></script>\n<link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n<link href=\"https://cdn.mapkit.io/v1/infobox.css\" rel=\"stylesheet\" >\n\n<script>\n  google.maps.event.addDomListener(window, 'load', init);\n  var map, markersArray = [];\n\n  function bindInfoWindow(marker, map, location) {\n  google.maps.event.addListener(marker, 'click', function() {\n    function close(location) {\n      location.ib.close();\n      location.infoWindowVisible = false;\n      location.ib = null;\n    }\n\n    if (location.infoWindowVisible === true) {\n      close(location);\n    } else {\n      markersArray.forEach(function(loc, index){\n        if (loc.ib && loc.ib !== null) {\n          close(loc);\n        }\n      });\n\n      var boxText = document.createElement('div');\n      boxText.style.cssText = 'background: #fff;';\n      boxText.classList.add('md-whiteframe-2dp');\n\n      function buildPieces(location, el, part, icon) {\n        if (location[part] === '') {\n          return '';\n        } else if (location.iw[part]) {\n          switch(el){\n            case 'photo':\n              if (location.photo){\n                return '<div class=\"iw-photo\" style=\"background-image: url(' + location.photo + ');\"></div>';\n               } else {\n                return '';\n              }\n              break;\n            case 'iw-toolbar':\n              return '<div class=\"iw-toolbar\"><h3 class=\"md-subhead\">' + location.title + '</h3></div>';\n              break;\n            case 'div':\n              switch(part){\n                case 'email':\n                  return '<div class=\"iw-details\"><i class=\"material-icons\" style=\"color:#4285f4;\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><span><a href=\"mailto:' + location.email + '\" target=\"_blank\">' + location.email + '</a></span></div>';\n                  break;\n                case 'web':\n                  return '<div class=\"iw-details\"><i class=\"material-icons\" style=\"color:#4285f4;\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><span><a href=\"' + location.web + '\" target=\"_blank\">' + location.web_formatted + '</a></span></div>';\n                  break;\n                case 'desc':\n                  return '<label class=\"iw-desc\" for=\"cb_details\"><input type=\"checkbox\" id=\"cb_details\"/><h3 class=\"iw-x-details\">Details</h3><i class=\"material-icons toggle-open-details\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><p class=\"iw-x-details\">' + location.desc + '</p></label>';\n                  break;\n                default:\n                  return '<div class=\"iw-details\"><i class=\"material-icons\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><span>' + location[part] + '</span></div>';\n                break;\n              }\n              break;\n            case 'open_hours':\n              var items = '';\n              if (location.open_hours.length > 0){\n                for (var i = 0; i < location.open_hours.length; ++i) {\n                  if (i !== 0){\n                    items += '<li><strong>' + location.open_hours[i].day + '</strong><strong>' + location.open_hours[i].hours +'</strong></li>';\n                  }\n                  var first = '<li><label for=\"cb_hours\"><input type=\"checkbox\" id=\"cb_hours\"/><strong>' + location.open_hours[0].day + '</strong><strong>' + location.open_hours[0].hours +'</strong><i class=\"material-icons toggle-open-hours\"><img src=\"//cdn.mapkit.io/v1/icons/keyboard_arrow_down.svg\"/></i><ul>' + items + '</ul></label></li>';\n                }\n                return '<div class=\"iw-list\"><i class=\"material-icons first-material-icons\" style=\"color:#4285f4;\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><ul>' + first + '</ul></div>';\n               } else {\n                return '';\n              }\n              break;\n           }\n        } else {\n          return '';\n        }\n      }\n\n      boxText.innerHTML =\n        buildPieces(location, 'photo', 'photo', '') +\n        buildPieces(location, 'iw-toolbar', 'title', '') +\n        buildPieces(location, 'div', 'address', 'location_on') +\n        buildPieces(location, 'div', 'web', 'public') +\n        buildPieces(location, 'div', 'email', 'email') +\n        buildPieces(location, 'div', 'tel', 'phone') +\n        buildPieces(location, 'div', 'int_tel', 'phone') +\n        buildPieces(location, 'open_hours', 'open_hours', 'access_time') +\n        buildPieces(location, 'div', 'desc', 'keyboard_arrow_down');\n\n      var myOptions = {\n        alignBottom: true,\n        content: boxText,\n        disableAutoPan: true,\n        maxWidth: 0,\n        pixelOffset: new google.maps.Size(-140, -40),\n        zIndex: null,\n        boxStyle: {\n          opacity: 1,\n          width: '280px'\n        },\n        closeBoxMargin: '0px 0px 0px 0px',\n        infoBoxClearance: new google.maps.Size(1, 1),\n        isHidden: false,\n        pane: 'floatPane',\n        enableEventPropagation: false\n      };\n\n      location.ib = new InfoBox(myOptions);\n      location.ib.open(map, marker);\n      location.infoWindowVisible = true;\n    }\n  });\n  }\n\n  function init() {\n    var mapOptions = {\n      center: new google.maps.LatLng(45.47289238859529,-73.58219251416017),\n      zoom: 10,\n      gestureHandling: 'none',\n      fullscreenControl: false,\n      zoomControl: false,\n      disableDoubleClickZoom: false,\n      mapTypeControl: false,\n      scaleControl: false,\n      scrollwheel: true,\n      streetViewControl: false,\n      draggable : true,\n      clickableIcons: false,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      styles: [{\"featureType\":\"all\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"on\"}]},{\"featureType\":\"all\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"},{\"saturation\":\"-100\"}]},{\"featureType\":\"all\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"saturation\":36},{\"color\":\"#000000\"},{\"lightness\":40},{\"visibility\":\"off\"}]},{\"featureType\":\"all\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"visibility\":\"off\"},{\"color\":\"#000000\"},{\"lightness\":16}]},{\"featureType\":\"all\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":20}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":17},{\"weight\":1.2}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":20}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"landscape.natural\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"poi\",\"elementType\":\"geometry\",\"stylers\":[{\"lightness\":21}]},{\"featureType\":\"poi\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"poi\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry\",\"stylers\":[{\"visibility\":\"on\"},{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"},{\"lightness\":17}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#7f8d89\"},{\"lightness\":29},{\"weight\":0.2}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":18}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":16}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"transit\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":19}]},{\"featureType\":\"water\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#2b3638\"},{\"visibility\":\"on\"}]},{\"featureType\":\"water\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#2b3638\"},{\"lightness\":17}]},{\"featureType\":\"water\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#24282b\"}]},{\"featureType\":\"water\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#24282b\"}]},{\"featureType\":\"water\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]}]\n    }\n    var mapElement = document.getElementById('mapkit-5897');\n    var map = new google.maps.Map(mapElement, mapOptions);\n    var locations = [\n      {\"title\":\"Montréal\",\"address\":\"Montréal, QC, Canada\",\"desc\":\"\",\"tel\":\"\",\"int_tel\":\"\",\"email\":\"\",\"web\":\"\",\"web_formatted\":\"\",\"open\":\"\",\"time\":\"\",\"lat\":45.5016889,\"lng\":-73.56725599999999,\"vicinity\":\"Montréal\",\"open_hours\":\"\",\"marker\":{\"url\":\"https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi_hdpi.png\",\"scaledSize\":{\"width\":25,\"height\":42,\"j\":\"px\",\"f\":\"px\"},\"origin\":{\"x\":0,\"y\":0},\"anchor\":{\"x\":12,\"y\":42}},\"iw\":{\"address\":true,\"desc\":true,\"email\":true,\"enable\":true,\"int_tel\":true,\"open\":true,\"open_hours\":true,\"photo\":true,\"tel\":true,\"title\":true,\"web\":true}}\n    ];\n    for (i = 0; i < locations.length; i++) {\n      marker = new google.maps.Marker({\n        icon: locations[i].marker,\n        position: new google.maps.LatLng(locations[i].lat, locations[i].lng),\n        map: map,\n        title: locations[i].title,\n        address: locations[i].address,\n        desc: locations[i].desc,\n        tel: locations[i].tel,\n        int_tel: locations[i].int_tel,\n        vicinity: locations[i].vicinity,\n        open: locations[i].open,\n        open_hours: locations[i].open_hours,\n        photo: locations[i].photo,\n        time: locations[i].time,\n        email: locations[i].email,\n        web: locations[i].web,\n        iw: locations[i].iw\n      });\n      markersArray.push(marker);\n\n      if (locations[i].iw.enable === true){\n        bindInfoWindow(marker, map, locations[i]);\n      }\n    }\n  }\n</script>\n\n<style>\n  .gmnoprint {\n    display:none;\n  }\n  .gm-style-cc {\n    display:none;\n  }\n  .map-responsive{\n    overflow:hidden;\n    padding-bottom:56.25%;\n    position:relative;\n    height:0;\n  }\n  .map-responsive iframe{\n    left:0;\n    top:0;\n    height:100%;\n    width:100%;\n    position:absolute;\n  }\n</style>\n\n_here is where you can find me_\n\n<div id='mapkit-5897' class=\"map-responsive\"></div>\n<!-- /GOOGLE MAPS -->\n","updated":"2019-03-20T19:54:47.348Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjusu50k90011wkqz0pfjbyny","content":"<p>i’m a web developer born and raised in winnipeg, manitoba and currently living in montreal, quebec where i did my bachelors of science in mathematics at mcgill university and diploma in web development at concordia university. i love coding, calculus, camping, canoes, cameras, and cycling.</p>\n<!-- CV -->\n<p><a href=\"#\"><strong>→ curriculum vitae</strong> (/kəˈrɪkjᵿləm ˈviːtaɪ/, /ˈwiːtaɪ/, or /ˈvaɪtiː/)</a></p>\n<!-- /CV -->\n<!-- CONTACT INFO -->\n<h2 id=\"contact-information\"><a href=\"#contact-information\" class=\"headerlink\" title=\"contact information\"></a>contact information</h2><p>phone : +1.514.<a href=\"mailto:tenzin@tenzin.ca\" target=\"_blank\" rel=\"noopener\">mail.me</a><br>email : <a href=\"mailto:tenzin@tenzin.ca\" target=\"_blank\" rel=\"noopener\">tenzin[at]tenzin[dot]ca</a></p>\n<!-- /CONTACT INFO -->\n<!-- PROFILE PIC -->\n<p><br><em>here is an old photo of me</em><br><img src=\"../images/me.png\" alt=\"alt text\" title=\"here is an old picture of me\"></p>\n<!-- /PROFILE PIC -->\n<!-- GOOGLE MAPS -->\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBm8XpxrP2QYGkoUl7YFyBk8uIqjzWFGTc&extension=.js\"></script>\n<script src=\"https://cdn.mapkit.io/v1/infobox.js\"></script>\n<link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n<link href=\"https://cdn.mapkit.io/v1/infobox.css\" rel=\"stylesheet\">\n\n<script>\n  google.maps.event.addDomListener(window, 'load', init);\n  var map, markersArray = [];\n\n  function bindInfoWindow(marker, map, location) {\n  google.maps.event.addListener(marker, 'click', function() {\n    function close(location) {\n      location.ib.close();\n      location.infoWindowVisible = false;\n      location.ib = null;\n    }\n\n    if (location.infoWindowVisible === true) {\n      close(location);\n    } else {\n      markersArray.forEach(function(loc, index){\n        if (loc.ib && loc.ib !== null) {\n          close(loc);\n        }\n      });\n\n      var boxText = document.createElement('div');\n      boxText.style.cssText = 'background: #fff;';\n      boxText.classList.add('md-whiteframe-2dp');\n\n      function buildPieces(location, el, part, icon) {\n        if (location[part] === '') {\n          return '';\n        } else if (location.iw[part]) {\n          switch(el){\n            case 'photo':\n              if (location.photo){\n                return '<div class=\"iw-photo\" style=\"background-image: url(' + location.photo + ');\"></div>';\n               } else {\n                return '';\n              }\n              break;\n            case 'iw-toolbar':\n              return '<div class=\"iw-toolbar\"><h3 class=\"md-subhead\">' + location.title + '</h3></div>';\n              break;\n            case 'div':\n              switch(part){\n                case 'email':\n                  return '<div class=\"iw-details\"><i class=\"material-icons\" style=\"color:#4285f4;\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><span><a href=\"mailto:' + location.email + '\" target=\"_blank\">' + location.email + '</a></span></div>';\n                  break;\n                case 'web':\n                  return '<div class=\"iw-details\"><i class=\"material-icons\" style=\"color:#4285f4;\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><span><a href=\"' + location.web + '\" target=\"_blank\">' + location.web_formatted + '</a></span></div>';\n                  break;\n                case 'desc':\n                  return '<label class=\"iw-desc\" for=\"cb_details\"><input type=\"checkbox\" id=\"cb_details\"/><h3 class=\"iw-x-details\">Details</h3><i class=\"material-icons toggle-open-details\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><p class=\"iw-x-details\">' + location.desc + '</p></label>';\n                  break;\n                default:\n                  return '<div class=\"iw-details\"><i class=\"material-icons\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><span>' + location[part] + '</span></div>';\n                break;\n              }\n              break;\n            case 'open_hours':\n              var items = '';\n              if (location.open_hours.length > 0){\n                for (var i = 0; i < location.open_hours.length; ++i) {\n                  if (i !== 0){\n                    items += '<li><strong>' + location.open_hours[i].day + '</strong><strong>' + location.open_hours[i].hours +'</strong></li>';\n                  }\n                  var first = '<li><label for=\"cb_hours\"><input type=\"checkbox\" id=\"cb_hours\"/><strong>' + location.open_hours[0].day + '</strong><strong>' + location.open_hours[0].hours +'</strong><i class=\"material-icons toggle-open-hours\"><img src=\"//cdn.mapkit.io/v1/icons/keyboard_arrow_down.svg\"/></i><ul>' + items + '</ul></label></li>';\n                }\n                return '<div class=\"iw-list\"><i class=\"material-icons first-material-icons\" style=\"color:#4285f4;\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><ul>' + first + '</ul></div>';\n               } else {\n                return '';\n              }\n              break;\n           }\n        } else {\n          return '';\n        }\n      }\n\n      boxText.innerHTML =\n        buildPieces(location, 'photo', 'photo', '') +\n        buildPieces(location, 'iw-toolbar', 'title', '') +\n        buildPieces(location, 'div', 'address', 'location_on') +\n        buildPieces(location, 'div', 'web', 'public') +\n        buildPieces(location, 'div', 'email', 'email') +\n        buildPieces(location, 'div', 'tel', 'phone') +\n        buildPieces(location, 'div', 'int_tel', 'phone') +\n        buildPieces(location, 'open_hours', 'open_hours', 'access_time') +\n        buildPieces(location, 'div', 'desc', 'keyboard_arrow_down');\n\n      var myOptions = {\n        alignBottom: true,\n        content: boxText,\n        disableAutoPan: true,\n        maxWidth: 0,\n        pixelOffset: new google.maps.Size(-140, -40),\n        zIndex: null,\n        boxStyle: {\n          opacity: 1,\n          width: '280px'\n        },\n        closeBoxMargin: '0px 0px 0px 0px',\n        infoBoxClearance: new google.maps.Size(1, 1),\n        isHidden: false,\n        pane: 'floatPane',\n        enableEventPropagation: false\n      };\n\n      location.ib = new InfoBox(myOptions);\n      location.ib.open(map, marker);\n      location.infoWindowVisible = true;\n    }\n  });\n  }\n\n  function init() {\n    var mapOptions = {\n      center: new google.maps.LatLng(45.47289238859529,-73.58219251416017),\n      zoom: 10,\n      gestureHandling: 'none',\n      fullscreenControl: false,\n      zoomControl: false,\n      disableDoubleClickZoom: false,\n      mapTypeControl: false,\n      scaleControl: false,\n      scrollwheel: true,\n      streetViewControl: false,\n      draggable : true,\n      clickableIcons: false,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      styles: [{\"featureType\":\"all\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"on\"}]},{\"featureType\":\"all\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"},{\"saturation\":\"-100\"}]},{\"featureType\":\"all\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"saturation\":36},{\"color\":\"#000000\"},{\"lightness\":40},{\"visibility\":\"off\"}]},{\"featureType\":\"all\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"visibility\":\"off\"},{\"color\":\"#000000\"},{\"lightness\":16}]},{\"featureType\":\"all\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":20}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":17},{\"weight\":1.2}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":20}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"landscape.natural\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"poi\",\"elementType\":\"geometry\",\"stylers\":[{\"lightness\":21}]},{\"featureType\":\"poi\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"poi\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry\",\"stylers\":[{\"visibility\":\"on\"},{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"},{\"lightness\":17}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#7f8d89\"},{\"lightness\":29},{\"weight\":0.2}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":18}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":16}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"transit\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":19}]},{\"featureType\":\"water\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#2b3638\"},{\"visibility\":\"on\"}]},{\"featureType\":\"water\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#2b3638\"},{\"lightness\":17}]},{\"featureType\":\"water\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#24282b\"}]},{\"featureType\":\"water\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#24282b\"}]},{\"featureType\":\"water\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]}]\n    }\n    var mapElement = document.getElementById('mapkit-5897');\n    var map = new google.maps.Map(mapElement, mapOptions);\n    var locations = [\n      {\"title\":\"Montréal\",\"address\":\"Montréal, QC, Canada\",\"desc\":\"\",\"tel\":\"\",\"int_tel\":\"\",\"email\":\"\",\"web\":\"\",\"web_formatted\":\"\",\"open\":\"\",\"time\":\"\",\"lat\":45.5016889,\"lng\":-73.56725599999999,\"vicinity\":\"Montréal\",\"open_hours\":\"\",\"marker\":{\"url\":\"https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi_hdpi.png\",\"scaledSize\":{\"width\":25,\"height\":42,\"j\":\"px\",\"f\":\"px\"},\"origin\":{\"x\":0,\"y\":0},\"anchor\":{\"x\":12,\"y\":42}},\"iw\":{\"address\":true,\"desc\":true,\"email\":true,\"enable\":true,\"int_tel\":true,\"open\":true,\"open_hours\":true,\"photo\":true,\"tel\":true,\"title\":true,\"web\":true}}\n    ];\n    for (i = 0; i < locations.length; i++) {\n      marker = new google.maps.Marker({\n        icon: locations[i].marker,\n        position: new google.maps.LatLng(locations[i].lat, locations[i].lng),\n        map: map,\n        title: locations[i].title,\n        address: locations[i].address,\n        desc: locations[i].desc,\n        tel: locations[i].tel,\n        int_tel: locations[i].int_tel,\n        vicinity: locations[i].vicinity,\n        open: locations[i].open,\n        open_hours: locations[i].open_hours,\n        photo: locations[i].photo,\n        time: locations[i].time,\n        email: locations[i].email,\n        web: locations[i].web,\n        iw: locations[i].iw\n      });\n      markersArray.push(marker);\n\n      if (locations[i].iw.enable === true){\n        bindInfoWindow(marker, map, locations[i]);\n      }\n    }\n  }\n</script>\n\n<style>\n  .gmnoprint {\n    display:none;\n  }\n  .gm-style-cc {\n    display:none;\n  }\n  .map-responsive{\n    overflow:hidden;\n    padding-bottom:56.25%;\n    position:relative;\n    height:0;\n  }\n  .map-responsive iframe{\n    left:0;\n    top:0;\n    height:100%;\n    width:100%;\n    position:absolute;\n  }\n</style>\n\n<p><em>here is where you can find me</em></p>\n<p><div id=\"mapkit-5897\" class=\"map-responsive\"></div><br><!-- /GOOGLE MAPS --></p>\n","site":{"data":{"projects":[{"name":"tenzin.ca","url":"http://tenzin.ca/","desc":"home"},{"name":"curriculum vitae","url":"#","desc":"hire me"},{"name":"photography","url":"/photography/","desc":"a brief portfolio"},{"name":"eve online","url":"https://github.com/citizenofearth/eve","desc":"musings on the scifi space simulator"},{"name":"javascript patterns","url":"https://github.com/citizenofearth/javascript-patterns","desc":"common recipes for javascript"},{"name":"todomvc","url":"https://github.com/citizenofearth/todomvc","desc":"basic todo app written in several front-end frameworks"},{"name":"es6 features","url":"https://github.com/citizenofearth/es6features","desc":"overview of ecmascript 6"},{"name":"d3","url":"https://github.com/citizenofearth/d3","desc":"data driven documents"}]}},"excerpt":"","more":"<p>i’m a web developer born and raised in winnipeg, manitoba and currently living in montreal, quebec where i did my bachelors of science in mathematics at mcgill university and diploma in web development at concordia university. i love coding, calculus, camping, canoes, cameras, and cycling.</p>\n<!-- CV -->\n<p><a href=\"#\"><strong>→ curriculum vitae</strong> (/kəˈrɪkjᵿləm ˈviːtaɪ/, /ˈwiːtaɪ/, or /ˈvaɪtiː/)</a></p>\n<!-- /CV -->\n<!-- CONTACT INFO -->\n<h2 id=\"contact-information\"><a href=\"#contact-information\" class=\"headerlink\" title=\"contact information\"></a>contact information</h2><p>phone : +1.514.<a href=\"mailto:tenzin@tenzin.ca\" target=\"_blank\" rel=\"noopener\">mail.me</a><br>email : <a href=\"mailto:tenzin@tenzin.ca\" target=\"_blank\" rel=\"noopener\">tenzin[at]tenzin[dot]ca</a></p>\n<!-- /CONTACT INFO -->\n<!-- PROFILE PIC -->\n<p><br><em>here is an old photo of me</em><br><img src=\"../images/me.png\" alt=\"alt text\" title=\"here is an old picture of me\"></p>\n<!-- /PROFILE PIC -->\n<!-- GOOGLE MAPS -->\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBm8XpxrP2QYGkoUl7YFyBk8uIqjzWFGTc&extension=.js\"></script>\n<script src=\"https://cdn.mapkit.io/v1/infobox.js\"></script>\n<link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400\" rel=\"stylesheet\">\n<link href=\"https://cdn.mapkit.io/v1/infobox.css\" rel=\"stylesheet\">\n\n<script>\n  google.maps.event.addDomListener(window, 'load', init);\n  var map, markersArray = [];\n\n  function bindInfoWindow(marker, map, location) {\n  google.maps.event.addListener(marker, 'click', function() {\n    function close(location) {\n      location.ib.close();\n      location.infoWindowVisible = false;\n      location.ib = null;\n    }\n\n    if (location.infoWindowVisible === true) {\n      close(location);\n    } else {\n      markersArray.forEach(function(loc, index){\n        if (loc.ib && loc.ib !== null) {\n          close(loc);\n        }\n      });\n\n      var boxText = document.createElement('div');\n      boxText.style.cssText = 'background: #fff;';\n      boxText.classList.add('md-whiteframe-2dp');\n\n      function buildPieces(location, el, part, icon) {\n        if (location[part] === '') {\n          return '';\n        } else if (location.iw[part]) {\n          switch(el){\n            case 'photo':\n              if (location.photo){\n                return '<div class=\"iw-photo\" style=\"background-image: url(' + location.photo + ');\"></div>';\n               } else {\n                return '';\n              }\n              break;\n            case 'iw-toolbar':\n              return '<div class=\"iw-toolbar\"><h3 class=\"md-subhead\">' + location.title + '</h3></div>';\n              break;\n            case 'div':\n              switch(part){\n                case 'email':\n                  return '<div class=\"iw-details\"><i class=\"material-icons\" style=\"color:#4285f4;\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><span><a href=\"mailto:' + location.email + '\" target=\"_blank\">' + location.email + '</a></span></div>';\n                  break;\n                case 'web':\n                  return '<div class=\"iw-details\"><i class=\"material-icons\" style=\"color:#4285f4;\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><span><a href=\"' + location.web + '\" target=\"_blank\">' + location.web_formatted + '</a></span></div>';\n                  break;\n                case 'desc':\n                  return '<label class=\"iw-desc\" for=\"cb_details\"><input type=\"checkbox\" id=\"cb_details\"/><h3 class=\"iw-x-details\">Details</h3><i class=\"material-icons toggle-open-details\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><p class=\"iw-x-details\">' + location.desc + '</p></label>';\n                  break;\n                default:\n                  return '<div class=\"iw-details\"><i class=\"material-icons\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><span>' + location[part] + '</span></div>';\n                break;\n              }\n              break;\n            case 'open_hours':\n              var items = '';\n              if (location.open_hours.length > 0){\n                for (var i = 0; i < location.open_hours.length; ++i) {\n                  if (i !== 0){\n                    items += '<li><strong>' + location.open_hours[i].day + '</strong><strong>' + location.open_hours[i].hours +'</strong></li>';\n                  }\n                  var first = '<li><label for=\"cb_hours\"><input type=\"checkbox\" id=\"cb_hours\"/><strong>' + location.open_hours[0].day + '</strong><strong>' + location.open_hours[0].hours +'</strong><i class=\"material-icons toggle-open-hours\"><img src=\"//cdn.mapkit.io/v1/icons/keyboard_arrow_down.svg\"/></i><ul>' + items + '</ul></label></li>';\n                }\n                return '<div class=\"iw-list\"><i class=\"material-icons first-material-icons\" style=\"color:#4285f4;\"><img src=\"//cdn.mapkit.io/v1/icons/' + icon + '.svg\"/></i><ul>' + first + '</ul></div>';\n               } else {\n                return '';\n              }\n              break;\n           }\n        } else {\n          return '';\n        }\n      }\n\n      boxText.innerHTML =\n        buildPieces(location, 'photo', 'photo', '') +\n        buildPieces(location, 'iw-toolbar', 'title', '') +\n        buildPieces(location, 'div', 'address', 'location_on') +\n        buildPieces(location, 'div', 'web', 'public') +\n        buildPieces(location, 'div', 'email', 'email') +\n        buildPieces(location, 'div', 'tel', 'phone') +\n        buildPieces(location, 'div', 'int_tel', 'phone') +\n        buildPieces(location, 'open_hours', 'open_hours', 'access_time') +\n        buildPieces(location, 'div', 'desc', 'keyboard_arrow_down');\n\n      var myOptions = {\n        alignBottom: true,\n        content: boxText,\n        disableAutoPan: true,\n        maxWidth: 0,\n        pixelOffset: new google.maps.Size(-140, -40),\n        zIndex: null,\n        boxStyle: {\n          opacity: 1,\n          width: '280px'\n        },\n        closeBoxMargin: '0px 0px 0px 0px',\n        infoBoxClearance: new google.maps.Size(1, 1),\n        isHidden: false,\n        pane: 'floatPane',\n        enableEventPropagation: false\n      };\n\n      location.ib = new InfoBox(myOptions);\n      location.ib.open(map, marker);\n      location.infoWindowVisible = true;\n    }\n  });\n  }\n\n  function init() {\n    var mapOptions = {\n      center: new google.maps.LatLng(45.47289238859529,-73.58219251416017),\n      zoom: 10,\n      gestureHandling: 'none',\n      fullscreenControl: false,\n      zoomControl: false,\n      disableDoubleClickZoom: false,\n      mapTypeControl: false,\n      scaleControl: false,\n      scrollwheel: true,\n      streetViewControl: false,\n      draggable : true,\n      clickableIcons: false,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      styles: [{\"featureType\":\"all\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"on\"}]},{\"featureType\":\"all\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"},{\"saturation\":\"-100\"}]},{\"featureType\":\"all\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"saturation\":36},{\"color\":\"#000000\"},{\"lightness\":40},{\"visibility\":\"off\"}]},{\"featureType\":\"all\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"visibility\":\"off\"},{\"color\":\"#000000\"},{\"lightness\":16}]},{\"featureType\":\"all\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":20}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":17},{\"weight\":1.2}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":20}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"landscape.natural\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"poi\",\"elementType\":\"geometry\",\"stylers\":[{\"lightness\":21}]},{\"featureType\":\"poi\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"poi\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#4d6059\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry\",\"stylers\":[{\"visibility\":\"on\"},{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"},{\"lightness\":17}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#7f8d89\"},{\"lightness\":29},{\"weight\":0.2}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":18}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":16}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#7f8d89\"}]},{\"featureType\":\"transit\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":19}]},{\"featureType\":\"water\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#2b3638\"},{\"visibility\":\"on\"}]},{\"featureType\":\"water\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#2b3638\"},{\"lightness\":17}]},{\"featureType\":\"water\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#24282b\"}]},{\"featureType\":\"water\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#24282b\"}]},{\"featureType\":\"water\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]}]\n    }\n    var mapElement = document.getElementById('mapkit-5897');\n    var map = new google.maps.Map(mapElement, mapOptions);\n    var locations = [\n      {\"title\":\"Montréal\",\"address\":\"Montréal, QC, Canada\",\"desc\":\"\",\"tel\":\"\",\"int_tel\":\"\",\"email\":\"\",\"web\":\"\",\"web_formatted\":\"\",\"open\":\"\",\"time\":\"\",\"lat\":45.5016889,\"lng\":-73.56725599999999,\"vicinity\":\"Montréal\",\"open_hours\":\"\",\"marker\":{\"url\":\"https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi_hdpi.png\",\"scaledSize\":{\"width\":25,\"height\":42,\"j\":\"px\",\"f\":\"px\"},\"origin\":{\"x\":0,\"y\":0},\"anchor\":{\"x\":12,\"y\":42}},\"iw\":{\"address\":true,\"desc\":true,\"email\":true,\"enable\":true,\"int_tel\":true,\"open\":true,\"open_hours\":true,\"photo\":true,\"tel\":true,\"title\":true,\"web\":true}}\n    ];\n    for (i = 0; i < locations.length; i++) {\n      marker = new google.maps.Marker({\n        icon: locations[i].marker,\n        position: new google.maps.LatLng(locations[i].lat, locations[i].lng),\n        map: map,\n        title: locations[i].title,\n        address: locations[i].address,\n        desc: locations[i].desc,\n        tel: locations[i].tel,\n        int_tel: locations[i].int_tel,\n        vicinity: locations[i].vicinity,\n        open: locations[i].open,\n        open_hours: locations[i].open_hours,\n        photo: locations[i].photo,\n        time: locations[i].time,\n        email: locations[i].email,\n        web: locations[i].web,\n        iw: locations[i].iw\n      });\n      markersArray.push(marker);\n\n      if (locations[i].iw.enable === true){\n        bindInfoWindow(marker, map, locations[i]);\n      }\n    }\n  }\n</script>\n\n<style>\n  .gmnoprint {\n    display:none;\n  }\n  .gm-style-cc {\n    display:none;\n  }\n  .map-responsive{\n    overflow:hidden;\n    padding-bottom:56.25%;\n    position:relative;\n    height:0;\n  }\n  .map-responsive iframe{\n    left:0;\n    top:0;\n    height:100%;\n    width:100%;\n    position:absolute;\n  }\n</style>\n\n<p><em>here is where you can find me</em></p>\n<p><div id=\"mapkit-5897\" class=\"map-responsive\"></div><br><!-- /GOOGLE MAPS --></p>\n"}],"Post":[{"title":"learning react","date":"2017-10-01T20:34:52.000Z","_content":"\n[React](https://reactjs.org/) is, quite simply, the view in MVC. It is a front-end library developed by Facebook and used to handle the view layer of a mobile or web app. React allows us to create reusable UI components and is currently one of the most popular JavaScript libraries with a strong foundation and large community backing it up.\n\n![React JS](/images/react.png)\n\nReact heavily encourages the creation of reusable UI components, which present data that changes over time. React abstracts away the DOM from you, offering a simpler programming model and better performance. React can also render on the server using Node, and it can even power native apps using React Native. React implements one-way reactive data flow, which reduces boilerplate and is easier to wrap your head around compared to traditional data binding.\n\n## React Features\n\n- JSX\n- Components\n- Unidirectional data flow and Flux\n\n## React Resources\n\n- [Official Tutorial](https://reactjs.org/tutorial/tutorial.html)\n- [Build With React](http://buildwithreact.com/#articles)\n- [React Cheat Sheet](https://reactcheatsheet.com/)\n- [React & Typescript](https://levelup.gitconnected.com/typescript-and-react-using-create-react-app-a-step-by-step-guide-to-setting-up-your-first-app-6deda70843a4)\n- [React & D3](https://www.smashingmagazine.com/2018/02/react-d3-ecosystem/)\n- [Tyler McGinnis Tutorials](https://learn.tylermcginnis.com)\n","source":"_posts/learning-react.md","raw":"---\ntitle: learning react\ndate: 2017-10-01 16:34:52\ntags:\n  - react\n  - javascript\n---\n\n[React](https://reactjs.org/) is, quite simply, the view in MVC. It is a front-end library developed by Facebook and used to handle the view layer of a mobile or web app. React allows us to create reusable UI components and is currently one of the most popular JavaScript libraries with a strong foundation and large community backing it up.\n\n![React JS](/images/react.png)\n\nReact heavily encourages the creation of reusable UI components, which present data that changes over time. React abstracts away the DOM from you, offering a simpler programming model and better performance. React can also render on the server using Node, and it can even power native apps using React Native. React implements one-way reactive data flow, which reduces boilerplate and is easier to wrap your head around compared to traditional data binding.\n\n## React Features\n\n- JSX\n- Components\n- Unidirectional data flow and Flux\n\n## React Resources\n\n- [Official Tutorial](https://reactjs.org/tutorial/tutorial.html)\n- [Build With React](http://buildwithreact.com/#articles)\n- [React Cheat Sheet](https://reactcheatsheet.com/)\n- [React & Typescript](https://levelup.gitconnected.com/typescript-and-react-using-create-react-app-a-step-by-step-guide-to-setting-up-your-first-app-6deda70843a4)\n- [React & D3](https://www.smashingmagazine.com/2018/02/react-d3-ecosystem/)\n- [Tyler McGinnis Tutorials](https://learn.tylermcginnis.com)\n","slug":"learning-react","published":1,"updated":"2019-04-22T14:52:48.073Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjusu50io0000wkqzo0zo11eu","content":"<p><a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noopener\">React</a> is, quite simply, the view in MVC. It is a front-end library developed by Facebook and used to handle the view layer of a mobile or web app. React allows us to create reusable UI components and is currently one of the most popular JavaScript libraries with a strong foundation and large community backing it up.</p>\n<p><img src=\"/images/react.png\" alt=\"React JS\"></p>\n<p>React heavily encourages the creation of reusable UI components, which present data that changes over time. React abstracts away the DOM from you, offering a simpler programming model and better performance. React can also render on the server using Node, and it can even power native apps using React Native. React implements one-way reactive data flow, which reduces boilerplate and is easier to wrap your head around compared to traditional data binding.</p>\n<h2 id=\"React-Features\"><a href=\"#React-Features\" class=\"headerlink\" title=\"React Features\"></a>React Features</h2><ul>\n<li>JSX</li>\n<li>Components</li>\n<li>Unidirectional data flow and Flux</li>\n</ul>\n<h2 id=\"React-Resources\"><a href=\"#React-Resources\" class=\"headerlink\" title=\"React Resources\"></a>React Resources</h2><ul>\n<li><a href=\"https://reactjs.org/tutorial/tutorial.html\" target=\"_blank\" rel=\"noopener\">Official Tutorial</a></li>\n<li><a href=\"http://buildwithreact.com/#articles\" target=\"_blank\" rel=\"noopener\">Build With React</a></li>\n<li><a href=\"https://reactcheatsheet.com/\" target=\"_blank\" rel=\"noopener\">React Cheat Sheet</a></li>\n<li><a href=\"https://levelup.gitconnected.com/typescript-and-react-using-create-react-app-a-step-by-step-guide-to-setting-up-your-first-app-6deda70843a4\" target=\"_blank\" rel=\"noopener\">React &amp; Typescript</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2018/02/react-d3-ecosystem/\" target=\"_blank\" rel=\"noopener\">React &amp; D3</a></li>\n<li><a href=\"https://learn.tylermcginnis.com\" target=\"_blank\" rel=\"noopener\">Tyler McGinnis Tutorials</a></li>\n</ul>\n","site":{"data":{"projects":[{"name":"tenzin.ca","url":"http://tenzin.ca/","desc":"home"},{"name":"curriculum vitae","url":"#","desc":"hire me"},{"name":"photography","url":"/photography/","desc":"a brief portfolio"},{"name":"eve online","url":"https://github.com/citizenofearth/eve","desc":"musings on the scifi space simulator"},{"name":"javascript patterns","url":"https://github.com/citizenofearth/javascript-patterns","desc":"common recipes for javascript"},{"name":"todomvc","url":"https://github.com/citizenofearth/todomvc","desc":"basic todo app written in several front-end frameworks"},{"name":"es6 features","url":"https://github.com/citizenofearth/es6features","desc":"overview of ecmascript 6"},{"name":"d3","url":"https://github.com/citizenofearth/d3","desc":"data driven documents"}]}},"excerpt":"","more":"<p><a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noopener\">React</a> is, quite simply, the view in MVC. It is a front-end library developed by Facebook and used to handle the view layer of a mobile or web app. React allows us to create reusable UI components and is currently one of the most popular JavaScript libraries with a strong foundation and large community backing it up.</p>\n<p><img src=\"/images/react.png\" alt=\"React JS\"></p>\n<p>React heavily encourages the creation of reusable UI components, which present data that changes over time. React abstracts away the DOM from you, offering a simpler programming model and better performance. React can also render on the server using Node, and it can even power native apps using React Native. React implements one-way reactive data flow, which reduces boilerplate and is easier to wrap your head around compared to traditional data binding.</p>\n<h2 id=\"React-Features\"><a href=\"#React-Features\" class=\"headerlink\" title=\"React Features\"></a>React Features</h2><ul>\n<li>JSX</li>\n<li>Components</li>\n<li>Unidirectional data flow and Flux</li>\n</ul>\n<h2 id=\"React-Resources\"><a href=\"#React-Resources\" class=\"headerlink\" title=\"React Resources\"></a>React Resources</h2><ul>\n<li><a href=\"https://reactjs.org/tutorial/tutorial.html\" target=\"_blank\" rel=\"noopener\">Official Tutorial</a></li>\n<li><a href=\"http://buildwithreact.com/#articles\" target=\"_blank\" rel=\"noopener\">Build With React</a></li>\n<li><a href=\"https://reactcheatsheet.com/\" target=\"_blank\" rel=\"noopener\">React Cheat Sheet</a></li>\n<li><a href=\"https://levelup.gitconnected.com/typescript-and-react-using-create-react-app-a-step-by-step-guide-to-setting-up-your-first-app-6deda70843a4\" target=\"_blank\" rel=\"noopener\">React &amp; Typescript</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2018/02/react-d3-ecosystem/\" target=\"_blank\" rel=\"noopener\">React &amp; D3</a></li>\n<li><a href=\"https://learn.tylermcginnis.com\" target=\"_blank\" rel=\"noopener\">Tyler McGinnis Tutorials</a></li>\n</ul>\n"},{"title":"hello world","date":"2017-04-19T14:12:04.000Z","_content":"\nYet another web developer's blog!  No matter what, do not paste the block of code below into your console!\n\n```javascript\nvar ________________ = [] + [];\n\nvar _ = +[];\n_++;\nvar _____ = _ + _;\n\nvar ___ = _____ + _____;\nvar __ = ___ + ___;\nvar ____ = __ + __;\nvar ______ = ____ + ____;\n\nvar _______ = ______ + _;\nvar ___________ = ______ + ______ + __;\n\nvar ______________ = ___________ + ____ -  _;\nvar ____________ = _ + _____;\n\nvar ________ = _______ * ____________ + _;\nvar _________ = ________ + _;\n\nvar _____________ = ______________ + ______ - ___ - _;\nvar __________ = _____________ -\n____________;\nvar _______________ = __________ - ____________;\nconsole.log(________________ +\nString.fromCharCode(___________, _________, _______________, _______________, __________,\n______, ______________, __________, _____________, _______________, ________, _______));\n\n```\n","source":"_posts/hello-world.md","raw":"---\ntitle: hello world\ndate: 2017-04-19 10:12:04\ntags:\n- hello\n---\n\nYet another web developer's blog!  No matter what, do not paste the block of code below into your console!\n\n```javascript\nvar ________________ = [] + [];\n\nvar _ = +[];\n_++;\nvar _____ = _ + _;\n\nvar ___ = _____ + _____;\nvar __ = ___ + ___;\nvar ____ = __ + __;\nvar ______ = ____ + ____;\n\nvar _______ = ______ + _;\nvar ___________ = ______ + ______ + __;\n\nvar ______________ = ___________ + ____ -  _;\nvar ____________ = _ + _____;\n\nvar ________ = _______ * ____________ + _;\nvar _________ = ________ + _;\n\nvar _____________ = ______________ + ______ - ___ - _;\nvar __________ = _____________ -\n____________;\nvar _______________ = __________ - ____________;\nconsole.log(________________ +\nString.fromCharCode(___________, _________, _______________, _______________, __________,\n______, ______________, __________, _____________, _______________, ________, _______));\n\n```\n","slug":"hello-world","published":1,"updated":"2019-04-22T20:27:31.658Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjusu50j00002wkqzaycgfu0i","content":"<p>Yet another web developer’s blog!  No matter what, do not paste the block of code below into your console!</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ________________ = [] + [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> _ = +[];</span><br><span class=\"line\">_++;</span><br><span class=\"line\"><span class=\"keyword\">var</span> _____ = _ + _;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ___ = _____ + _____;</span><br><span class=\"line\"><span class=\"keyword\">var</span> __ = ___ + ___;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ____ = __ + __;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ______ = ____ + ____;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> _______ = ______ + _;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ___________ = ______ + ______ + __;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ______________ = ___________ + ____ -  _;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ____________ = _ + _____;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ________ = _______ * ____________ + _;</span><br><span class=\"line\"><span class=\"keyword\">var</span> _________ = ________ + _;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> _____________ = ______________ + ______ - ___ - _;</span><br><span class=\"line\"><span class=\"keyword\">var</span> __________ = _____________ -</span><br><span class=\"line\">____________;</span><br><span class=\"line\"><span class=\"keyword\">var</span> _______________ = __________ - ____________;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(________________ +</span><br><span class=\"line\"><span class=\"built_in\">String</span>.fromCharCode(___________, _________, _______________, _______________, __________,</span><br><span class=\"line\">______, ______________, __________, _____________, _______________, ________, _______));</span><br></pre></td></tr></table></figure>\n","site":{"data":{"projects":[{"name":"tenzin.ca","url":"http://tenzin.ca/","desc":"home"},{"name":"curriculum vitae","url":"#","desc":"hire me"},{"name":"photography","url":"/photography/","desc":"a brief portfolio"},{"name":"eve online","url":"https://github.com/citizenofearth/eve","desc":"musings on the scifi space simulator"},{"name":"javascript patterns","url":"https://github.com/citizenofearth/javascript-patterns","desc":"common recipes for javascript"},{"name":"todomvc","url":"https://github.com/citizenofearth/todomvc","desc":"basic todo app written in several front-end frameworks"},{"name":"es6 features","url":"https://github.com/citizenofearth/es6features","desc":"overview of ecmascript 6"},{"name":"d3","url":"https://github.com/citizenofearth/d3","desc":"data driven documents"}]}},"excerpt":"","more":"<p>Yet another web developer’s blog!  No matter what, do not paste the block of code below into your console!</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ________________ = [] + [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> _ = +[];</span><br><span class=\"line\">_++;</span><br><span class=\"line\"><span class=\"keyword\">var</span> _____ = _ + _;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ___ = _____ + _____;</span><br><span class=\"line\"><span class=\"keyword\">var</span> __ = ___ + ___;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ____ = __ + __;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ______ = ____ + ____;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> _______ = ______ + _;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ___________ = ______ + ______ + __;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ______________ = ___________ + ____ -  _;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ____________ = _ + _____;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ________ = _______ * ____________ + _;</span><br><span class=\"line\"><span class=\"keyword\">var</span> _________ = ________ + _;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> _____________ = ______________ + ______ - ___ - _;</span><br><span class=\"line\"><span class=\"keyword\">var</span> __________ = _____________ -</span><br><span class=\"line\">____________;</span><br><span class=\"line\"><span class=\"keyword\">var</span> _______________ = __________ - ____________;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(________________ +</span><br><span class=\"line\"><span class=\"built_in\">String</span>.fromCharCode(___________, _________, _______________, _______________, __________,</span><br><span class=\"line\">______, ______________, __________, _____________, _______________, ________, _______));</span><br></pre></td></tr></table></figure>\n"},{"title":"cross-origin resource sharing","date":"2019-03-14T16:21:08.000Z","_content":"\nCross-Origin Resource Sharing (CORS) is a mechanism that uses additional HTTP headers to tell a browser to let a web application running at one origin (domain) have permission to access resources from a server at a different origin. A web application executes a cross-origin HTTP request when it requests a resource that has a different origin (domain, protocol, and port) than its own origin.\n\nXMLHttpRequest or Fetch invocations, web fonts, WebGL textures, and images/video frames drawn to a canvas using `drawImage()` use this cross-origin sharing standard to enable cross-site HTTP requests.\n\n![Cross-Origin Resource Sharing](/images/cors.png)\n\n## Access Control Scenarios\n\n### Simple Requests\n\nA request that does not trigger a CORS preflight. A simple request meets all of the following criteria:\n\n- Method:\n\n  - `GET`\n  - `HEAD`\n  - `POST`\n\n- `Content-Type`:\n\n  - `application/x-www-form-urlencoded`\n  - `multipart/form-data`\n  - `text/plain`\n\n- CORS-safelisted request headers which can be manually set:\n\n  - `Accept`\n  - `Accept-Language`\n  - `Content-Language`\n  - `Content-Type`\n  - `Downlink`\n  - `Save-Data`\n  - `Viewport-Width`\n  - `Width`\n\n- No event listeners are registered on any `XMLHttpRequestUpload` object used in the request\n\n- No `ReadableStream` object is used in the request\n\n### Preflighted Requests\n\nThese requests first send an HTTP request by the `OPTIONS` method to the resource on the other domain, in order to determine whether the actual request is safe to send. A request is preflighted if any of the following are true:\n\n- Method:\n\n  - `PUT`\n  - `DELETE`\n  - `CONNECT`\n  - `OPTIONS`\n  - `TRACE`\n  - `PATCH`\n\n- Non CORS-safelisted request headers\n\n- `Content-Type` other than:\n\n  - `application/x-www-form-urlencoded`\n  - `multipart/form-data`\n  - `text/plain`\n\n- Event listeners are registered on any `XMLHttpRequestUpload` object used in the request\n\n- `ReadableStream` object is used in the request\n\n### Requests with Credentials\n\nXMLHttpRequest and Fetch requests can also make \"credentialed\" requests, which are aware of HTTP cookies and HTTP Authentication information. By default, in XHR or fetch invocations, browsers will not send credentials. The `.withCredentials` property must be set to true.\n\n`const invocation = new XMLHttpRequest();\nconst url = 'http://bar.other/resources/credentialed-content/';\n\n```javascript\nfunction callOtherDomain() {\n  if (invocation) {\n    invocation.open(\"GET\", url, true);\n    invocation.withCredentials = true;\n    invocation.onreadystatechange = handler;\n    invocation.send();\n  }\n}\n```\n\nSince this is a simple `GET` request, it is not preflighted, but the browser will reject any response that does not have the `Access-Control-Allow-Credentials: true` header.\n\nExample exchange between client and server:\n\n```\nGET /resources/access-control-with-credentials/ HTTP/1.1\nHost: bar.other\nUser-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3pre) Gecko/20081130 Minefield/3.1b3pre\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nConnection: keep-alive\nReferer: http://foo.example/examples/credential.html\nOrigin: http://foo.example\nCookie: pageAccess=2\n\n\nHTTP/1.1 200 OK\nDate: Mon, 01 Dec 2008 01:34:52 GMT\nServer: Apache/2.0.61 (Unix) PHP/4.4.7 mod_ssl/2.0.61 OpenSSL/0.9.7e mod_fastcgi/2.4.2 DAV/2 SVN/1.4.2\nX-Powered-By: PHP/5.2.6\nAccess-Control-Allow-Origin: http://foo.example\nAccess-Control-Allow-Credentials: true\nCache-Control: no-cache\nPragma: no-cache\nSet-Cookie: pageAccess=3; expires=Wed, 31-Dec-2008 01:34:53 GMT\nVary: Accept-Encoding, Origin\nContent-Encoding: gzip\nContent-Length: 106\nKeep-Alive: timeout=2, max=100\nConnection: Keep-Alive\nContent-Type: text/plain\n\n\n[text/plain payload]\n```\n\nBecause the request headers in the above response include a `Cookie` header, the request would fail if the value of the `Access-Control-Allow-Origin` header was '\\*'.\n\nIf the request failed, the `Set-Cookie` in the above response would create an exception error.\n\nNote that cookies set in CORS responses are subject to normal third-party cookie policies, and thus not be saved if the user has configured their browser to reject them.\n\n## HTTP Request Headers\n\nThe following headers are used by clients to make cross-origin HTTP requests.\n\n### Access-Control-Request-Method\n\nThe `Access-Control-Request-Method` is used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made.\n\n```\nAccess-Control-Request-Method: <method>\n```\n\n### Access-Control-Request-Headers\n\nThe `Access-Control-Request-Headers` header is used when issuing a preflight request to let the server know what HTTP headers will be used when the actual request is made.\n\n```\nAccess-Control-Request-Headers: <field-name>[,<field-name>]*\n```\n\n## Compatibility\n\n- Internet Explorer 8 and 9 expose CORS via the `XDomainRequest` object, but have a full implementation in IE 10.\n- While Firefox 3.5 introduced support for cross-site `XMLHttpRequests` and Web Fonts, certain requests were limited until later versions. Specifically, Firefox 7 introduced the ability for cross-site HTTP requests for WebGL Textures, and Firefox 9 added support for Images drawn on a canvas using `drawImage()`.\n","source":"_posts/cross-origin-resource-sharing.md","raw":"---\ntitle: cross-origin resource sharing\ndate: 2019-03-14 12:21:08\ntags:\n  - javascript\n  - cors\n  - xhr\n  - ajax\n---\n\nCross-Origin Resource Sharing (CORS) is a mechanism that uses additional HTTP headers to tell a browser to let a web application running at one origin (domain) have permission to access resources from a server at a different origin. A web application executes a cross-origin HTTP request when it requests a resource that has a different origin (domain, protocol, and port) than its own origin.\n\nXMLHttpRequest or Fetch invocations, web fonts, WebGL textures, and images/video frames drawn to a canvas using `drawImage()` use this cross-origin sharing standard to enable cross-site HTTP requests.\n\n![Cross-Origin Resource Sharing](/images/cors.png)\n\n## Access Control Scenarios\n\n### Simple Requests\n\nA request that does not trigger a CORS preflight. A simple request meets all of the following criteria:\n\n- Method:\n\n  - `GET`\n  - `HEAD`\n  - `POST`\n\n- `Content-Type`:\n\n  - `application/x-www-form-urlencoded`\n  - `multipart/form-data`\n  - `text/plain`\n\n- CORS-safelisted request headers which can be manually set:\n\n  - `Accept`\n  - `Accept-Language`\n  - `Content-Language`\n  - `Content-Type`\n  - `Downlink`\n  - `Save-Data`\n  - `Viewport-Width`\n  - `Width`\n\n- No event listeners are registered on any `XMLHttpRequestUpload` object used in the request\n\n- No `ReadableStream` object is used in the request\n\n### Preflighted Requests\n\nThese requests first send an HTTP request by the `OPTIONS` method to the resource on the other domain, in order to determine whether the actual request is safe to send. A request is preflighted if any of the following are true:\n\n- Method:\n\n  - `PUT`\n  - `DELETE`\n  - `CONNECT`\n  - `OPTIONS`\n  - `TRACE`\n  - `PATCH`\n\n- Non CORS-safelisted request headers\n\n- `Content-Type` other than:\n\n  - `application/x-www-form-urlencoded`\n  - `multipart/form-data`\n  - `text/plain`\n\n- Event listeners are registered on any `XMLHttpRequestUpload` object used in the request\n\n- `ReadableStream` object is used in the request\n\n### Requests with Credentials\n\nXMLHttpRequest and Fetch requests can also make \"credentialed\" requests, which are aware of HTTP cookies and HTTP Authentication information. By default, in XHR or fetch invocations, browsers will not send credentials. The `.withCredentials` property must be set to true.\n\n`const invocation = new XMLHttpRequest();\nconst url = 'http://bar.other/resources/credentialed-content/';\n\n```javascript\nfunction callOtherDomain() {\n  if (invocation) {\n    invocation.open(\"GET\", url, true);\n    invocation.withCredentials = true;\n    invocation.onreadystatechange = handler;\n    invocation.send();\n  }\n}\n```\n\nSince this is a simple `GET` request, it is not preflighted, but the browser will reject any response that does not have the `Access-Control-Allow-Credentials: true` header.\n\nExample exchange between client and server:\n\n```\nGET /resources/access-control-with-credentials/ HTTP/1.1\nHost: bar.other\nUser-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3pre) Gecko/20081130 Minefield/3.1b3pre\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nConnection: keep-alive\nReferer: http://foo.example/examples/credential.html\nOrigin: http://foo.example\nCookie: pageAccess=2\n\n\nHTTP/1.1 200 OK\nDate: Mon, 01 Dec 2008 01:34:52 GMT\nServer: Apache/2.0.61 (Unix) PHP/4.4.7 mod_ssl/2.0.61 OpenSSL/0.9.7e mod_fastcgi/2.4.2 DAV/2 SVN/1.4.2\nX-Powered-By: PHP/5.2.6\nAccess-Control-Allow-Origin: http://foo.example\nAccess-Control-Allow-Credentials: true\nCache-Control: no-cache\nPragma: no-cache\nSet-Cookie: pageAccess=3; expires=Wed, 31-Dec-2008 01:34:53 GMT\nVary: Accept-Encoding, Origin\nContent-Encoding: gzip\nContent-Length: 106\nKeep-Alive: timeout=2, max=100\nConnection: Keep-Alive\nContent-Type: text/plain\n\n\n[text/plain payload]\n```\n\nBecause the request headers in the above response include a `Cookie` header, the request would fail if the value of the `Access-Control-Allow-Origin` header was '\\*'.\n\nIf the request failed, the `Set-Cookie` in the above response would create an exception error.\n\nNote that cookies set in CORS responses are subject to normal third-party cookie policies, and thus not be saved if the user has configured their browser to reject them.\n\n## HTTP Request Headers\n\nThe following headers are used by clients to make cross-origin HTTP requests.\n\n### Access-Control-Request-Method\n\nThe `Access-Control-Request-Method` is used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made.\n\n```\nAccess-Control-Request-Method: <method>\n```\n\n### Access-Control-Request-Headers\n\nThe `Access-Control-Request-Headers` header is used when issuing a preflight request to let the server know what HTTP headers will be used when the actual request is made.\n\n```\nAccess-Control-Request-Headers: <field-name>[,<field-name>]*\n```\n\n## Compatibility\n\n- Internet Explorer 8 and 9 expose CORS via the `XDomainRequest` object, but have a full implementation in IE 10.\n- While Firefox 3.5 introduced support for cross-site `XMLHttpRequests` and Web Fonts, certain requests were limited until later versions. Specifically, Firefox 7 introduced the ability for cross-site HTTP requests for WebGL Textures, and Firefox 9 added support for Images drawn on a canvas using `drawImage()`.\n","slug":"cross-origin-resource-sharing","published":1,"updated":"2019-04-22T20:23:03.465Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjusu50j80005wkqzp7yjfhbc","content":"<p>Cross-Origin Resource Sharing (CORS) is a mechanism that uses additional HTTP headers to tell a browser to let a web application running at one origin (domain) have permission to access resources from a server at a different origin. A web application executes a cross-origin HTTP request when it requests a resource that has a different origin (domain, protocol, and port) than its own origin.</p>\n<p>XMLHttpRequest or Fetch invocations, web fonts, WebGL textures, and images/video frames drawn to a canvas using <code>drawImage()</code> use this cross-origin sharing standard to enable cross-site HTTP requests.</p>\n<p><img src=\"/images/cors.png\" alt=\"Cross-Origin Resource Sharing\"></p>\n<h2 id=\"Access-Control-Scenarios\"><a href=\"#Access-Control-Scenarios\" class=\"headerlink\" title=\"Access Control Scenarios\"></a>Access Control Scenarios</h2><h3 id=\"Simple-Requests\"><a href=\"#Simple-Requests\" class=\"headerlink\" title=\"Simple Requests\"></a>Simple Requests</h3><p>A request that does not trigger a CORS preflight. A simple request meets all of the following criteria:</p>\n<ul>\n<li><p>Method:</p>\n<ul>\n<li><code>GET</code></li>\n<li><code>HEAD</code></li>\n<li><code>POST</code></li>\n</ul>\n</li>\n<li><p><code>Content-Type</code>:</p>\n<ul>\n<li><code>application/x-www-form-urlencoded</code></li>\n<li><code>multipart/form-data</code></li>\n<li><code>text/plain</code></li>\n</ul>\n</li>\n<li><p>CORS-safelisted request headers which can be manually set:</p>\n<ul>\n<li><code>Accept</code></li>\n<li><code>Accept-Language</code></li>\n<li><code>Content-Language</code></li>\n<li><code>Content-Type</code></li>\n<li><code>Downlink</code></li>\n<li><code>Save-Data</code></li>\n<li><code>Viewport-Width</code></li>\n<li><code>Width</code></li>\n</ul>\n</li>\n<li><p>No event listeners are registered on any <code>XMLHttpRequestUpload</code> object used in the request</p>\n</li>\n<li><p>No <code>ReadableStream</code> object is used in the request</p>\n</li>\n</ul>\n<h3 id=\"Preflighted-Requests\"><a href=\"#Preflighted-Requests\" class=\"headerlink\" title=\"Preflighted Requests\"></a>Preflighted Requests</h3><p>These requests first send an HTTP request by the <code>OPTIONS</code> method to the resource on the other domain, in order to determine whether the actual request is safe to send. A request is preflighted if any of the following are true:</p>\n<ul>\n<li><p>Method:</p>\n<ul>\n<li><code>PUT</code></li>\n<li><code>DELETE</code></li>\n<li><code>CONNECT</code></li>\n<li><code>OPTIONS</code></li>\n<li><code>TRACE</code></li>\n<li><code>PATCH</code></li>\n</ul>\n</li>\n<li><p>Non CORS-safelisted request headers</p>\n</li>\n<li><p><code>Content-Type</code> other than:</p>\n<ul>\n<li><code>application/x-www-form-urlencoded</code></li>\n<li><code>multipart/form-data</code></li>\n<li><code>text/plain</code></li>\n</ul>\n</li>\n<li><p>Event listeners are registered on any <code>XMLHttpRequestUpload</code> object used in the request</p>\n</li>\n<li><p><code>ReadableStream</code> object is used in the request</p>\n</li>\n</ul>\n<h3 id=\"Requests-with-Credentials\"><a href=\"#Requests-with-Credentials\" class=\"headerlink\" title=\"Requests with Credentials\"></a>Requests with Credentials</h3><p>XMLHttpRequest and Fetch requests can also make “credentialed” requests, which are aware of HTTP cookies and HTTP Authentication information. By default, in XHR or fetch invocations, browsers will not send credentials. The <code>.withCredentials</code> property must be set to true.</p>\n<p>`const invocation = new XMLHttpRequest();<br>const url = ‘<a href=\"http://bar.other/resources/credentialed-content/&#39;\" target=\"_blank\" rel=\"noopener\">http://bar.other/resources/credentialed-content/&#39;</a>;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callOtherDomain</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (invocation) &#123;</span><br><span class=\"line\">    invocation.open(<span class=\"string\">\"GET\"</span>, url, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    invocation.withCredentials = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    invocation.onreadystatechange = handler;</span><br><span class=\"line\">    invocation.send();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Since this is a simple <code>GET</code> request, it is not preflighted, but the browser will reject any response that does not have the <code>Access-Control-Allow-Credentials: true</code> header.</p>\n<p>Example exchange between client and server:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /resources/access-control-with-credentials/ HTTP/1.1</span><br><span class=\"line\">Host: bar.other</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3pre) Gecko/20081130 Minefield/3.1b3pre</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class=\"line\">Accept-Language: en-us,en;q=0.5</span><br><span class=\"line\">Accept-Encoding: gzip,deflate</span><br><span class=\"line\">Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7</span><br><span class=\"line\">Connection: keep-alive</span><br><span class=\"line\">Referer: http://foo.example/examples/credential.html</span><br><span class=\"line\">Origin: http://foo.example</span><br><span class=\"line\">Cookie: pageAccess=2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Date: Mon, 01 Dec 2008 01:34:52 GMT</span><br><span class=\"line\">Server: Apache/2.0.61 (Unix) PHP/4.4.7 mod_ssl/2.0.61 OpenSSL/0.9.7e mod_fastcgi/2.4.2 DAV/2 SVN/1.4.2</span><br><span class=\"line\">X-Powered-By: PHP/5.2.6</span><br><span class=\"line\">Access-Control-Allow-Origin: http://foo.example</span><br><span class=\"line\">Access-Control-Allow-Credentials: true</span><br><span class=\"line\">Cache-Control: no-cache</span><br><span class=\"line\">Pragma: no-cache</span><br><span class=\"line\">Set-Cookie: pageAccess=3; expires=Wed, 31-Dec-2008 01:34:53 GMT</span><br><span class=\"line\">Vary: Accept-Encoding, Origin</span><br><span class=\"line\">Content-Encoding: gzip</span><br><span class=\"line\">Content-Length: 106</span><br><span class=\"line\">Keep-Alive: timeout=2, max=100</span><br><span class=\"line\">Connection: Keep-Alive</span><br><span class=\"line\">Content-Type: text/plain</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[text/plain payload]</span><br></pre></td></tr></table></figure>\n<p>Because the request headers in the above response include a <code>Cookie</code> header, the request would fail if the value of the <code>Access-Control-Allow-Origin</code> header was ‘*‘.</p>\n<p>If the request failed, the <code>Set-Cookie</code> in the above response would create an exception error.</p>\n<p>Note that cookies set in CORS responses are subject to normal third-party cookie policies, and thus not be saved if the user has configured their browser to reject them.</p>\n<h2 id=\"HTTP-Request-Headers\"><a href=\"#HTTP-Request-Headers\" class=\"headerlink\" title=\"HTTP Request Headers\"></a>HTTP Request Headers</h2><p>The following headers are used by clients to make cross-origin HTTP requests.</p>\n<h3 id=\"Access-Control-Request-Method\"><a href=\"#Access-Control-Request-Method\" class=\"headerlink\" title=\"Access-Control-Request-Method\"></a>Access-Control-Request-Method</h3><p>The <code>Access-Control-Request-Method</code> is used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Access-Control-Request-Method: &lt;method&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Access-Control-Request-Headers\"><a href=\"#Access-Control-Request-Headers\" class=\"headerlink\" title=\"Access-Control-Request-Headers\"></a>Access-Control-Request-Headers</h3><p>The <code>Access-Control-Request-Headers</code> header is used when issuing a preflight request to let the server know what HTTP headers will be used when the actual request is made.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Access-Control-Request-Headers: &lt;field-name&gt;[,&lt;field-name&gt;]*</span><br></pre></td></tr></table></figure>\n<h2 id=\"Compatibility\"><a href=\"#Compatibility\" class=\"headerlink\" title=\"Compatibility\"></a>Compatibility</h2><ul>\n<li>Internet Explorer 8 and 9 expose CORS via the <code>XDomainRequest</code> object, but have a full implementation in IE 10.</li>\n<li>While Firefox 3.5 introduced support for cross-site <code>XMLHttpRequests</code> and Web Fonts, certain requests were limited until later versions. Specifically, Firefox 7 introduced the ability for cross-site HTTP requests for WebGL Textures, and Firefox 9 added support for Images drawn on a canvas using <code>drawImage()</code>.</li>\n</ul>\n","site":{"data":{"projects":[{"name":"tenzin.ca","url":"http://tenzin.ca/","desc":"home"},{"name":"curriculum vitae","url":"#","desc":"hire me"},{"name":"photography","url":"/photography/","desc":"a brief portfolio"},{"name":"eve online","url":"https://github.com/citizenofearth/eve","desc":"musings on the scifi space simulator"},{"name":"javascript patterns","url":"https://github.com/citizenofearth/javascript-patterns","desc":"common recipes for javascript"},{"name":"todomvc","url":"https://github.com/citizenofearth/todomvc","desc":"basic todo app written in several front-end frameworks"},{"name":"es6 features","url":"https://github.com/citizenofearth/es6features","desc":"overview of ecmascript 6"},{"name":"d3","url":"https://github.com/citizenofearth/d3","desc":"data driven documents"}]}},"excerpt":"","more":"<p>Cross-Origin Resource Sharing (CORS) is a mechanism that uses additional HTTP headers to tell a browser to let a web application running at one origin (domain) have permission to access resources from a server at a different origin. A web application executes a cross-origin HTTP request when it requests a resource that has a different origin (domain, protocol, and port) than its own origin.</p>\n<p>XMLHttpRequest or Fetch invocations, web fonts, WebGL textures, and images/video frames drawn to a canvas using <code>drawImage()</code> use this cross-origin sharing standard to enable cross-site HTTP requests.</p>\n<p><img src=\"/images/cors.png\" alt=\"Cross-Origin Resource Sharing\"></p>\n<h2 id=\"Access-Control-Scenarios\"><a href=\"#Access-Control-Scenarios\" class=\"headerlink\" title=\"Access Control Scenarios\"></a>Access Control Scenarios</h2><h3 id=\"Simple-Requests\"><a href=\"#Simple-Requests\" class=\"headerlink\" title=\"Simple Requests\"></a>Simple Requests</h3><p>A request that does not trigger a CORS preflight. A simple request meets all of the following criteria:</p>\n<ul>\n<li><p>Method:</p>\n<ul>\n<li><code>GET</code></li>\n<li><code>HEAD</code></li>\n<li><code>POST</code></li>\n</ul>\n</li>\n<li><p><code>Content-Type</code>:</p>\n<ul>\n<li><code>application/x-www-form-urlencoded</code></li>\n<li><code>multipart/form-data</code></li>\n<li><code>text/plain</code></li>\n</ul>\n</li>\n<li><p>CORS-safelisted request headers which can be manually set:</p>\n<ul>\n<li><code>Accept</code></li>\n<li><code>Accept-Language</code></li>\n<li><code>Content-Language</code></li>\n<li><code>Content-Type</code></li>\n<li><code>Downlink</code></li>\n<li><code>Save-Data</code></li>\n<li><code>Viewport-Width</code></li>\n<li><code>Width</code></li>\n</ul>\n</li>\n<li><p>No event listeners are registered on any <code>XMLHttpRequestUpload</code> object used in the request</p>\n</li>\n<li><p>No <code>ReadableStream</code> object is used in the request</p>\n</li>\n</ul>\n<h3 id=\"Preflighted-Requests\"><a href=\"#Preflighted-Requests\" class=\"headerlink\" title=\"Preflighted Requests\"></a>Preflighted Requests</h3><p>These requests first send an HTTP request by the <code>OPTIONS</code> method to the resource on the other domain, in order to determine whether the actual request is safe to send. A request is preflighted if any of the following are true:</p>\n<ul>\n<li><p>Method:</p>\n<ul>\n<li><code>PUT</code></li>\n<li><code>DELETE</code></li>\n<li><code>CONNECT</code></li>\n<li><code>OPTIONS</code></li>\n<li><code>TRACE</code></li>\n<li><code>PATCH</code></li>\n</ul>\n</li>\n<li><p>Non CORS-safelisted request headers</p>\n</li>\n<li><p><code>Content-Type</code> other than:</p>\n<ul>\n<li><code>application/x-www-form-urlencoded</code></li>\n<li><code>multipart/form-data</code></li>\n<li><code>text/plain</code></li>\n</ul>\n</li>\n<li><p>Event listeners are registered on any <code>XMLHttpRequestUpload</code> object used in the request</p>\n</li>\n<li><p><code>ReadableStream</code> object is used in the request</p>\n</li>\n</ul>\n<h3 id=\"Requests-with-Credentials\"><a href=\"#Requests-with-Credentials\" class=\"headerlink\" title=\"Requests with Credentials\"></a>Requests with Credentials</h3><p>XMLHttpRequest and Fetch requests can also make “credentialed” requests, which are aware of HTTP cookies and HTTP Authentication information. By default, in XHR or fetch invocations, browsers will not send credentials. The <code>.withCredentials</code> property must be set to true.</p>\n<p>`const invocation = new XMLHttpRequest();<br>const url = ‘<a href=\"http://bar.other/resources/credentialed-content/&#39;\" target=\"_blank\" rel=\"noopener\">http://bar.other/resources/credentialed-content/&#39;</a>;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callOtherDomain</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (invocation) &#123;</span><br><span class=\"line\">    invocation.open(<span class=\"string\">\"GET\"</span>, url, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    invocation.withCredentials = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    invocation.onreadystatechange = handler;</span><br><span class=\"line\">    invocation.send();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Since this is a simple <code>GET</code> request, it is not preflighted, but the browser will reject any response that does not have the <code>Access-Control-Allow-Credentials: true</code> header.</p>\n<p>Example exchange between client and server:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /resources/access-control-with-credentials/ HTTP/1.1</span><br><span class=\"line\">Host: bar.other</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3pre) Gecko/20081130 Minefield/3.1b3pre</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class=\"line\">Accept-Language: en-us,en;q=0.5</span><br><span class=\"line\">Accept-Encoding: gzip,deflate</span><br><span class=\"line\">Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7</span><br><span class=\"line\">Connection: keep-alive</span><br><span class=\"line\">Referer: http://foo.example/examples/credential.html</span><br><span class=\"line\">Origin: http://foo.example</span><br><span class=\"line\">Cookie: pageAccess=2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Date: Mon, 01 Dec 2008 01:34:52 GMT</span><br><span class=\"line\">Server: Apache/2.0.61 (Unix) PHP/4.4.7 mod_ssl/2.0.61 OpenSSL/0.9.7e mod_fastcgi/2.4.2 DAV/2 SVN/1.4.2</span><br><span class=\"line\">X-Powered-By: PHP/5.2.6</span><br><span class=\"line\">Access-Control-Allow-Origin: http://foo.example</span><br><span class=\"line\">Access-Control-Allow-Credentials: true</span><br><span class=\"line\">Cache-Control: no-cache</span><br><span class=\"line\">Pragma: no-cache</span><br><span class=\"line\">Set-Cookie: pageAccess=3; expires=Wed, 31-Dec-2008 01:34:53 GMT</span><br><span class=\"line\">Vary: Accept-Encoding, Origin</span><br><span class=\"line\">Content-Encoding: gzip</span><br><span class=\"line\">Content-Length: 106</span><br><span class=\"line\">Keep-Alive: timeout=2, max=100</span><br><span class=\"line\">Connection: Keep-Alive</span><br><span class=\"line\">Content-Type: text/plain</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[text/plain payload]</span><br></pre></td></tr></table></figure>\n<p>Because the request headers in the above response include a <code>Cookie</code> header, the request would fail if the value of the <code>Access-Control-Allow-Origin</code> header was ‘*‘.</p>\n<p>If the request failed, the <code>Set-Cookie</code> in the above response would create an exception error.</p>\n<p>Note that cookies set in CORS responses are subject to normal third-party cookie policies, and thus not be saved if the user has configured their browser to reject them.</p>\n<h2 id=\"HTTP-Request-Headers\"><a href=\"#HTTP-Request-Headers\" class=\"headerlink\" title=\"HTTP Request Headers\"></a>HTTP Request Headers</h2><p>The following headers are used by clients to make cross-origin HTTP requests.</p>\n<h3 id=\"Access-Control-Request-Method\"><a href=\"#Access-Control-Request-Method\" class=\"headerlink\" title=\"Access-Control-Request-Method\"></a>Access-Control-Request-Method</h3><p>The <code>Access-Control-Request-Method</code> is used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Access-Control-Request-Method: &lt;method&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Access-Control-Request-Headers\"><a href=\"#Access-Control-Request-Headers\" class=\"headerlink\" title=\"Access-Control-Request-Headers\"></a>Access-Control-Request-Headers</h3><p>The <code>Access-Control-Request-Headers</code> header is used when issuing a preflight request to let the server know what HTTP headers will be used when the actual request is made.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Access-Control-Request-Headers: &lt;field-name&gt;[,&lt;field-name&gt;]*</span><br></pre></td></tr></table></figure>\n<h2 id=\"Compatibility\"><a href=\"#Compatibility\" class=\"headerlink\" title=\"Compatibility\"></a>Compatibility</h2><ul>\n<li>Internet Explorer 8 and 9 expose CORS via the <code>XDomainRequest</code> object, but have a full implementation in IE 10.</li>\n<li>While Firefox 3.5 introduced support for cross-site <code>XMLHttpRequests</code> and Web Fonts, certain requests were limited until later versions. Specifically, Firefox 7 introduced the ability for cross-site HTTP requests for WebGL Textures, and Firefox 9 added support for Images drawn on a canvas using <code>drawImage()</code>.</li>\n</ul>\n"},{"title":"D3.js","date":"2017-04-24T00:12:25.000Z","_content":"\n![Data-Driven Documents](/images/d3.png)\n\n<style>\ndiv.bar {\n\tdisplay: inline-block;\n\twidth: 7px;\n\theight: 75px;   /* We'll override this later */\n\tbackground-color: #7404a4;\n\tmargin-right: 1px;\n}\n</style>\n\n[D3](https://d3js.org) (or Data-Driven Documents) is a JavaScript library for manipulating documents based on data.  D3 helps you bring data to life using HTML, SVG, and CSS.  D3's emphasis on web standards gives you the full capabilities of modern browsers without tying yourself to a proprietary framework, combining powerful visualization components and a data-driven approach to DOM manipulation.\n\nTo use D3, copy this snippet:\n```html\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n```\n\nD3 allows you to bind artibrary data to the DOM, and then apply data-driven transformations to the document.  For example, you can use D3 to generate an HTML table from an array of numbers.  Or, use the same data to create an interactive SVG bar chart with smooth transitions and interaction.\n\nD3 is not a monolithic framework that seeks to provide every conceivable feature.  Instead, it solves the crux of the problem: efficient manipulation of documents based on data.  This avoids proprietary representation and affords extraordinary flexibility, exposing the full capabilities of web standards such as HTML, SVG, and CSS.  With minimal overhead, D3 is extremely fast, supporting large datasets and dynamic behaviors for interaction and animation.  D3's functional style allows code reuse through a diverse collection of [official](https://github.com/d3/d3/blob/master/API.md) and [community-developed](https://www.npmjs.com/browse/keyword/d3-module) modules.\n\n### Resources\n- [Examples](https://github.com/d3/d3/wiki/Gallery)\n- [Tutorials](https://github.com/d3/d3/wiki/Tutorials)\n- [Wiki](https://github.com/d3/d3/wiki)\n\n***\n\n<svg width=\"592\" height=\"500\">\n\t<rect x=\"0\" y=\"0\" width=\"500\" height=\"50\" />\n</svg>\n\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n\n<script type=\"text/javascript\">\n\tvar dataset = [];\n\tfor (var i = 0; i < 76; i++) {\n\t\tvar newNumber = Math.round(Math.random() * 30);\n\t\tdataset.push(newNumber);\n\t}\n\n\td3.select(\".content\")\n\t\t.selectAll(\"div\")\n\t\t.data(dataset)  // <-- The answer is here!\n\t\t.enter()\n\t\t.append(\"div\")\n\t\t.attr(\"class\", \"bar\")\n\t\t.style(\"height\", function(d) {\n\t\t\tvar barHeight = d * 5;\n\t\t\treturn barHeight + \"px\";\n\t\t});\n</script>\n\n***\n\n<button class=\"button\" onclick=\"transition()\">Update</button>\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n<script>\n\nvar n = 20, // number of layers\n\tm = 200, // number of samples per layer\n\tk = 10; // number of bumps per layer\n\nvar stack = d3.stack().keys(d3.range(n)).offset(d3.stackOffsetWiggle),\n\tlayers0 = stack(d3.transpose(d3.range(n).map(function() { return bumps(m, k); }))),\n\tlayers1 = stack(d3.transpose(d3.range(n).map(function() { return bumps(m, k); }))),\n\tlayers = layers0.concat(layers1);\n\nvar svg = d3.select(\"svg\"),\n\twidth = +svg.attr(\"width\"),\n\theight = +svg.attr(\"height\");\n\nvar x = d3.scaleLinear()\n\t.domain([0, m - 1])\n\t.range([0, width]);\n\nvar y = d3.scaleLinear()\n\t.domain([d3.min(layers, stackMin), d3.max(layers, stackMax)])\n\t.range([height, 0]);\n\nvar z = d3.interpolateCool;\n\nvar area = d3.area()\n\t.x(function(d, i) { return x(i); })\n\t.y0(function(d) { return y(d[0]); })\n\t.y1(function(d) { return y(d[1]); });\n\nsvg.selectAll(\"path\")\n  .data(layers0)\n  .enter().append(\"path\")\n\t.attr(\"d\", area)\n\t.attr(\"fill\", function() { return z(Math.random()); });\n\nfunction stackMax(layer) {\n  return d3.max(layer, function(d) { return d[1]; });\n}\n\nfunction stackMin(layer) {\n  return d3.min(layer, function(d) { return d[0]; });\n}\n\nfunction transition() {\n  var t;\n  d3.selectAll(\"path\")\n\t.data((t = layers1, layers1 = layers0, layers0 = t))\n\t.transition()\n\t  .duration(2500)\n\t  .attr(\"d\", area);\n}\n\n// Inspired by Lee Byron’s test data generator.\nfunction bumps(n, m) {\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = 0;\n  for (i = 0; i < m; ++i) bump(a, n);\n  return a;\n}\n\nfunction bump(a, n) {\n  var x = 1 / (0.1 + Math.random()),\n\t  y = 2 * Math.random() - 0.5,\n\t  z = 10 / (0.1 + Math.random());\n  for (var i = 0; i < n; i++) {\n\tvar w = (i / n - y) * z;\n\ta[i] += x * Math.exp(-w * w);\n  }\n}\n\n</script>\n","source":"_posts/d3.md","raw":"---\ntitle: D3.js\ndate: 2017-04-23 20:12:25\ntags:\n- d3\n- javascript\n- data\n---\n\n![Data-Driven Documents](/images/d3.png)\n\n<style>\ndiv.bar {\n\tdisplay: inline-block;\n\twidth: 7px;\n\theight: 75px;   /* We'll override this later */\n\tbackground-color: #7404a4;\n\tmargin-right: 1px;\n}\n</style>\n\n[D3](https://d3js.org) (or Data-Driven Documents) is a JavaScript library for manipulating documents based on data.  D3 helps you bring data to life using HTML, SVG, and CSS.  D3's emphasis on web standards gives you the full capabilities of modern browsers without tying yourself to a proprietary framework, combining powerful visualization components and a data-driven approach to DOM manipulation.\n\nTo use D3, copy this snippet:\n```html\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n```\n\nD3 allows you to bind artibrary data to the DOM, and then apply data-driven transformations to the document.  For example, you can use D3 to generate an HTML table from an array of numbers.  Or, use the same data to create an interactive SVG bar chart with smooth transitions and interaction.\n\nD3 is not a monolithic framework that seeks to provide every conceivable feature.  Instead, it solves the crux of the problem: efficient manipulation of documents based on data.  This avoids proprietary representation and affords extraordinary flexibility, exposing the full capabilities of web standards such as HTML, SVG, and CSS.  With minimal overhead, D3 is extremely fast, supporting large datasets and dynamic behaviors for interaction and animation.  D3's functional style allows code reuse through a diverse collection of [official](https://github.com/d3/d3/blob/master/API.md) and [community-developed](https://www.npmjs.com/browse/keyword/d3-module) modules.\n\n### Resources\n- [Examples](https://github.com/d3/d3/wiki/Gallery)\n- [Tutorials](https://github.com/d3/d3/wiki/Tutorials)\n- [Wiki](https://github.com/d3/d3/wiki)\n\n***\n\n<svg width=\"592\" height=\"500\">\n\t<rect x=\"0\" y=\"0\" width=\"500\" height=\"50\" />\n</svg>\n\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n\n<script type=\"text/javascript\">\n\tvar dataset = [];\n\tfor (var i = 0; i < 76; i++) {\n\t\tvar newNumber = Math.round(Math.random() * 30);\n\t\tdataset.push(newNumber);\n\t}\n\n\td3.select(\".content\")\n\t\t.selectAll(\"div\")\n\t\t.data(dataset)  // <-- The answer is here!\n\t\t.enter()\n\t\t.append(\"div\")\n\t\t.attr(\"class\", \"bar\")\n\t\t.style(\"height\", function(d) {\n\t\t\tvar barHeight = d * 5;\n\t\t\treturn barHeight + \"px\";\n\t\t});\n</script>\n\n***\n\n<button class=\"button\" onclick=\"transition()\">Update</button>\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n<script>\n\nvar n = 20, // number of layers\n\tm = 200, // number of samples per layer\n\tk = 10; // number of bumps per layer\n\nvar stack = d3.stack().keys(d3.range(n)).offset(d3.stackOffsetWiggle),\n\tlayers0 = stack(d3.transpose(d3.range(n).map(function() { return bumps(m, k); }))),\n\tlayers1 = stack(d3.transpose(d3.range(n).map(function() { return bumps(m, k); }))),\n\tlayers = layers0.concat(layers1);\n\nvar svg = d3.select(\"svg\"),\n\twidth = +svg.attr(\"width\"),\n\theight = +svg.attr(\"height\");\n\nvar x = d3.scaleLinear()\n\t.domain([0, m - 1])\n\t.range([0, width]);\n\nvar y = d3.scaleLinear()\n\t.domain([d3.min(layers, stackMin), d3.max(layers, stackMax)])\n\t.range([height, 0]);\n\nvar z = d3.interpolateCool;\n\nvar area = d3.area()\n\t.x(function(d, i) { return x(i); })\n\t.y0(function(d) { return y(d[0]); })\n\t.y1(function(d) { return y(d[1]); });\n\nsvg.selectAll(\"path\")\n  .data(layers0)\n  .enter().append(\"path\")\n\t.attr(\"d\", area)\n\t.attr(\"fill\", function() { return z(Math.random()); });\n\nfunction stackMax(layer) {\n  return d3.max(layer, function(d) { return d[1]; });\n}\n\nfunction stackMin(layer) {\n  return d3.min(layer, function(d) { return d[0]; });\n}\n\nfunction transition() {\n  var t;\n  d3.selectAll(\"path\")\n\t.data((t = layers1, layers1 = layers0, layers0 = t))\n\t.transition()\n\t  .duration(2500)\n\t  .attr(\"d\", area);\n}\n\n// Inspired by Lee Byron’s test data generator.\nfunction bumps(n, m) {\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = 0;\n  for (i = 0; i < m; ++i) bump(a, n);\n  return a;\n}\n\nfunction bump(a, n) {\n  var x = 1 / (0.1 + Math.random()),\n\t  y = 2 * Math.random() - 0.5,\n\t  z = 10 / (0.1 + Math.random());\n  for (var i = 0; i < n; i++) {\n\tvar w = (i / n - y) * z;\n\ta[i] += x * Math.exp(-w * w);\n  }\n}\n\n</script>\n","slug":"d3","published":1,"updated":"2019-04-22T20:23:16.376Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjusu50ja0006wkqzfj0p5pro","content":"<p><img src=\"/images/d3.png\" alt=\"Data-Driven Documents\"></p>\n<style>\ndiv.bar {\n    display: inline-block;\n    width: 7px;\n    height: 75px;   /* We'll override this later */\n    background-color: #7404a4;\n    margin-right: 1px;\n}\n</style>\n\n<p><a href=\"https://d3js.org\" target=\"_blank\" rel=\"noopener\">D3</a> (or Data-Driven Documents) is a JavaScript library for manipulating documents based on data.  D3 helps you bring data to life using HTML, SVG, and CSS.  D3’s emphasis on web standards gives you the full capabilities of modern browsers without tying yourself to a proprietary framework, combining powerful visualization components and a data-driven approach to DOM manipulation.</p>\n<p>To use D3, copy this snippet:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://d3js.org/d3.v4.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>D3 allows you to bind artibrary data to the DOM, and then apply data-driven transformations to the document.  For example, you can use D3 to generate an HTML table from an array of numbers.  Or, use the same data to create an interactive SVG bar chart with smooth transitions and interaction.</p>\n<p>D3 is not a monolithic framework that seeks to provide every conceivable feature.  Instead, it solves the crux of the problem: efficient manipulation of documents based on data.  This avoids proprietary representation and affords extraordinary flexibility, exposing the full capabilities of web standards such as HTML, SVG, and CSS.  With minimal overhead, D3 is extremely fast, supporting large datasets and dynamic behaviors for interaction and animation.  D3’s functional style allows code reuse through a diverse collection of <a href=\"https://github.com/d3/d3/blob/master/API.md\" target=\"_blank\" rel=\"noopener\">official</a> and <a href=\"https://www.npmjs.com/browse/keyword/d3-module\" target=\"_blank\" rel=\"noopener\">community-developed</a> modules.</p>\n<h3 id=\"Resources\"><a href=\"#Resources\" class=\"headerlink\" title=\"Resources\"></a>Resources</h3><ul>\n<li><a href=\"https://github.com/d3/d3/wiki/Gallery\" target=\"_blank\" rel=\"noopener\">Examples</a></li>\n<li><a href=\"https://github.com/d3/d3/wiki/Tutorials\" target=\"_blank\" rel=\"noopener\">Tutorials</a></li>\n<li><a href=\"https://github.com/d3/d3/wiki\" target=\"_blank\" rel=\"noopener\">Wiki</a></li>\n</ul>\n<hr>\n<svg width=\"592\" height=\"500\"><br/>    <rect x=\"0\" y=\"0\" width=\"500\" height=\"50\"/><br/></svg>\n\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n\n<script type=\"text/javascript\">\n    var dataset = [];\n    for (var i = 0; i < 76; i++) {\n        var newNumber = Math.round(Math.random() * 30);\n        dataset.push(newNumber);\n    }\n\n    d3.select(\".content\")\n        .selectAll(\"div\")\n        .data(dataset)  // <-- The answer is here!\n        .enter()\n        .append(\"div\")\n        .attr(\"class\", \"bar\")\n        .style(\"height\", function(d) {\n            var barHeight = d * 5;\n            return barHeight + \"px\";\n        });\n</script>\n\n<hr>\n<p><button class=\"button\" onclick=\"transition()\">Update</button></p>\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n<script>\n\nvar n = 20, // number of layers\n    m = 200, // number of samples per layer\n    k = 10; // number of bumps per layer\n\nvar stack = d3.stack().keys(d3.range(n)).offset(d3.stackOffsetWiggle),\n    layers0 = stack(d3.transpose(d3.range(n).map(function() { return bumps(m, k); }))),\n    layers1 = stack(d3.transpose(d3.range(n).map(function() { return bumps(m, k); }))),\n    layers = layers0.concat(layers1);\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar x = d3.scaleLinear()\n    .domain([0, m - 1])\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .domain([d3.min(layers, stackMin), d3.max(layers, stackMax)])\n    .range([height, 0]);\n\nvar z = d3.interpolateCool;\n\nvar area = d3.area()\n    .x(function(d, i) { return x(i); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); });\n\nsvg.selectAll(\"path\")\n  .data(layers0)\n  .enter().append(\"path\")\n    .attr(\"d\", area)\n    .attr(\"fill\", function() { return z(Math.random()); });\n\nfunction stackMax(layer) {\n  return d3.max(layer, function(d) { return d[1]; });\n}\n\nfunction stackMin(layer) {\n  return d3.min(layer, function(d) { return d[0]; });\n}\n\nfunction transition() {\n  var t;\n  d3.selectAll(\"path\")\n    .data((t = layers1, layers1 = layers0, layers0 = t))\n    .transition()\n      .duration(2500)\n      .attr(\"d\", area);\n}\n\n// Inspired by Lee Byron’s test data generator.\nfunction bumps(n, m) {\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = 0;\n  for (i = 0; i < m; ++i) bump(a, n);\n  return a;\n}\n\nfunction bump(a, n) {\n  var x = 1 / (0.1 + Math.random()),\n      y = 2 * Math.random() - 0.5,\n      z = 10 / (0.1 + Math.random());\n  for (var i = 0; i < n; i++) {\n    var w = (i / n - y) * z;\n    a[i] += x * Math.exp(-w * w);\n  }\n}\n\n</script>\n","site":{"data":{"projects":[{"name":"tenzin.ca","url":"http://tenzin.ca/","desc":"home"},{"name":"curriculum vitae","url":"#","desc":"hire me"},{"name":"photography","url":"/photography/","desc":"a brief portfolio"},{"name":"eve online","url":"https://github.com/citizenofearth/eve","desc":"musings on the scifi space simulator"},{"name":"javascript patterns","url":"https://github.com/citizenofearth/javascript-patterns","desc":"common recipes for javascript"},{"name":"todomvc","url":"https://github.com/citizenofearth/todomvc","desc":"basic todo app written in several front-end frameworks"},{"name":"es6 features","url":"https://github.com/citizenofearth/es6features","desc":"overview of ecmascript 6"},{"name":"d3","url":"https://github.com/citizenofearth/d3","desc":"data driven documents"}]}},"excerpt":"","more":"<p><img src=\"/images/d3.png\" alt=\"Data-Driven Documents\"></p>\n<style>\ndiv.bar {\n    display: inline-block;\n    width: 7px;\n    height: 75px;   /* We'll override this later */\n    background-color: #7404a4;\n    margin-right: 1px;\n}\n</style>\n\n<p><a href=\"https://d3js.org\" target=\"_blank\" rel=\"noopener\">D3</a> (or Data-Driven Documents) is a JavaScript library for manipulating documents based on data.  D3 helps you bring data to life using HTML, SVG, and CSS.  D3’s emphasis on web standards gives you the full capabilities of modern browsers without tying yourself to a proprietary framework, combining powerful visualization components and a data-driven approach to DOM manipulation.</p>\n<p>To use D3, copy this snippet:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://d3js.org/d3.v4.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>D3 allows you to bind artibrary data to the DOM, and then apply data-driven transformations to the document.  For example, you can use D3 to generate an HTML table from an array of numbers.  Or, use the same data to create an interactive SVG bar chart with smooth transitions and interaction.</p>\n<p>D3 is not a monolithic framework that seeks to provide every conceivable feature.  Instead, it solves the crux of the problem: efficient manipulation of documents based on data.  This avoids proprietary representation and affords extraordinary flexibility, exposing the full capabilities of web standards such as HTML, SVG, and CSS.  With minimal overhead, D3 is extremely fast, supporting large datasets and dynamic behaviors for interaction and animation.  D3’s functional style allows code reuse through a diverse collection of <a href=\"https://github.com/d3/d3/blob/master/API.md\" target=\"_blank\" rel=\"noopener\">official</a> and <a href=\"https://www.npmjs.com/browse/keyword/d3-module\" target=\"_blank\" rel=\"noopener\">community-developed</a> modules.</p>\n<h3 id=\"Resources\"><a href=\"#Resources\" class=\"headerlink\" title=\"Resources\"></a>Resources</h3><ul>\n<li><a href=\"https://github.com/d3/d3/wiki/Gallery\" target=\"_blank\" rel=\"noopener\">Examples</a></li>\n<li><a href=\"https://github.com/d3/d3/wiki/Tutorials\" target=\"_blank\" rel=\"noopener\">Tutorials</a></li>\n<li><a href=\"https://github.com/d3/d3/wiki\" target=\"_blank\" rel=\"noopener\">Wiki</a></li>\n</ul>\n<hr>\n<svg width=\"592\" height=\"500\"><br/>    <rect x=\"0\" y=\"0\" width=\"500\" height=\"50\"/><br/></svg>\n\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n\n<script type=\"text/javascript\">\n    var dataset = [];\n    for (var i = 0; i < 76; i++) {\n        var newNumber = Math.round(Math.random() * 30);\n        dataset.push(newNumber);\n    }\n\n    d3.select(\".content\")\n        .selectAll(\"div\")\n        .data(dataset)  // <-- The answer is here!\n        .enter()\n        .append(\"div\")\n        .attr(\"class\", \"bar\")\n        .style(\"height\", function(d) {\n            var barHeight = d * 5;\n            return barHeight + \"px\";\n        });\n</script>\n\n<hr>\n<p><button class=\"button\" onclick=\"transition()\">Update</button></p>\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n<script>\n\nvar n = 20, // number of layers\n    m = 200, // number of samples per layer\n    k = 10; // number of bumps per layer\n\nvar stack = d3.stack().keys(d3.range(n)).offset(d3.stackOffsetWiggle),\n    layers0 = stack(d3.transpose(d3.range(n).map(function() { return bumps(m, k); }))),\n    layers1 = stack(d3.transpose(d3.range(n).map(function() { return bumps(m, k); }))),\n    layers = layers0.concat(layers1);\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar x = d3.scaleLinear()\n    .domain([0, m - 1])\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .domain([d3.min(layers, stackMin), d3.max(layers, stackMax)])\n    .range([height, 0]);\n\nvar z = d3.interpolateCool;\n\nvar area = d3.area()\n    .x(function(d, i) { return x(i); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); });\n\nsvg.selectAll(\"path\")\n  .data(layers0)\n  .enter().append(\"path\")\n    .attr(\"d\", area)\n    .attr(\"fill\", function() { return z(Math.random()); });\n\nfunction stackMax(layer) {\n  return d3.max(layer, function(d) { return d[1]; });\n}\n\nfunction stackMin(layer) {\n  return d3.min(layer, function(d) { return d[0]; });\n}\n\nfunction transition() {\n  var t;\n  d3.selectAll(\"path\")\n    .data((t = layers1, layers1 = layers0, layers0 = t))\n    .transition()\n      .duration(2500)\n      .attr(\"d\", area);\n}\n\n// Inspired by Lee Byron’s test data generator.\nfunction bumps(n, m) {\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = 0;\n  for (i = 0; i < m; ++i) bump(a, n);\n  return a;\n}\n\nfunction bump(a, n) {\n  var x = 1 / (0.1 + Math.random()),\n      y = 2 * Math.random() - 0.5,\n      z = 10 / (0.1 + Math.random());\n  for (var i = 0; i < n; i++) {\n    var w = (i / n - y) * z;\n    a[i] += x * Math.exp(-w * w);\n  }\n}\n\n</script>\n"},{"title":"what is data science?","date":"2019-04-12T02:00:08.000Z","_content":"\n![Data Science](/images/datascience.png)\n\nData science is the multidisciplinary field that uses scientific methods, processes, algorithms, and systems to obtain insights and information from structured and unstructured digital data. This data is usually very difficult to interpret by humans. Machines allow us to interpret, process, and alter this data very effectively.\n\nData science combines statistics, data analysis, machine learning, and their related methods in order to understand and analyze actual phenomena.\n\nThe digitization of data was not the only factor in data science's emergence. Data sets had to become very large, while accessing and manipulating these data sets had to become very fast.\n\n## Data Analysis\n\nDue to the enormous scale of modern big data, finding meaning requires tools such as SQL, Python, or R. SQL, standing for \"structured query language\" is the language for accessing and manipulating databases. Python is a general purpose language that emphasizes code readability. R is a language and environment for statistical computing and graphics. These allow data analysts to aggregate and manipulate data to the point where they can present meaningful conclusions.\n\n## Experimentation\n\nKnowing how to run an effective experiment, keeping the data clean, and analyzing it appropriately is what makes up the life of a data scientist. Ineffective experimentation leads to biases, which leads to false conclusions.\n\n## Machine Learning\n\nData scientists define machine learning (ML) as the scientific study of algorithms and statistical models that machines use to effectively perform a specific task without using explicit instructions, but instead relying on patterns and inference. It is seen as a subset of artificial intelligence. Machine learning algorithms build a mathematical model of sample data, known as \"training data\", in order to make predictions or decisions without being explicitly programmed to perform that task.\n\nMachine learning tasks can be classified into several broad categories: supervised learning, unsupervised learning, and reinforcement learning.\n\n## Supervised Learning\n\nSupervised or semi-supervised learning algorithms build a mathematical model of a set of data that contains both the inputs and the desired outputs.  The data is known as \"training data\", and consists of a set of training examples.  Each training example has one or more inputs and a desired output, also known as a \"supervisory signal\".  For semi-supervised learning algorithms, some of the training examples do not include a desired output.  In the mathematical model, each training example is represented by an array or vector, and the training data by a matrix.\n\nIterative optimizations of an \"objective function\" allow supervised learning algorithms to learn a function that, when optimal, can be used to correctly determine the output for inputs that were not a part of the training data.  This optimized algorithm is said to have learned to perform that task.\n\nSupervised learning algorithms include classification and regression.  Classification algorithms are used when the outputs are restricted to a limited set of values and regression algorithms are used when the outputs may have any numerical value within a range.\n\n## Unsupervised Learning\n\nUnsupervised learning algorithms take a set of data that contains only inputs, and find structure in the data, like grouping or clustering of data points.  These algorithms therefore learn from test data that has not been labeled, classified, or categorized.  Instead of responding to feedback, unsupervised learning algorithms identify commonalities in the data and react based on the presence or absence of such commonalities in each new piece of data.\n\nWhile supervised and unsupervised learning algorithms have different objectives, in real world problems they often take place simultaneously.\n\n## Reinforcement Learning\n\nReinforcement learning (RL) is concerned with how software agents (or bots) ought to take actions under certain conditions, so as to maximize some notion of cumulative reward.  In machine learning, the environment is typically represented as a Markov Decision Process (MDP).  RL algorithms do not assume knowledge of an exact mathematical model of the MDP, and are used when exact models are infeasible.\n","source":"_posts/data-science.md","raw":"---\ntitle: what is data science?\ndate: 2019-04-11 22:00:08\ntags:\n  - data science\n---\n\n![Data Science](/images/datascience.png)\n\nData science is the multidisciplinary field that uses scientific methods, processes, algorithms, and systems to obtain insights and information from structured and unstructured digital data. This data is usually very difficult to interpret by humans. Machines allow us to interpret, process, and alter this data very effectively.\n\nData science combines statistics, data analysis, machine learning, and their related methods in order to understand and analyze actual phenomena.\n\nThe digitization of data was not the only factor in data science's emergence. Data sets had to become very large, while accessing and manipulating these data sets had to become very fast.\n\n## Data Analysis\n\nDue to the enormous scale of modern big data, finding meaning requires tools such as SQL, Python, or R. SQL, standing for \"structured query language\" is the language for accessing and manipulating databases. Python is a general purpose language that emphasizes code readability. R is a language and environment for statistical computing and graphics. These allow data analysts to aggregate and manipulate data to the point where they can present meaningful conclusions.\n\n## Experimentation\n\nKnowing how to run an effective experiment, keeping the data clean, and analyzing it appropriately is what makes up the life of a data scientist. Ineffective experimentation leads to biases, which leads to false conclusions.\n\n## Machine Learning\n\nData scientists define machine learning (ML) as the scientific study of algorithms and statistical models that machines use to effectively perform a specific task without using explicit instructions, but instead relying on patterns and inference. It is seen as a subset of artificial intelligence. Machine learning algorithms build a mathematical model of sample data, known as \"training data\", in order to make predictions or decisions without being explicitly programmed to perform that task.\n\nMachine learning tasks can be classified into several broad categories: supervised learning, unsupervised learning, and reinforcement learning.\n\n## Supervised Learning\n\nSupervised or semi-supervised learning algorithms build a mathematical model of a set of data that contains both the inputs and the desired outputs.  The data is known as \"training data\", and consists of a set of training examples.  Each training example has one or more inputs and a desired output, also known as a \"supervisory signal\".  For semi-supervised learning algorithms, some of the training examples do not include a desired output.  In the mathematical model, each training example is represented by an array or vector, and the training data by a matrix.\n\nIterative optimizations of an \"objective function\" allow supervised learning algorithms to learn a function that, when optimal, can be used to correctly determine the output for inputs that were not a part of the training data.  This optimized algorithm is said to have learned to perform that task.\n\nSupervised learning algorithms include classification and regression.  Classification algorithms are used when the outputs are restricted to a limited set of values and regression algorithms are used when the outputs may have any numerical value within a range.\n\n## Unsupervised Learning\n\nUnsupervised learning algorithms take a set of data that contains only inputs, and find structure in the data, like grouping or clustering of data points.  These algorithms therefore learn from test data that has not been labeled, classified, or categorized.  Instead of responding to feedback, unsupervised learning algorithms identify commonalities in the data and react based on the presence or absence of such commonalities in each new piece of data.\n\nWhile supervised and unsupervised learning algorithms have different objectives, in real world problems they often take place simultaneously.\n\n## Reinforcement Learning\n\nReinforcement learning (RL) is concerned with how software agents (or bots) ought to take actions under certain conditions, so as to maximize some notion of cumulative reward.  In machine learning, the environment is typically represented as a Markov Decision Process (MDP).  RL algorithms do not assume knowledge of an exact mathematical model of the MDP, and are used when exact models are infeasible.\n","slug":"data-science","published":1,"updated":"2019-04-12T18:54:59.922Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjusu50jg0007wkqz0hjvanju","content":"<p><img src=\"/images/datascience.png\" alt=\"Data Science\"></p>\n<p>Data science is the multidisciplinary field that uses scientific methods, processes, algorithms, and systems to obtain insights and information from structured and unstructured digital data. This data is usually very difficult to interpret by humans. Machines allow us to interpret, process, and alter this data very effectively.</p>\n<p>Data science combines statistics, data analysis, machine learning, and their related methods in order to understand and analyze actual phenomena.</p>\n<p>The digitization of data was not the only factor in data science’s emergence. Data sets had to become very large, while accessing and manipulating these data sets had to become very fast.</p>\n<h2 id=\"Data-Analysis\"><a href=\"#Data-Analysis\" class=\"headerlink\" title=\"Data Analysis\"></a>Data Analysis</h2><p>Due to the enormous scale of modern big data, finding meaning requires tools such as SQL, Python, or R. SQL, standing for “structured query language” is the language for accessing and manipulating databases. Python is a general purpose language that emphasizes code readability. R is a language and environment for statistical computing and graphics. These allow data analysts to aggregate and manipulate data to the point where they can present meaningful conclusions.</p>\n<h2 id=\"Experimentation\"><a href=\"#Experimentation\" class=\"headerlink\" title=\"Experimentation\"></a>Experimentation</h2><p>Knowing how to run an effective experiment, keeping the data clean, and analyzing it appropriately is what makes up the life of a data scientist. Ineffective experimentation leads to biases, which leads to false conclusions.</p>\n<h2 id=\"Machine-Learning\"><a href=\"#Machine-Learning\" class=\"headerlink\" title=\"Machine Learning\"></a>Machine Learning</h2><p>Data scientists define machine learning (ML) as the scientific study of algorithms and statistical models that machines use to effectively perform a specific task without using explicit instructions, but instead relying on patterns and inference. It is seen as a subset of artificial intelligence. Machine learning algorithms build a mathematical model of sample data, known as “training data”, in order to make predictions or decisions without being explicitly programmed to perform that task.</p>\n<p>Machine learning tasks can be classified into several broad categories: supervised learning, unsupervised learning, and reinforcement learning.</p>\n<h2 id=\"Supervised-Learning\"><a href=\"#Supervised-Learning\" class=\"headerlink\" title=\"Supervised Learning\"></a>Supervised Learning</h2><p>Supervised or semi-supervised learning algorithms build a mathematical model of a set of data that contains both the inputs and the desired outputs.  The data is known as “training data”, and consists of a set of training examples.  Each training example has one or more inputs and a desired output, also known as a “supervisory signal”.  For semi-supervised learning algorithms, some of the training examples do not include a desired output.  In the mathematical model, each training example is represented by an array or vector, and the training data by a matrix.</p>\n<p>Iterative optimizations of an “objective function” allow supervised learning algorithms to learn a function that, when optimal, can be used to correctly determine the output for inputs that were not a part of the training data.  This optimized algorithm is said to have learned to perform that task.</p>\n<p>Supervised learning algorithms include classification and regression.  Classification algorithms are used when the outputs are restricted to a limited set of values and regression algorithms are used when the outputs may have any numerical value within a range.</p>\n<h2 id=\"Unsupervised-Learning\"><a href=\"#Unsupervised-Learning\" class=\"headerlink\" title=\"Unsupervised Learning\"></a>Unsupervised Learning</h2><p>Unsupervised learning algorithms take a set of data that contains only inputs, and find structure in the data, like grouping or clustering of data points.  These algorithms therefore learn from test data that has not been labeled, classified, or categorized.  Instead of responding to feedback, unsupervised learning algorithms identify commonalities in the data and react based on the presence or absence of such commonalities in each new piece of data.</p>\n<p>While supervised and unsupervised learning algorithms have different objectives, in real world problems they often take place simultaneously.</p>\n<h2 id=\"Reinforcement-Learning\"><a href=\"#Reinforcement-Learning\" class=\"headerlink\" title=\"Reinforcement Learning\"></a>Reinforcement Learning</h2><p>Reinforcement learning (RL) is concerned with how software agents (or bots) ought to take actions under certain conditions, so as to maximize some notion of cumulative reward.  In machine learning, the environment is typically represented as a Markov Decision Process (MDP).  RL algorithms do not assume knowledge of an exact mathematical model of the MDP, and are used when exact models are infeasible.</p>\n","site":{"data":{"projects":[{"name":"tenzin.ca","url":"http://tenzin.ca/","desc":"home"},{"name":"curriculum vitae","url":"#","desc":"hire me"},{"name":"photography","url":"/photography/","desc":"a brief portfolio"},{"name":"eve online","url":"https://github.com/citizenofearth/eve","desc":"musings on the scifi space simulator"},{"name":"javascript patterns","url":"https://github.com/citizenofearth/javascript-patterns","desc":"common recipes for javascript"},{"name":"todomvc","url":"https://github.com/citizenofearth/todomvc","desc":"basic todo app written in several front-end frameworks"},{"name":"es6 features","url":"https://github.com/citizenofearth/es6features","desc":"overview of ecmascript 6"},{"name":"d3","url":"https://github.com/citizenofearth/d3","desc":"data driven documents"}]}},"excerpt":"","more":"<p><img src=\"/images/datascience.png\" alt=\"Data Science\"></p>\n<p>Data science is the multidisciplinary field that uses scientific methods, processes, algorithms, and systems to obtain insights and information from structured and unstructured digital data. This data is usually very difficult to interpret by humans. Machines allow us to interpret, process, and alter this data very effectively.</p>\n<p>Data science combines statistics, data analysis, machine learning, and their related methods in order to understand and analyze actual phenomena.</p>\n<p>The digitization of data was not the only factor in data science’s emergence. Data sets had to become very large, while accessing and manipulating these data sets had to become very fast.</p>\n<h2 id=\"Data-Analysis\"><a href=\"#Data-Analysis\" class=\"headerlink\" title=\"Data Analysis\"></a>Data Analysis</h2><p>Due to the enormous scale of modern big data, finding meaning requires tools such as SQL, Python, or R. SQL, standing for “structured query language” is the language for accessing and manipulating databases. Python is a general purpose language that emphasizes code readability. R is a language and environment for statistical computing and graphics. These allow data analysts to aggregate and manipulate data to the point where they can present meaningful conclusions.</p>\n<h2 id=\"Experimentation\"><a href=\"#Experimentation\" class=\"headerlink\" title=\"Experimentation\"></a>Experimentation</h2><p>Knowing how to run an effective experiment, keeping the data clean, and analyzing it appropriately is what makes up the life of a data scientist. Ineffective experimentation leads to biases, which leads to false conclusions.</p>\n<h2 id=\"Machine-Learning\"><a href=\"#Machine-Learning\" class=\"headerlink\" title=\"Machine Learning\"></a>Machine Learning</h2><p>Data scientists define machine learning (ML) as the scientific study of algorithms and statistical models that machines use to effectively perform a specific task without using explicit instructions, but instead relying on patterns and inference. It is seen as a subset of artificial intelligence. Machine learning algorithms build a mathematical model of sample data, known as “training data”, in order to make predictions or decisions without being explicitly programmed to perform that task.</p>\n<p>Machine learning tasks can be classified into several broad categories: supervised learning, unsupervised learning, and reinforcement learning.</p>\n<h2 id=\"Supervised-Learning\"><a href=\"#Supervised-Learning\" class=\"headerlink\" title=\"Supervised Learning\"></a>Supervised Learning</h2><p>Supervised or semi-supervised learning algorithms build a mathematical model of a set of data that contains both the inputs and the desired outputs.  The data is known as “training data”, and consists of a set of training examples.  Each training example has one or more inputs and a desired output, also known as a “supervisory signal”.  For semi-supervised learning algorithms, some of the training examples do not include a desired output.  In the mathematical model, each training example is represented by an array or vector, and the training data by a matrix.</p>\n<p>Iterative optimizations of an “objective function” allow supervised learning algorithms to learn a function that, when optimal, can be used to correctly determine the output for inputs that were not a part of the training data.  This optimized algorithm is said to have learned to perform that task.</p>\n<p>Supervised learning algorithms include classification and regression.  Classification algorithms are used when the outputs are restricted to a limited set of values and regression algorithms are used when the outputs may have any numerical value within a range.</p>\n<h2 id=\"Unsupervised-Learning\"><a href=\"#Unsupervised-Learning\" class=\"headerlink\" title=\"Unsupervised Learning\"></a>Unsupervised Learning</h2><p>Unsupervised learning algorithms take a set of data that contains only inputs, and find structure in the data, like grouping or clustering of data points.  These algorithms therefore learn from test data that has not been labeled, classified, or categorized.  Instead of responding to feedback, unsupervised learning algorithms identify commonalities in the data and react based on the presence or absence of such commonalities in each new piece of data.</p>\n<p>While supervised and unsupervised learning algorithms have different objectives, in real world problems they often take place simultaneously.</p>\n<h2 id=\"Reinforcement-Learning\"><a href=\"#Reinforcement-Learning\" class=\"headerlink\" title=\"Reinforcement Learning\"></a>Reinforcement Learning</h2><p>Reinforcement learning (RL) is concerned with how software agents (or bots) ought to take actions under certain conditions, so as to maximize some notion of cumulative reward.  In machine learning, the environment is typically represented as a Markov Decision Process (MDP).  RL algorithms do not assume knowledge of an exact mathematical model of the MDP, and are used when exact models are infeasible.</p>\n"},{"title":"progressive web apps","date":"2017-10-02T02:08:01.000Z","_content":"\nPWAs are experiences that combine the best of the web with the best of native applications. Users see benefits from even the first visit in a browser tab. They load quickly, even with a poor network connection, sends relevant push notifications, has an icon on the home screen, and loads as a top-level, full screen experience.\n\n![React JS](/images/pwa.png)\n\n- _Progressive_: Works for every user, regardless of browser choice because it's built with progressive enhancement as a core tenet.\n- _Responsive_: Fits any form factor: desktop, mobile, tablet, or whatever is next.\n- _Connectivity independent_ - Enhanced with service workers to work offline or on low-quality networks.\n- _App-like_: Feels like an app, because the app shell model separates the application functionality from application content.\n- _Fresh_: Always up-to-date thanks to the service worker update process.\n- _Safe_: Served via HTTPS to prevent snooping and to ensure content hasn't been tampered with.\n- _Discoverable_: Is identifiable as an \"application\" thanks to W3C manifest and service worker registration scope, allowing search engines to find it.\n- _Re-engageable_: Makes re-engagement easy through features like push notifications.\n- _Installable_: Allows users to add apps they find most useful to their home screen without the hassle of an app store.\n- _Linkable_: Easily share the application via URL, does not require complex installation.\n\n### Resources\n\n- Example projects at [pwa.rocks](https://pwa.rocks/)\n- [Lighthouse](https://developers.google.com/web/tools/lighthouse/) analyzes web apps/pages\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/m-sCdS0sQO8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n","source":"_posts/progressive-web-apps.md","raw":"---\ntitle: progressive web apps\ndate: 2017-10-01 22:08:01\ntags:\n  - pwa\n  - javascript\n---\n\nPWAs are experiences that combine the best of the web with the best of native applications. Users see benefits from even the first visit in a browser tab. They load quickly, even with a poor network connection, sends relevant push notifications, has an icon on the home screen, and loads as a top-level, full screen experience.\n\n![React JS](/images/pwa.png)\n\n- _Progressive_: Works for every user, regardless of browser choice because it's built with progressive enhancement as a core tenet.\n- _Responsive_: Fits any form factor: desktop, mobile, tablet, or whatever is next.\n- _Connectivity independent_ - Enhanced with service workers to work offline or on low-quality networks.\n- _App-like_: Feels like an app, because the app shell model separates the application functionality from application content.\n- _Fresh_: Always up-to-date thanks to the service worker update process.\n- _Safe_: Served via HTTPS to prevent snooping and to ensure content hasn't been tampered with.\n- _Discoverable_: Is identifiable as an \"application\" thanks to W3C manifest and service worker registration scope, allowing search engines to find it.\n- _Re-engageable_: Makes re-engagement easy through features like push notifications.\n- _Installable_: Allows users to add apps they find most useful to their home screen without the hassle of an app store.\n- _Linkable_: Easily share the application via URL, does not require complex installation.\n\n### Resources\n\n- Example projects at [pwa.rocks](https://pwa.rocks/)\n- [Lighthouse](https://developers.google.com/web/tools/lighthouse/) analyzes web apps/pages\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/m-sCdS0sQO8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n","slug":"progressive-web-apps","published":1,"updated":"2019-04-22T20:21:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjusu50jk0009wkqzcvhlf1eq","content":"<p>PWAs are experiences that combine the best of the web with the best of native applications. Users see benefits from even the first visit in a browser tab. They load quickly, even with a poor network connection, sends relevant push notifications, has an icon on the home screen, and loads as a top-level, full screen experience.</p>\n<p><img src=\"/images/pwa.png\" alt=\"React JS\"></p>\n<ul>\n<li><em>Progressive</em>: Works for every user, regardless of browser choice because it’s built with progressive enhancement as a core tenet.</li>\n<li><em>Responsive</em>: Fits any form factor: desktop, mobile, tablet, or whatever is next.</li>\n<li><em>Connectivity independent</em> - Enhanced with service workers to work offline or on low-quality networks.</li>\n<li><em>App-like</em>: Feels like an app, because the app shell model separates the application functionality from application content.</li>\n<li><em>Fresh</em>: Always up-to-date thanks to the service worker update process.</li>\n<li><em>Safe</em>: Served via HTTPS to prevent snooping and to ensure content hasn’t been tampered with.</li>\n<li><em>Discoverable</em>: Is identifiable as an “application” thanks to W3C manifest and service worker registration scope, allowing search engines to find it.</li>\n<li><em>Re-engageable</em>: Makes re-engagement easy through features like push notifications.</li>\n<li><em>Installable</em>: Allows users to add apps they find most useful to their home screen without the hassle of an app store.</li>\n<li><em>Linkable</em>: Easily share the application via URL, does not require complex installation.</li>\n</ul>\n<h3 id=\"Resources\"><a href=\"#Resources\" class=\"headerlink\" title=\"Resources\"></a>Resources</h3><ul>\n<li>Example projects at <a href=\"https://pwa.rocks/\" target=\"_blank\" rel=\"noopener\">pwa.rocks</a></li>\n<li><a href=\"https://developers.google.com/web/tools/lighthouse/\" target=\"_blank\" rel=\"noopener\">Lighthouse</a> analyzes web apps/pages</li>\n</ul>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/m-sCdS0sQO8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n","site":{"data":{"projects":[{"name":"tenzin.ca","url":"http://tenzin.ca/","desc":"home"},{"name":"curriculum vitae","url":"#","desc":"hire me"},{"name":"photography","url":"/photography/","desc":"a brief portfolio"},{"name":"eve online","url":"https://github.com/citizenofearth/eve","desc":"musings on the scifi space simulator"},{"name":"javascript patterns","url":"https://github.com/citizenofearth/javascript-patterns","desc":"common recipes for javascript"},{"name":"todomvc","url":"https://github.com/citizenofearth/todomvc","desc":"basic todo app written in several front-end frameworks"},{"name":"es6 features","url":"https://github.com/citizenofearth/es6features","desc":"overview of ecmascript 6"},{"name":"d3","url":"https://github.com/citizenofearth/d3","desc":"data driven documents"}]}},"excerpt":"","more":"<p>PWAs are experiences that combine the best of the web with the best of native applications. Users see benefits from even the first visit in a browser tab. They load quickly, even with a poor network connection, sends relevant push notifications, has an icon on the home screen, and loads as a top-level, full screen experience.</p>\n<p><img src=\"/images/pwa.png\" alt=\"React JS\"></p>\n<ul>\n<li><em>Progressive</em>: Works for every user, regardless of browser choice because it’s built with progressive enhancement as a core tenet.</li>\n<li><em>Responsive</em>: Fits any form factor: desktop, mobile, tablet, or whatever is next.</li>\n<li><em>Connectivity independent</em> - Enhanced with service workers to work offline or on low-quality networks.</li>\n<li><em>App-like</em>: Feels like an app, because the app shell model separates the application functionality from application content.</li>\n<li><em>Fresh</em>: Always up-to-date thanks to the service worker update process.</li>\n<li><em>Safe</em>: Served via HTTPS to prevent snooping and to ensure content hasn’t been tampered with.</li>\n<li><em>Discoverable</em>: Is identifiable as an “application” thanks to W3C manifest and service worker registration scope, allowing search engines to find it.</li>\n<li><em>Re-engageable</em>: Makes re-engagement easy through features like push notifications.</li>\n<li><em>Installable</em>: Allows users to add apps they find most useful to their home screen without the hassle of an app store.</li>\n<li><em>Linkable</em>: Easily share the application via URL, does not require complex installation.</li>\n</ul>\n<h3 id=\"Resources\"><a href=\"#Resources\" class=\"headerlink\" title=\"Resources\"></a>Resources</h3><ul>\n<li>Example projects at <a href=\"https://pwa.rocks/\" target=\"_blank\" rel=\"noopener\">pwa.rocks</a></li>\n<li><a href=\"https://developers.google.com/web/tools/lighthouse/\" target=\"_blank\" rel=\"noopener\">Lighthouse</a> analyzes web apps/pages</li>\n</ul>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/m-sCdS0sQO8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n"},{"title":"programming paradigms","date":"2019-04-22T14:49:18.000Z","_content":"\n![Programming Paradigms](/images/paradigms.png)\n\n## Paradigms\n\n### Imperative\nFocuses on how to execute, defines control flow as statements that change a program state.  Main traits include direct assignments, common data structures, and global variables.  Example: C, C++, Java, PHP, Python, Ruby.\n\n```java\nint total = 0;\nint number1 = 5;\nint number2 = 10;\nint number3 = 15;\ntotal = number1 + number2 + number3;\n```\n\nEach statement changes the state of the program, from assigning values to each variable to the final addition of those values. Using a sequence of five statements the program is explicitly told how to add the numbers 5, 10 and 15 together.\n\n### Declarative\nFocuses on what to execute, defines program logic, but not detailed control flow.  Main traits include fourth-generation languages, spreadsheets, and report program generators.  Example: SQL, regular expressions, Prolog.\n\nDeclarative programs can be described as context independent. meaning they only declare what the ultimate goal is, not the intermediary steps to reach that goal.\n\n```sql\nWITH patient_data AS (\n    SELECT patient_id, patient_name, hospital, drug_dosage\n    FROM hospital_registry\n    WHERE (last_visit &gt; now() - interval '14 days' OR last_visit IS NULL)\n    AND city = \"Los Angeles\"\n)\n\nWITH average_dosage AS (\n    SELECT hospital, AVG(drug_dosage) AS Average\n    FROM patient_data\n    GROUP BY hospital\n)\n\nSELECT count(hospital)\nFROM average_dosage;\nWHERE AVG(drug_dosage) &gt; 1000\n```\n\n### Procedural\nSpecifies the steps a program must take to reach a desired state, usually read in order from top to bottom.  Main traits include local variables, sequence, selection, iteration, and modularization.  Example: C, C++, PHP, Python.\n\n```pascal\nprogram Fibonacci;\n\nfunction fib(n: Integer): Integer;\nvar a: Integer = 1;\n    b: Integer = 1;\n    f: Integer;\n    i: Integer;\nbegin\n  if (n = 1) or (n = 2) then\n     fib := 1\n  else\n    begin\n      for i := 3 to n do\n      begin\n         f := a + b;\n         b := a;\n         a := f;\n      end;\n      fib := f;\n    end;\nend;\n\nbegin\n  WriteLn(fib(6));\nend.\n```\n\n### Functional\nTreats programs as evaluating mathematical functions and avoids state and mutable data.  Main traits include lambda calculus, compositionality, formula, recursion, referential transparency, no side effects.  Example: C++, Clojure, Elixir, Erlang, F#, Haskell, Kotlin, Lisp, Python, Ruby, Scala, Elm, Standard ML, JavaScript.\n\n```javascript\n// Non Pure Function\nvar y = 2\nfunction adder (x){\n  return x + y\n}\n\n// Pure Function\nfunction add2 (x){\n  return x + 2\n}\n```\n\n### Object-Oriented\nOrganizes programs as objects, which are data structures consisting of datafields and methods together with their interactions.  Main traits include objects, methods, message passing, information hiding, data abstraction, encapsulation, polymorphism, inheritance, serialization-marshalling.  Example: C++, C#, Java, PHP, Python, Ruby, Scala, JavaScript.\n\n```javascript\nfunction Person(firstName, lastName) {\n    // construct the object using the arguments\n    this.firstName = firstName;\n    this.lastName = lastName;\n\n    // a method which returns the full name\n    this.fullName = function() {\n        return this.firstName + \" \" + this.lastName;\n    }\n}\n\nvar myPerson = new Person(\"John\", \"Smith\");\nconsole.log(myPerson.fullName());\n```\n","source":"_posts/programming-paradigms.md","raw":"---\ntitle: programming paradigms\ndate: 2019-04-22 10:49:18\ntags:\n- javascript\n- programming\n---\n\n![Programming Paradigms](/images/paradigms.png)\n\n## Paradigms\n\n### Imperative\nFocuses on how to execute, defines control flow as statements that change a program state.  Main traits include direct assignments, common data structures, and global variables.  Example: C, C++, Java, PHP, Python, Ruby.\n\n```java\nint total = 0;\nint number1 = 5;\nint number2 = 10;\nint number3 = 15;\ntotal = number1 + number2 + number3;\n```\n\nEach statement changes the state of the program, from assigning values to each variable to the final addition of those values. Using a sequence of five statements the program is explicitly told how to add the numbers 5, 10 and 15 together.\n\n### Declarative\nFocuses on what to execute, defines program logic, but not detailed control flow.  Main traits include fourth-generation languages, spreadsheets, and report program generators.  Example: SQL, regular expressions, Prolog.\n\nDeclarative programs can be described as context independent. meaning they only declare what the ultimate goal is, not the intermediary steps to reach that goal.\n\n```sql\nWITH patient_data AS (\n    SELECT patient_id, patient_name, hospital, drug_dosage\n    FROM hospital_registry\n    WHERE (last_visit &gt; now() - interval '14 days' OR last_visit IS NULL)\n    AND city = \"Los Angeles\"\n)\n\nWITH average_dosage AS (\n    SELECT hospital, AVG(drug_dosage) AS Average\n    FROM patient_data\n    GROUP BY hospital\n)\n\nSELECT count(hospital)\nFROM average_dosage;\nWHERE AVG(drug_dosage) &gt; 1000\n```\n\n### Procedural\nSpecifies the steps a program must take to reach a desired state, usually read in order from top to bottom.  Main traits include local variables, sequence, selection, iteration, and modularization.  Example: C, C++, PHP, Python.\n\n```pascal\nprogram Fibonacci;\n\nfunction fib(n: Integer): Integer;\nvar a: Integer = 1;\n    b: Integer = 1;\n    f: Integer;\n    i: Integer;\nbegin\n  if (n = 1) or (n = 2) then\n     fib := 1\n  else\n    begin\n      for i := 3 to n do\n      begin\n         f := a + b;\n         b := a;\n         a := f;\n      end;\n      fib := f;\n    end;\nend;\n\nbegin\n  WriteLn(fib(6));\nend.\n```\n\n### Functional\nTreats programs as evaluating mathematical functions and avoids state and mutable data.  Main traits include lambda calculus, compositionality, formula, recursion, referential transparency, no side effects.  Example: C++, Clojure, Elixir, Erlang, F#, Haskell, Kotlin, Lisp, Python, Ruby, Scala, Elm, Standard ML, JavaScript.\n\n```javascript\n// Non Pure Function\nvar y = 2\nfunction adder (x){\n  return x + y\n}\n\n// Pure Function\nfunction add2 (x){\n  return x + 2\n}\n```\n\n### Object-Oriented\nOrganizes programs as objects, which are data structures consisting of datafields and methods together with their interactions.  Main traits include objects, methods, message passing, information hiding, data abstraction, encapsulation, polymorphism, inheritance, serialization-marshalling.  Example: C++, C#, Java, PHP, Python, Ruby, Scala, JavaScript.\n\n```javascript\nfunction Person(firstName, lastName) {\n    // construct the object using the arguments\n    this.firstName = firstName;\n    this.lastName = lastName;\n\n    // a method which returns the full name\n    this.fullName = function() {\n        return this.firstName + \" \" + this.lastName;\n    }\n}\n\nvar myPerson = new Person(\"John\", \"Smith\");\nconsole.log(myPerson.fullName());\n```\n","slug":"programming-paradigms","published":1,"updated":"2019-04-22T20:50:25.437Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjusu50jn000awkqz3p8cyuse","content":"<p><img src=\"/images/paradigms.png\" alt=\"Programming Paradigms\"></p>\n<h2 id=\"Paradigms\"><a href=\"#Paradigms\" class=\"headerlink\" title=\"Paradigms\"></a>Paradigms</h2><h3 id=\"Imperative\"><a href=\"#Imperative\" class=\"headerlink\" title=\"Imperative\"></a>Imperative</h3><p>Focuses on how to execute, defines control flow as statements that change a program state.  Main traits include direct assignments, common data structures, and global variables.  Example: C, C++, Java, PHP, Python, Ruby.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> total = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> number1 = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> number2 = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> number3 = <span class=\"number\">15</span>;</span><br><span class=\"line\">total = number1 + number2 + number3;</span><br></pre></td></tr></table></figure>\n<p>Each statement changes the state of the program, from assigning values to each variable to the final addition of those values. Using a sequence of five statements the program is explicitly told how to add the numbers 5, 10 and 15 together.</p>\n<h3 id=\"Declarative\"><a href=\"#Declarative\" class=\"headerlink\" title=\"Declarative\"></a>Declarative</h3><p>Focuses on what to execute, defines program logic, but not detailed control flow.  Main traits include fourth-generation languages, spreadsheets, and report program generators.  Example: SQL, regular expressions, Prolog.</p>\n<p>Declarative programs can be described as context independent. meaning they only declare what the ultimate goal is, not the intermediary steps to reach that goal.</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WITH patient_data AS (</span><br><span class=\"line\">    <span class=\"keyword\">SELECT</span> patient_id, patient_name, hospital, drug_dosage</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> hospital_registry</span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> (last_visit &amp;gt; now() - interval '14 days' OR last_visit IS NULL)</span><br><span class=\"line\">    AND city = \"Los Angeles\"</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">WITH average_dosage AS (</span><br><span class=\"line\">    <span class=\"keyword\">SELECT</span> hospital, <span class=\"keyword\">AVG</span>(drug_dosage) <span class=\"keyword\">AS</span> Average</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> patient_data</span><br><span class=\"line\">    <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> hospital</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">count</span>(hospital)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> average_dosage;</span><br><span class=\"line\">WHERE AVG(drug_dosage) &amp;gt; 1000</span><br></pre></td></tr></table></figure>\n<h3 id=\"Procedural\"><a href=\"#Procedural\" class=\"headerlink\" title=\"Procedural\"></a>Procedural</h3><p>Specifies the steps a program must take to reach a desired state, usually read in order from top to bottom.  Main traits include local variables, sequence, selection, iteration, and modularization.  Example: C, C++, PHP, Python.</p>\n<figure class=\"highlight pascal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">program</span> Fibonacci;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fib</span><span class=\"params\">(n: Integer)</span>:</span> Integer;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a: Integer = <span class=\"number\">1</span>;</span><br><span class=\"line\">    b: Integer = <span class=\"number\">1</span>;</span><br><span class=\"line\">    f: Integer;</span><br><span class=\"line\">    i: Integer;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n = <span class=\"number\">1</span>) <span class=\"keyword\">or</span> (n = <span class=\"number\">2</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">     fib := <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> i := <span class=\"number\">3</span> <span class=\"keyword\">to</span> n <span class=\"keyword\">do</span></span><br><span class=\"line\">      <span class=\"keyword\">begin</span></span><br><span class=\"line\">         f := a + b;</span><br><span class=\"line\">         b := a;</span><br><span class=\"line\">         a := f;</span><br><span class=\"line\">      <span class=\"keyword\">end</span>;</span><br><span class=\"line\">      fib := f;</span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  WriteLn(fib(<span class=\"number\">6</span>));</span><br><span class=\"line\"><span class=\"keyword\">end</span>.</span><br></pre></td></tr></table></figure>\n<h3 id=\"Functional\"><a href=\"#Functional\" class=\"headerlink\" title=\"Functional\"></a>Functional</h3><p>Treats programs as evaluating mathematical functions and avoids state and mutable data.  Main traits include lambda calculus, compositionality, formula, recursion, referential transparency, no side effects.  Example: C++, Clojure, Elixir, Erlang, F#, Haskell, Kotlin, Lisp, Python, Ruby, Scala, Elm, Standard ML, JavaScript.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Non Pure Function</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> y = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">adder</span> (<span class=\"params\">x</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + y</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Pure Function</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add2</span> (<span class=\"params\">x</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Object-Oriented\"><a href=\"#Object-Oriented\" class=\"headerlink\" title=\"Object-Oriented\"></a>Object-Oriented</h3><p>Organizes programs as objects, which are data structures consisting of datafields and methods together with their interactions.  Main traits include objects, methods, message passing, information hiding, data abstraction, encapsulation, polymorphism, inheritance, serialization-marshalling.  Example: C++, C#, Java, PHP, Python, Ruby, Scala, JavaScript.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">firstName, lastName</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// construct the object using the arguments</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.firstName = firstName;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.lastName = lastName;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// a method which returns the full name</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fullName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.firstName + <span class=\"string\">\" \"</span> + <span class=\"keyword\">this</span>.lastName;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> myPerson = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"John\"</span>, <span class=\"string\">\"Smith\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(myPerson.fullName());</span><br></pre></td></tr></table></figure>\n","site":{"data":{"projects":[{"name":"tenzin.ca","url":"http://tenzin.ca/","desc":"home"},{"name":"curriculum vitae","url":"#","desc":"hire me"},{"name":"photography","url":"/photography/","desc":"a brief portfolio"},{"name":"eve online","url":"https://github.com/citizenofearth/eve","desc":"musings on the scifi space simulator"},{"name":"javascript patterns","url":"https://github.com/citizenofearth/javascript-patterns","desc":"common recipes for javascript"},{"name":"todomvc","url":"https://github.com/citizenofearth/todomvc","desc":"basic todo app written in several front-end frameworks"},{"name":"es6 features","url":"https://github.com/citizenofearth/es6features","desc":"overview of ecmascript 6"},{"name":"d3","url":"https://github.com/citizenofearth/d3","desc":"data driven documents"}]}},"excerpt":"","more":"<p><img src=\"/images/paradigms.png\" alt=\"Programming Paradigms\"></p>\n<h2 id=\"Paradigms\"><a href=\"#Paradigms\" class=\"headerlink\" title=\"Paradigms\"></a>Paradigms</h2><h3 id=\"Imperative\"><a href=\"#Imperative\" class=\"headerlink\" title=\"Imperative\"></a>Imperative</h3><p>Focuses on how to execute, defines control flow as statements that change a program state.  Main traits include direct assignments, common data structures, and global variables.  Example: C, C++, Java, PHP, Python, Ruby.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> total = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> number1 = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> number2 = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> number3 = <span class=\"number\">15</span>;</span><br><span class=\"line\">total = number1 + number2 + number3;</span><br></pre></td></tr></table></figure>\n<p>Each statement changes the state of the program, from assigning values to each variable to the final addition of those values. Using a sequence of five statements the program is explicitly told how to add the numbers 5, 10 and 15 together.</p>\n<h3 id=\"Declarative\"><a href=\"#Declarative\" class=\"headerlink\" title=\"Declarative\"></a>Declarative</h3><p>Focuses on what to execute, defines program logic, but not detailed control flow.  Main traits include fourth-generation languages, spreadsheets, and report program generators.  Example: SQL, regular expressions, Prolog.</p>\n<p>Declarative programs can be described as context independent. meaning they only declare what the ultimate goal is, not the intermediary steps to reach that goal.</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WITH patient_data AS (</span><br><span class=\"line\">    <span class=\"keyword\">SELECT</span> patient_id, patient_name, hospital, drug_dosage</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> hospital_registry</span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> (last_visit &amp;gt; now() - interval '14 days' OR last_visit IS NULL)</span><br><span class=\"line\">    AND city = \"Los Angeles\"</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">WITH average_dosage AS (</span><br><span class=\"line\">    <span class=\"keyword\">SELECT</span> hospital, <span class=\"keyword\">AVG</span>(drug_dosage) <span class=\"keyword\">AS</span> Average</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> patient_data</span><br><span class=\"line\">    <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> hospital</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">count</span>(hospital)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> average_dosage;</span><br><span class=\"line\">WHERE AVG(drug_dosage) &amp;gt; 1000</span><br></pre></td></tr></table></figure>\n<h3 id=\"Procedural\"><a href=\"#Procedural\" class=\"headerlink\" title=\"Procedural\"></a>Procedural</h3><p>Specifies the steps a program must take to reach a desired state, usually read in order from top to bottom.  Main traits include local variables, sequence, selection, iteration, and modularization.  Example: C, C++, PHP, Python.</p>\n<figure class=\"highlight pascal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">program</span> Fibonacci;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fib</span><span class=\"params\">(n: Integer)</span>:</span> Integer;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a: Integer = <span class=\"number\">1</span>;</span><br><span class=\"line\">    b: Integer = <span class=\"number\">1</span>;</span><br><span class=\"line\">    f: Integer;</span><br><span class=\"line\">    i: Integer;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n = <span class=\"number\">1</span>) <span class=\"keyword\">or</span> (n = <span class=\"number\">2</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">     fib := <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> i := <span class=\"number\">3</span> <span class=\"keyword\">to</span> n <span class=\"keyword\">do</span></span><br><span class=\"line\">      <span class=\"keyword\">begin</span></span><br><span class=\"line\">         f := a + b;</span><br><span class=\"line\">         b := a;</span><br><span class=\"line\">         a := f;</span><br><span class=\"line\">      <span class=\"keyword\">end</span>;</span><br><span class=\"line\">      fib := f;</span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  WriteLn(fib(<span class=\"number\">6</span>));</span><br><span class=\"line\"><span class=\"keyword\">end</span>.</span><br></pre></td></tr></table></figure>\n<h3 id=\"Functional\"><a href=\"#Functional\" class=\"headerlink\" title=\"Functional\"></a>Functional</h3><p>Treats programs as evaluating mathematical functions and avoids state and mutable data.  Main traits include lambda calculus, compositionality, formula, recursion, referential transparency, no side effects.  Example: C++, Clojure, Elixir, Erlang, F#, Haskell, Kotlin, Lisp, Python, Ruby, Scala, Elm, Standard ML, JavaScript.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Non Pure Function</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> y = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">adder</span> (<span class=\"params\">x</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + y</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Pure Function</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add2</span> (<span class=\"params\">x</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Object-Oriented\"><a href=\"#Object-Oriented\" class=\"headerlink\" title=\"Object-Oriented\"></a>Object-Oriented</h3><p>Organizes programs as objects, which are data structures consisting of datafields and methods together with their interactions.  Main traits include objects, methods, message passing, information hiding, data abstraction, encapsulation, polymorphism, inheritance, serialization-marshalling.  Example: C++, C#, Java, PHP, Python, Ruby, Scala, JavaScript.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">firstName, lastName</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// construct the object using the arguments</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.firstName = firstName;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.lastName = lastName;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// a method which returns the full name</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fullName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.firstName + <span class=\"string\">\" \"</span> + <span class=\"keyword\">this</span>.lastName;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> myPerson = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"John\"</span>, <span class=\"string\">\"Smith\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(myPerson.fullName());</span><br></pre></td></tr></table></figure>\n"},{"title":"react fundamentals","date":"2018-04-10T15:22:07.000Z","_content":"\n_Notes from the course by [Tyler McGinnis](https://tylermcginnis.com)_\n\n![React JS](/images/reactlogo.png)\n\n## Intro to the React Ecosystem\n\nTop qualities of React:\n\n- **Composition**\n  - everything in the React DOM is a component\n  - components are analogous to a container that wraps functionality within itself, much like functions do\n  - components can be used to compose other components much like functional composition\n  - well-defined components can be used between different projects (hence the advent of component libraries)\n- **Declarative**\n  - declarative code abstracts the implementation/control-flow handled by imperative code with the help of functions\n  - declarative code focuses on the WHAT rather than the HOW of the problem and uses abstracts the HOW to do so\n  - React is declarative with everything except with changing the state of a component which anyways results in it being re-rendered\n- **Unidirectional Dataflow**\n  - in React the state is stored in a component as opposed to the DOM (which is how it is with JQuery)\n  - state is explicitly changed and that causes the DOM to re-render\n  - data flows from the state to the DOM and never the other way around\n  - parent components pass data to child components with the help of props\n- **Explicit Mutations**\n  - changing state must be done explicitly in React\n  - changing the state of a component with this.setState renders it to the DOM\n    - there is no need of adding event listeners or dirty checking\n- **Just JavaScript**\n  - React takes advantage of the JavaScript's functionality, api, and capabilities (also functional style)\n\nThis course will cover the following tools from the React Ecosystem:\n\n- **React Router**\n  - component that allows us to map a url path to a component\n  - declare the routes to be rendered within router\n  - each route has a path property and a component property that allows you to map a path to a component\n  - router is powerful and enables routes to have different children and makes active link states, etc., extremely easy\n- **Webpack**\n  - most popular module bundler within the React community\n  - helps perform transformations to the code, making it ready for dev or production\n  - specify entry files which we work on, output directory, and final filename, as well as the loaders through which the specified files should be transformed\n- **Babel**\n  - transpiler used to transform JSX to JS and ES6 to ES5, etc\n  - loaded in webpack\n- **Axios**\n  - API used to send HTTP requests to different APIs (in our case the GitHub api)\n\n## Setup First React Component with NPM, Webpack and Babel\n\n![React JS](/images/npmlogo.svg)\n\n**_NPM_**\n\nIn writing software, it is an accepted idea that modularity is a great idea to for reusing code and increase the abilities and efficiencies of programmers. NPM is a node package manager that aims to solve the problem of enabling efficient collaboration and sharing of different modules.\n\nThe main problem with CDNs is maintaining updated versions of dependencies once their number starts going out of hand and sharing the same dependency files with team members working on the project.\n\nnpm init initialises a new npm project in current directory. It gives the directory a package.json file which contains information about the project’s dependencies with versions and also allows to run node scripts that perform different tasks (like testing ava, et cetera).\n\nNPM allows us to install modules globally and locally only for the project. NPM has commands for saving individual modules globally or locally, to run tests mentioned in the scripts object and to install all dependencies mentioned in package.json.\n\n`npm install —save` adds the module being installed to package.json as a dependency rather than a devDependency, which is what happens when we use `npm install —save-dev`\n\n**_Webpack_**\n\nWebpack is a module bundler that helps us make production and development transformations to the code we write. The reason for it to exist is that web developers shouldn’t have to transform code every time they want to test or deploy it. These transformations include but are not limited to: bundling js, bundling css, minification and uglification, jsx to js, sass/less to css, et cetera.\n\nWebpack needs the entry point for the main javascript files. It has a modules property that we use to specify all loaders (rules) that need to make a transformation on the code. It has a plugins property which specifies plugins like html-webpack-config’s object in its array. It needs the template and filename in the output distribution folder.\n\nWebpack loaders allow us to preprocess files (like css, et cetera) as we `require` them into the root js file.\n\nThe code that pieces the above together is fairly simple.\n\nWhile using webpack-dev-server to run a web server locally, any changes we make do not cause webpack to compile our bundle to the dist folder. However, it dynamically updates quickly because webpack saves the changes in a cache that is meant to refresh quickly rather than compiling a build bundle every time a change is made.\n\n**_Babel_**\n\nBabel is a popular javascript transpiler. It enables us to write future versions / variations / abstractions of javascript and babel compiles them to javascript which is compatible with most browsers.\n\nWe need to install each babel preset package using npm as a dev dependency for the project we’re using it with.\n\nIn web pack’s config object’s module property’s rules array we need to use `babel-loader` on .js files.\n\nIn order to configure babel, we need to explicitly mention the `presets` corresponding to the transformations we wish to make in a babel config object.\n\nWe can either include this object in a file name `.babelrc` or we can refer it to a property babel in `package.json`.\n\n**_React_**\n\nReact relies on a component based architecture in which the app is a component made up of components. Each component can be thought of as a collection of HTML, CSS, JS and some internal data specific to that component.\n\nThe way parent/child component relationship works is that the state of a component lives in its parent and has to be passed to the child with an attribute (called props/properties). This makes managing data simple because we know exactly where our data lives and we shouldn’t manipulate it elsewhere.\n\nA React Component may be composed of the following:\n\n- [internal data]\n- ui\n- [lifecycle event]\n\nEvery component is supposed to have a render method. The reason is that the render method returns the template for that component and it is necessary for a component to have a ui.\n\nWe need to tell ReactDOM to which element the components should be rendered to. You usually have to use ReactDOM.render only once in your applications because rendering the most parent element will render all the children as well.\n\nJSX is converted to React.createElement methods which describes what you see on the screen (notice only describes, doesn’t mean that it is what we see). React.createElement returns an object representation of the DOM node. It is also called virtual DOM node.\n\nReact interprets JSX and transforms it into lightweight javascript objects which are used to create a virtual DOM. Changes in the virtual dom are tracked on only the necessary updates are rendered to the DOM.\n\n`React.createElement` takes 3 arguments:\n\n- element type: `div`, `span`, component\n- properties object\n- children (multiple)\n  When React encounters a component in any of the above arguments, it replaces that with what the components React.createElement returns. Hence when rendering the most parent component using ReactDOM, the entire virtual DOM is created.\n\nThis invocation of React.createElement to create a virtual DOM node only happens while using ReactDOM.render and while changing state using setState.\n\nThe process looks something like this,\n\nSignal to notify our app some data has changed -> re-render virtual dom -> diff previous virtual dom with new virtual dom -> only update real dom with necessary changes. This gives react performance ups.\n\n**_Lecture video_**\n\nnpm install —-save-dev means add this to the object referenced by the devDependencies property of package.json.\n\nWhile npm install —-save means add this to the object referenced by the dependencies property of package.json.\n\nOne can add scripts to package.json that can be run with the script name as argument to npm. These scripts can range from webpack productiont, webpack-dev-server to ava test scripts.\n\nFrom the example mentioned in NPM text section of this lesson:\n\n```json\n\"scripts\": {\n  \"test\": \"ava 'app/**/*.test.js' --verbose --require ./other/setup-ava-tests.js\"\n}\n```\n\n## Dataflow with props\n\nWe already know that props are the primary way to pass data into a component (when it is created a.k.a. invoked within a parent component or the ReactDOM.render method). In this lesson we got hands on practice with passing props like username, name and img url to a component from its creation in the ReactDOM.render method and its invocation in a parent component. We also replaced multiple props in a parent component with a single property which takes a javascript object.\n\n![React JS](/images/react.png)\n\nIn JSX a javascript expression can be written within single curly braces {_javascript goes here_}. The primary way to build list uis in React is to simply pass in an array or other iterator and use javascript’s functionality of map and filter, et cetera.\n\nWhen rendering list items in jsx (`<li> {something} </li>`), React gives us a warning saying that we should add a unique key prop value pair to each list item. This allows React to keep track of changes in the list and reflect them on the ui in an efficient manner. Particularly for items that have been added or removed from the list. The value of the key prop should be a unique identifier for that item in the list (be careful using the index argument in filter and maps callback function, since the index for each item keep changing depending on the number of items in the iterative).\n\n## Pure functions. `f(d)=v`. Props and nesting components in React.\n\n**_Nested components and props_**\n\nProps are to components what arguments are to functions. Props are the way in which a parent components passes data to its child component. When specifying a component in JSX (invoking a component), a property value can be passed in the component in a way that looks similar to an attribute=“value” pair in HTML tags.\n\n**_Building UIs with pure functions and function compositions in React_**\n\nIn react, components can be thought of as pure functions, often composed with other pure functions. In a pure function, we pass arguments and get a value in return.\n\nIn react, components are like pure functions that take arguments and return a UI view. A neat expression to summarise this would be `f(d) = V`. (where d is data and V is the view).\n\nComposing function with helper functions is good practice to modularise code and similarly the same goes for react components. So much so, that React recently introduced stateless functional components which allow us to define components as normal JS functions that return JSX dom, these functions take the props as their argument (unlike the traditional component class with a render method).\n\nTyler goes on to say that learning React the right way is like an introduction to the world of functional programming where composing pure functions is the go to way to do something. Hence we should treat the props passed to a component as immutable.\n\nReact components can easily be composed of other components. What this means is that the JSX that is rendered by a component could be invoking other components while passing the prop types it need as property attributes.\n\n**_Intro to PropTypes_**\n\nPropTypes is a way to do type checking on props in React. It has recently been separated from React to its own library.\n\nPropTypes allow us to declare the type of each prop being passed to a component. Then, if the prop passed isn’t of the declared type, we get a warning in the console.\n\nPropTypes can be string, func, bool, object (of a particular shape with each properties type specified), et cetera.\n\n**_Video_**\n\nThe reliance on particular state is a very large contributor to a system’s complexity. What this means is that when using a function with side effects, the system has to worry about and keep track of the state that it depends on and modifies, whereas with pure functions the need to keep track of particular state disappears. Hence simplifying the system.\n\nHence components are easy to think about, they’re easy to test (because we don’t have to asses the state before testing components), they’re easy to reuse and they’re easy to reproduce the same results. So we can conclude that: react components do not change any state outside they’re scope and cause any mutations/ async requests, et cetera.\n\nImportant thing to note:\nThe JSX dom representation that a react component returns should be wrapped in a single DOM container element (which can be any html element objects or a react component). In short, don’t return multiple DOM or react components without wrapping them in a single container.\n\n**Any react component we want to make, should be:**\n\n![principles for a react component](http://i.imgur.com/72dYgU2.png)\n\n**_Quiz_**\n\nThe above purity means that we should treat props as immutable from within components (or their render method).\n\nThe `this` keyword + Managing and Updating State\nThe this keyword\n\nWhen invoking a method, the keyword this within its body refers to the object the method is a property of (the method will be invoked on an instance of that object, which will be on the left of the method invocation before the dot notation). In different situations the value of the this keyword is not very obvious and requires a thorough understanding of the different ways JavaScript binds the this keyword (which acts as context in functions/methods).\n\n- **Implicit Binding**: object has a property which equals to a function and within that functions body one can refer to other properties of that object with this.dotNotation\n- **Explicit Binding**: binding using functions’ in-built functionality .call, .apply, .bind.\n- **New/Window Binding**: when we use new to create an instance of an object, it binds the this keyword to itself within any of its methods/properties.\n\n**_Managing & Updating State_**\n\nWe specify the state of a component within its constructor (which first calls super with the props as argument). The state has to be explicitly changed using the component’s `setState` method which takes in a function as an argument; the function having to return the new `state` object.\n\nWe go on to create the popular tabs on the github-battle project and set its state. We defined a method that changes the components state when a particular item in the component was clicked. We link the component's method to that list item using the `onClick` attribute.\n\nReact advocates love how React needs users to explicitly change the state. When the state is changed the necessary changes reflect on the DOM immediately.\n\n## Stateless Functional Components\n\nWhile using React, we’re gonna have a lot of components that only have a render method and optionally take in some props (they have no other method or state). These components can be defined as pure functions instead, removing the unnecessary component class abstraction.\n\n**It is a great idea to separate container components from presentational components in React.**\n\nStateless functional components will aid us in doing so. It is a good idea to use these because this is a good way to separate container and presentational components. The functional component takes props as its first argument.\n\nTyler encourages us to create a stateless functional component whenever we feel that the components render method is getting long enough to understand with a glance.\n\nStateless functional components should not be called functional components because in future, React will have functional components to which we can add state.\n\n**_Private Components_**\nIf a components render method is getting long, we can compose it out of multiple stateless functional components. If such a component is composing a container component and is present in the same module from which only the container component is being exported, it is called a private component (like private functions).\n\nAnother advantage of using stateless functional components is that the chances of calling the container component’s methods in a wrong context reduce heavily, because of the absence of references to `this`.\n\n## Life Cycle Events + Ajax\n\n**_React Life Cycle Events_**\n\nIn the beginning of the course Tyler explained that a component has certain life cycle events associated with it; the chart on the bottom illustrates each one’s time of invocation with respect to the life-cycle of a component.\n\nReact’s life cycle events can be broken into two categories:\n\n1. When a component gets mounted to the DOM or unmounted from it.\n2. When a component receives new data.\n\nFor the first category, the component may need to perform some/all of the following tasks during that time in the life cycle:\n\n- Default props - if props aren’t given to a component, they default to the specified Component.defaultProps object.\n- Initial State - initial state is retrieved from within the constructor of the component (like how we do it)\n- Make an Ajax request to fetch some data - common use case, the request can be made in the body of componentDidMount method (which is self explanatory)\n- Set up or remove any listeners or web-sockets (like a firebase ref listener) - start listener within componentDidMount and stop listener in componentWillUnmount (events are self-explanatory)\n\nNow coming to the life cycle events that triggered when the component receives new data from its parent component.\n\n- `componentWillReceiveProps` - for times when you want to execute some code whenever your component receives props\n- `shouldComponentUpdate` - allows us to add another condition which should return true for react to re-render that component (and obviously its children)\n\n![react component's life cycle events](http://i.imgur.com/3LkFtGd.png)\n\n**_Making Ajax Requests_**\n\nAn Http client library can be used to make Http requests to the server side (or any api we wish to use). _Axios_ is a promise based Http library that we used. It requires the `encodedURI` as an argument and returns a promise.\n\nIn our web application, we need to make ajax requests when the popular component mounts and when its state changes. So we make some changing in the method `updateLanguage`, to add a `repos=null` property on the state object temporarily, till the axios promise returns its response—after which the state is updated again to `repos=repos`.\n\nLoved the way Tyler structured the files and method names to make the Ajax request, abstracted the entire api calls in a module with contextual readable method names. Created a subdirectory `utils` in `App`, and in that a file named `Api.js`. We required axios within that file and exported an object with all necessary methods required for our app to interact with the api.\nThis method was then invoked in the new implementation of the `updateLanguage` method of the Popular component.\n\n![React JS](/images/reactrouter.png)\n\n## React Router v4\n\nReact Router is a component based routing mechanism for React apps (and native). It is the most popular routing package for react and is built by the reacttraining.com team itself.\n\nIt’s very simple to use. We used the following components present in the react-router-dom module:\n\n- BrowserRouter as Router - is the component between which all the routes are nested. Our most parent component.\n- Route - the component that helps specify views for each component, has many small nuances one needs to be aware of\n- Link - just a link with prop to.\n- NavLink - has activeClassName prop, to apply a css class when active\n- Switch - used to make sure only one of the Routes is active at any moment (useful for showing a route without a path for paths that are not handled aka 404)\n  - instead of rendering all of the routes that are active, switch is gonna let only 1 route be active at a time\n\n**_Route_**\n\nThe main routing component which links url paths to components. We used the following props that Route accepts:\n\n- path - prop takes string for the url path at which component should be active in the view\n  - Note: if a route has path=‘/first’, it’s component will be active for all paths that start with /first\n  - to avoid the above, we need to prepend prop path with keyword exact\n- component - takes a javascript expression referring to the component that one wants to link to the path\n- render - this prop is useful when you don’t want to link the route to a component, but instead specify the JSX right there. This prop takes a value of a function that returns the JSX you wish this route to return. This is used mostly for the 404 pages I’m assuming, in a route that’s the last child of the switch component (and has no path prop value obviously).\n- exact prop makes sure the route is rendered/active only when the path matches exactly and not just partly\n\n**_Link_**\n\nThis component is the basic anchor tag in react, except obviously it knows what component it originates in.\n\n- to - prop takes the path to route to when the user clicks the link\n\n**_NavLink_**\n\nComposed of the component Link, except with additional functionality to make Links active when their path matches the current path.\n\n- `activeClassName` - is the class that is applied to the NavLink component when the current path matches with the link’s path\n- `exact` - this prop makes sure the activeClassName is applied only when the path has an exact match with the link’s path (not just partly, similar to the exact prop in routes)\n\n`BrowserRouter` and `Switch` don’t have much more than what’s outlined in the brief points above.\n\n## Forms and Encapsulation in React\n\nIn this lesson we start-off using the React developer tools where we can see the tree like structure of our app, we can see the props passed to each component and the state living in each component.\n\n**_Input fields_**\n\nIn a typical web application, what we’re used to doing is to grab the value in the input field when a user fills it in and clicks submit. However, in React, we have two ways in which we could handle input fields in forms:\n\n- Controlled Component\n  - The controlled way is when we bind the value of the input field to the state of that component\n  - So when the user types in the value, the state updates and then changes the value of the input field (counterintuitive but it is like that and not the other way around)\n  - We can see the state change in real time as the user types in the React developer tool\n  - This is the way we’re going to be following in this course and is how the React docs typically recommend that we deal with forms\n  - This is called a controlled component because React is controlling the value of the specific input field\n- Uncontrolled Component\n  - The uncontrolled way is a little more traditional, where the user fills the input field\n  - and the state doesn’t change till he presses submit (or a similar event)\n\n**_Idea of Encapsulation_**\n\nThis idea is such that the form we’re working with is a component which has child components for individual input fields.\n\n- **From -> component, Input -> child controlled components**\n- The input field components have their values bound to a specific property on their state\n- As the value of this state updates, the state of the parent form component remains the same (sees no change)\n- The parent component passes a function (like onSubmit handler) to these controlled components and the value of the parent's state updates only when this function is invoked\n  _ and the parent's state has values which are the result of passing the child components state through that function\n  _ this is a little hard to understand without context, but I’m on the right page\n  So we can encapsulate the complexity of a specific state in a child component and pass in a function which helps its parent grab the value at a certain event invocation.\n\n## Dynamic Rendering & Query Parameters\n\n**_Dynamic Rendering_**\n\nThis seems to be very natural in React. We know that state changes are reflected in the view immediately (obviously when there is a change). So in the render method of a component—if we return certain a component/html element conditionally, based on the value of a property of the state, the element/component will be rendered dynamically based on whether that property of the state has a value or not. The same conditional rendering can be used to make elements/components disappear, replace each other, show up dynamically.\n\nIn our example project, we use this for the following\n\n- make the PlayerInput disappear\n- Get the PlayerPreview to show up\n- Get the Battle results link to show up\n\n**_Query Params_**\n\nThe `to` prop of the `Link` component of React Router accepts url path strings or an object with props:\n\n- pathname: which takes a string for the link’s path\n- search: takes a string beginning with ‘?’ for query params followed by the query param name value string\n\nReact Router’s Route component passes a few props to the component it’s linked with. One of the prop is `match` which is an object with a property `url` which contains the current url’s path. The `to` value of a `Link` that routes to a sub-path of the current url should be composed of the `this.props.match.url` property, so that the path can be changed later without affecting the link.\n\n## Axios, Promises and the Github Api\n\nPromises, is a helpful JS library (not a part of js) that helps us write easy to digest async code.\n\nIf a certain function returns a `promise` instead of a _value_, the function invocation needs to be chained with a method `.then` which takes a function as its argument; this function is given the `data` that the promise ultimately returns as an argument and returns desired values that can be derived from that `data`.\n\nThe axios library is a promise based http client. We use its method `.get` to request the GitHub api for data and chain it with `.then` to return the data in the format desired. Axios also has a useful method .all that returns a promise which is an aggregation of an array of promises which it takes as an argument.\n\nAny function that returns an invocation of `axios.get` (chained with a `.then` method) is returning a promise and when that function is invoked it needs to be chained with a `.then` invocation to be able to receive the value axios intended to return.\n\nThe function composition used to interact with the GitHub api and finally expose a single simple method in api object is a great way to compose functions. Get inspired for your own api objects you compose in the future.\n\n## Composition vs. this.props.children\n\n**_`this.props.children` in React_**\n\nA lotta times in while working with HTML pages, we need access to the specific data between the opening and closing tag of an element. React gives us an easy way to do this for components. `this.props.children` will give us the specific data between the opening and closing tag of the component referred to here by `this`.\n\nIn case of there being more components inside the opening and closing tag of a component, `this.props.children` will return an array composed of the components contained within the component’s opening and closing tag.\n\nSo simply put, props.children is whatever is between the `<Opening>` and closing `</Opening>` blocks of a component.\n\n![example of how this.props.children works](http://i.imgur.com/hQe7cs5.png)\n\nThis picture simply explains how this is useful to us while creating our components in JSX. So components that have an opening and closing tag—include `props.children` in the ui they return to keep a section of their ui dynamic. So while creating the component, we can pass in any relevant ui as its child.\n\n## Building a Highly Reusable React Component\n\n**_Defaulting props with defaultProps_**\n\nAn important advantage of using the React library is reusable components that can even be used between different projects. Being able to specify `defaultProps` for a component makes designing reusable components a lot simpler. It enables different users to use the component as it is or with customized `props` suited to their use within their project.\n\nWe make the `<Loading />` component more reusable by specifying `defaultProps` for it so that different users can either use it as it is or by changing `props` as needed.\n\n**_Video_**\n\nThe `Loading` component has two `props`: `text` and `speed` for which we provide default values and specify prop types. Users of the `Loading` component can either default on the text \"Loading\" with dots added to it every 300 miliseconds or change the text and the speed how they like.\n\nFor the dot animation effect, we updated the component's state continuosly between an interval specified by the `speed` prop; this happens in the life-cycle event `componentDidMount`. If we don't clear this interval when the `componentWillUnmount` the state of this component will keep updating till the app's instance shuts down. So the interval is referenced to a property `interval` of the component which is then used to clear the interval when the component unmounts.\n\n## Building for Production\n\nWhen building our project for production, we're gonna need the JavaScript in `index_bundle.js` to be minified and we're gonna need React to be compiled for production (without warning and unnecessary console logs) rather than development.\n\nIn order to achieve this, we modify the webpack configuration object exported from `webpack.config.js`.\n_ We conditionally add a couple items to the `plugins` property of the `config` object if the process' `NODE_ENV` property says `'production'`.\n_ 1st item: we define a `new` plugin using `webpack.DefinePlugin` which makes the `NODE_ENV` property of `process.env` equal to `'production'`. **This `NODE_ENV='production'` is for the code that webpack is compiling.** Whereas, the one in the condition, was for the code that compiles our project (i.e. the code in `webpack.config.js`). \\* 2nd item: an instance of `webpack.optimize.UglifyJsPlugin()` for webpack to minify and uglify all the JavaScript in `index_bundle.js`. This makes it impossible for other devs to imitate our application using dev tools.\n\nLastly, we add a script `\"build\"` to the npm `\"scripts\"` in `package.json`; it says:\n`NODE_ENV='production' webpack -p`\n\nNow when we run `npm run build` from our project directory, webpack will build our project in the `dist` subdirectory of our project. The `NODE_ENV='production'` is essential to pass the condition specified in `webpack.config.js` to add production plugins to the `config` object. `webpack -p` simply tells webpack to build for production.\n\n**_Installing modules locally rather than globally_**\n\nWhen installing `firebase-tools`, Tyler gives an awesome suggestion to avoid installing npm modules globally and to refer their commands from within scripts in `package.json` instead. Since when the commands run from there, they refer to the locally installed node modules and don't require us to install them globally. Another example of this is how we use webpack in this project. If we want to refer to webpack from our command line, npm will require us to install it globally.\n\nThere's nothing wrong with installling modules globally, except that our project will be forced to use the most updated version of that module. Which will create problems when incompatible updates are made to the module.\n","source":"_posts/react-fundamentals.md","raw":"---\ntitle: react fundamentals\ndate: 2018-04-10 11:22:07\ntags:\n  - react\n  - javascript\n---\n\n_Notes from the course by [Tyler McGinnis](https://tylermcginnis.com)_\n\n![React JS](/images/reactlogo.png)\n\n## Intro to the React Ecosystem\n\nTop qualities of React:\n\n- **Composition**\n  - everything in the React DOM is a component\n  - components are analogous to a container that wraps functionality within itself, much like functions do\n  - components can be used to compose other components much like functional composition\n  - well-defined components can be used between different projects (hence the advent of component libraries)\n- **Declarative**\n  - declarative code abstracts the implementation/control-flow handled by imperative code with the help of functions\n  - declarative code focuses on the WHAT rather than the HOW of the problem and uses abstracts the HOW to do so\n  - React is declarative with everything except with changing the state of a component which anyways results in it being re-rendered\n- **Unidirectional Dataflow**\n  - in React the state is stored in a component as opposed to the DOM (which is how it is with JQuery)\n  - state is explicitly changed and that causes the DOM to re-render\n  - data flows from the state to the DOM and never the other way around\n  - parent components pass data to child components with the help of props\n- **Explicit Mutations**\n  - changing state must be done explicitly in React\n  - changing the state of a component with this.setState renders it to the DOM\n    - there is no need of adding event listeners or dirty checking\n- **Just JavaScript**\n  - React takes advantage of the JavaScript's functionality, api, and capabilities (also functional style)\n\nThis course will cover the following tools from the React Ecosystem:\n\n- **React Router**\n  - component that allows us to map a url path to a component\n  - declare the routes to be rendered within router\n  - each route has a path property and a component property that allows you to map a path to a component\n  - router is powerful and enables routes to have different children and makes active link states, etc., extremely easy\n- **Webpack**\n  - most popular module bundler within the React community\n  - helps perform transformations to the code, making it ready for dev or production\n  - specify entry files which we work on, output directory, and final filename, as well as the loaders through which the specified files should be transformed\n- **Babel**\n  - transpiler used to transform JSX to JS and ES6 to ES5, etc\n  - loaded in webpack\n- **Axios**\n  - API used to send HTTP requests to different APIs (in our case the GitHub api)\n\n## Setup First React Component with NPM, Webpack and Babel\n\n![React JS](/images/npmlogo.svg)\n\n**_NPM_**\n\nIn writing software, it is an accepted idea that modularity is a great idea to for reusing code and increase the abilities and efficiencies of programmers. NPM is a node package manager that aims to solve the problem of enabling efficient collaboration and sharing of different modules.\n\nThe main problem with CDNs is maintaining updated versions of dependencies once their number starts going out of hand and sharing the same dependency files with team members working on the project.\n\nnpm init initialises a new npm project in current directory. It gives the directory a package.json file which contains information about the project’s dependencies with versions and also allows to run node scripts that perform different tasks (like testing ava, et cetera).\n\nNPM allows us to install modules globally and locally only for the project. NPM has commands for saving individual modules globally or locally, to run tests mentioned in the scripts object and to install all dependencies mentioned in package.json.\n\n`npm install —save` adds the module being installed to package.json as a dependency rather than a devDependency, which is what happens when we use `npm install —save-dev`\n\n**_Webpack_**\n\nWebpack is a module bundler that helps us make production and development transformations to the code we write. The reason for it to exist is that web developers shouldn’t have to transform code every time they want to test or deploy it. These transformations include but are not limited to: bundling js, bundling css, minification and uglification, jsx to js, sass/less to css, et cetera.\n\nWebpack needs the entry point for the main javascript files. It has a modules property that we use to specify all loaders (rules) that need to make a transformation on the code. It has a plugins property which specifies plugins like html-webpack-config’s object in its array. It needs the template and filename in the output distribution folder.\n\nWebpack loaders allow us to preprocess files (like css, et cetera) as we `require` them into the root js file.\n\nThe code that pieces the above together is fairly simple.\n\nWhile using webpack-dev-server to run a web server locally, any changes we make do not cause webpack to compile our bundle to the dist folder. However, it dynamically updates quickly because webpack saves the changes in a cache that is meant to refresh quickly rather than compiling a build bundle every time a change is made.\n\n**_Babel_**\n\nBabel is a popular javascript transpiler. It enables us to write future versions / variations / abstractions of javascript and babel compiles them to javascript which is compatible with most browsers.\n\nWe need to install each babel preset package using npm as a dev dependency for the project we’re using it with.\n\nIn web pack’s config object’s module property’s rules array we need to use `babel-loader` on .js files.\n\nIn order to configure babel, we need to explicitly mention the `presets` corresponding to the transformations we wish to make in a babel config object.\n\nWe can either include this object in a file name `.babelrc` or we can refer it to a property babel in `package.json`.\n\n**_React_**\n\nReact relies on a component based architecture in which the app is a component made up of components. Each component can be thought of as a collection of HTML, CSS, JS and some internal data specific to that component.\n\nThe way parent/child component relationship works is that the state of a component lives in its parent and has to be passed to the child with an attribute (called props/properties). This makes managing data simple because we know exactly where our data lives and we shouldn’t manipulate it elsewhere.\n\nA React Component may be composed of the following:\n\n- [internal data]\n- ui\n- [lifecycle event]\n\nEvery component is supposed to have a render method. The reason is that the render method returns the template for that component and it is necessary for a component to have a ui.\n\nWe need to tell ReactDOM to which element the components should be rendered to. You usually have to use ReactDOM.render only once in your applications because rendering the most parent element will render all the children as well.\n\nJSX is converted to React.createElement methods which describes what you see on the screen (notice only describes, doesn’t mean that it is what we see). React.createElement returns an object representation of the DOM node. It is also called virtual DOM node.\n\nReact interprets JSX and transforms it into lightweight javascript objects which are used to create a virtual DOM. Changes in the virtual dom are tracked on only the necessary updates are rendered to the DOM.\n\n`React.createElement` takes 3 arguments:\n\n- element type: `div`, `span`, component\n- properties object\n- children (multiple)\n  When React encounters a component in any of the above arguments, it replaces that with what the components React.createElement returns. Hence when rendering the most parent component using ReactDOM, the entire virtual DOM is created.\n\nThis invocation of React.createElement to create a virtual DOM node only happens while using ReactDOM.render and while changing state using setState.\n\nThe process looks something like this,\n\nSignal to notify our app some data has changed -> re-render virtual dom -> diff previous virtual dom with new virtual dom -> only update real dom with necessary changes. This gives react performance ups.\n\n**_Lecture video_**\n\nnpm install —-save-dev means add this to the object referenced by the devDependencies property of package.json.\n\nWhile npm install —-save means add this to the object referenced by the dependencies property of package.json.\n\nOne can add scripts to package.json that can be run with the script name as argument to npm. These scripts can range from webpack productiont, webpack-dev-server to ava test scripts.\n\nFrom the example mentioned in NPM text section of this lesson:\n\n```json\n\"scripts\": {\n  \"test\": \"ava 'app/**/*.test.js' --verbose --require ./other/setup-ava-tests.js\"\n}\n```\n\n## Dataflow with props\n\nWe already know that props are the primary way to pass data into a component (when it is created a.k.a. invoked within a parent component or the ReactDOM.render method). In this lesson we got hands on practice with passing props like username, name and img url to a component from its creation in the ReactDOM.render method and its invocation in a parent component. We also replaced multiple props in a parent component with a single property which takes a javascript object.\n\n![React JS](/images/react.png)\n\nIn JSX a javascript expression can be written within single curly braces {_javascript goes here_}. The primary way to build list uis in React is to simply pass in an array or other iterator and use javascript’s functionality of map and filter, et cetera.\n\nWhen rendering list items in jsx (`<li> {something} </li>`), React gives us a warning saying that we should add a unique key prop value pair to each list item. This allows React to keep track of changes in the list and reflect them on the ui in an efficient manner. Particularly for items that have been added or removed from the list. The value of the key prop should be a unique identifier for that item in the list (be careful using the index argument in filter and maps callback function, since the index for each item keep changing depending on the number of items in the iterative).\n\n## Pure functions. `f(d)=v`. Props and nesting components in React.\n\n**_Nested components and props_**\n\nProps are to components what arguments are to functions. Props are the way in which a parent components passes data to its child component. When specifying a component in JSX (invoking a component), a property value can be passed in the component in a way that looks similar to an attribute=“value” pair in HTML tags.\n\n**_Building UIs with pure functions and function compositions in React_**\n\nIn react, components can be thought of as pure functions, often composed with other pure functions. In a pure function, we pass arguments and get a value in return.\n\nIn react, components are like pure functions that take arguments and return a UI view. A neat expression to summarise this would be `f(d) = V`. (where d is data and V is the view).\n\nComposing function with helper functions is good practice to modularise code and similarly the same goes for react components. So much so, that React recently introduced stateless functional components which allow us to define components as normal JS functions that return JSX dom, these functions take the props as their argument (unlike the traditional component class with a render method).\n\nTyler goes on to say that learning React the right way is like an introduction to the world of functional programming where composing pure functions is the go to way to do something. Hence we should treat the props passed to a component as immutable.\n\nReact components can easily be composed of other components. What this means is that the JSX that is rendered by a component could be invoking other components while passing the prop types it need as property attributes.\n\n**_Intro to PropTypes_**\n\nPropTypes is a way to do type checking on props in React. It has recently been separated from React to its own library.\n\nPropTypes allow us to declare the type of each prop being passed to a component. Then, if the prop passed isn’t of the declared type, we get a warning in the console.\n\nPropTypes can be string, func, bool, object (of a particular shape with each properties type specified), et cetera.\n\n**_Video_**\n\nThe reliance on particular state is a very large contributor to a system’s complexity. What this means is that when using a function with side effects, the system has to worry about and keep track of the state that it depends on and modifies, whereas with pure functions the need to keep track of particular state disappears. Hence simplifying the system.\n\nHence components are easy to think about, they’re easy to test (because we don’t have to asses the state before testing components), they’re easy to reuse and they’re easy to reproduce the same results. So we can conclude that: react components do not change any state outside they’re scope and cause any mutations/ async requests, et cetera.\n\nImportant thing to note:\nThe JSX dom representation that a react component returns should be wrapped in a single DOM container element (which can be any html element objects or a react component). In short, don’t return multiple DOM or react components without wrapping them in a single container.\n\n**Any react component we want to make, should be:**\n\n![principles for a react component](http://i.imgur.com/72dYgU2.png)\n\n**_Quiz_**\n\nThe above purity means that we should treat props as immutable from within components (or their render method).\n\nThe `this` keyword + Managing and Updating State\nThe this keyword\n\nWhen invoking a method, the keyword this within its body refers to the object the method is a property of (the method will be invoked on an instance of that object, which will be on the left of the method invocation before the dot notation). In different situations the value of the this keyword is not very obvious and requires a thorough understanding of the different ways JavaScript binds the this keyword (which acts as context in functions/methods).\n\n- **Implicit Binding**: object has a property which equals to a function and within that functions body one can refer to other properties of that object with this.dotNotation\n- **Explicit Binding**: binding using functions’ in-built functionality .call, .apply, .bind.\n- **New/Window Binding**: when we use new to create an instance of an object, it binds the this keyword to itself within any of its methods/properties.\n\n**_Managing & Updating State_**\n\nWe specify the state of a component within its constructor (which first calls super with the props as argument). The state has to be explicitly changed using the component’s `setState` method which takes in a function as an argument; the function having to return the new `state` object.\n\nWe go on to create the popular tabs on the github-battle project and set its state. We defined a method that changes the components state when a particular item in the component was clicked. We link the component's method to that list item using the `onClick` attribute.\n\nReact advocates love how React needs users to explicitly change the state. When the state is changed the necessary changes reflect on the DOM immediately.\n\n## Stateless Functional Components\n\nWhile using React, we’re gonna have a lot of components that only have a render method and optionally take in some props (they have no other method or state). These components can be defined as pure functions instead, removing the unnecessary component class abstraction.\n\n**It is a great idea to separate container components from presentational components in React.**\n\nStateless functional components will aid us in doing so. It is a good idea to use these because this is a good way to separate container and presentational components. The functional component takes props as its first argument.\n\nTyler encourages us to create a stateless functional component whenever we feel that the components render method is getting long enough to understand with a glance.\n\nStateless functional components should not be called functional components because in future, React will have functional components to which we can add state.\n\n**_Private Components_**\nIf a components render method is getting long, we can compose it out of multiple stateless functional components. If such a component is composing a container component and is present in the same module from which only the container component is being exported, it is called a private component (like private functions).\n\nAnother advantage of using stateless functional components is that the chances of calling the container component’s methods in a wrong context reduce heavily, because of the absence of references to `this`.\n\n## Life Cycle Events + Ajax\n\n**_React Life Cycle Events_**\n\nIn the beginning of the course Tyler explained that a component has certain life cycle events associated with it; the chart on the bottom illustrates each one’s time of invocation with respect to the life-cycle of a component.\n\nReact’s life cycle events can be broken into two categories:\n\n1. When a component gets mounted to the DOM or unmounted from it.\n2. When a component receives new data.\n\nFor the first category, the component may need to perform some/all of the following tasks during that time in the life cycle:\n\n- Default props - if props aren’t given to a component, they default to the specified Component.defaultProps object.\n- Initial State - initial state is retrieved from within the constructor of the component (like how we do it)\n- Make an Ajax request to fetch some data - common use case, the request can be made in the body of componentDidMount method (which is self explanatory)\n- Set up or remove any listeners or web-sockets (like a firebase ref listener) - start listener within componentDidMount and stop listener in componentWillUnmount (events are self-explanatory)\n\nNow coming to the life cycle events that triggered when the component receives new data from its parent component.\n\n- `componentWillReceiveProps` - for times when you want to execute some code whenever your component receives props\n- `shouldComponentUpdate` - allows us to add another condition which should return true for react to re-render that component (and obviously its children)\n\n![react component's life cycle events](http://i.imgur.com/3LkFtGd.png)\n\n**_Making Ajax Requests_**\n\nAn Http client library can be used to make Http requests to the server side (or any api we wish to use). _Axios_ is a promise based Http library that we used. It requires the `encodedURI` as an argument and returns a promise.\n\nIn our web application, we need to make ajax requests when the popular component mounts and when its state changes. So we make some changing in the method `updateLanguage`, to add a `repos=null` property on the state object temporarily, till the axios promise returns its response—after which the state is updated again to `repos=repos`.\n\nLoved the way Tyler structured the files and method names to make the Ajax request, abstracted the entire api calls in a module with contextual readable method names. Created a subdirectory `utils` in `App`, and in that a file named `Api.js`. We required axios within that file and exported an object with all necessary methods required for our app to interact with the api.\nThis method was then invoked in the new implementation of the `updateLanguage` method of the Popular component.\n\n![React JS](/images/reactrouter.png)\n\n## React Router v4\n\nReact Router is a component based routing mechanism for React apps (and native). It is the most popular routing package for react and is built by the reacttraining.com team itself.\n\nIt’s very simple to use. We used the following components present in the react-router-dom module:\n\n- BrowserRouter as Router - is the component between which all the routes are nested. Our most parent component.\n- Route - the component that helps specify views for each component, has many small nuances one needs to be aware of\n- Link - just a link with prop to.\n- NavLink - has activeClassName prop, to apply a css class when active\n- Switch - used to make sure only one of the Routes is active at any moment (useful for showing a route without a path for paths that are not handled aka 404)\n  - instead of rendering all of the routes that are active, switch is gonna let only 1 route be active at a time\n\n**_Route_**\n\nThe main routing component which links url paths to components. We used the following props that Route accepts:\n\n- path - prop takes string for the url path at which component should be active in the view\n  - Note: if a route has path=‘/first’, it’s component will be active for all paths that start with /first\n  - to avoid the above, we need to prepend prop path with keyword exact\n- component - takes a javascript expression referring to the component that one wants to link to the path\n- render - this prop is useful when you don’t want to link the route to a component, but instead specify the JSX right there. This prop takes a value of a function that returns the JSX you wish this route to return. This is used mostly for the 404 pages I’m assuming, in a route that’s the last child of the switch component (and has no path prop value obviously).\n- exact prop makes sure the route is rendered/active only when the path matches exactly and not just partly\n\n**_Link_**\n\nThis component is the basic anchor tag in react, except obviously it knows what component it originates in.\n\n- to - prop takes the path to route to when the user clicks the link\n\n**_NavLink_**\n\nComposed of the component Link, except with additional functionality to make Links active when their path matches the current path.\n\n- `activeClassName` - is the class that is applied to the NavLink component when the current path matches with the link’s path\n- `exact` - this prop makes sure the activeClassName is applied only when the path has an exact match with the link’s path (not just partly, similar to the exact prop in routes)\n\n`BrowserRouter` and `Switch` don’t have much more than what’s outlined in the brief points above.\n\n## Forms and Encapsulation in React\n\nIn this lesson we start-off using the React developer tools where we can see the tree like structure of our app, we can see the props passed to each component and the state living in each component.\n\n**_Input fields_**\n\nIn a typical web application, what we’re used to doing is to grab the value in the input field when a user fills it in and clicks submit. However, in React, we have two ways in which we could handle input fields in forms:\n\n- Controlled Component\n  - The controlled way is when we bind the value of the input field to the state of that component\n  - So when the user types in the value, the state updates and then changes the value of the input field (counterintuitive but it is like that and not the other way around)\n  - We can see the state change in real time as the user types in the React developer tool\n  - This is the way we’re going to be following in this course and is how the React docs typically recommend that we deal with forms\n  - This is called a controlled component because React is controlling the value of the specific input field\n- Uncontrolled Component\n  - The uncontrolled way is a little more traditional, where the user fills the input field\n  - and the state doesn’t change till he presses submit (or a similar event)\n\n**_Idea of Encapsulation_**\n\nThis idea is such that the form we’re working with is a component which has child components for individual input fields.\n\n- **From -> component, Input -> child controlled components**\n- The input field components have their values bound to a specific property on their state\n- As the value of this state updates, the state of the parent form component remains the same (sees no change)\n- The parent component passes a function (like onSubmit handler) to these controlled components and the value of the parent's state updates only when this function is invoked\n  _ and the parent's state has values which are the result of passing the child components state through that function\n  _ this is a little hard to understand without context, but I’m on the right page\n  So we can encapsulate the complexity of a specific state in a child component and pass in a function which helps its parent grab the value at a certain event invocation.\n\n## Dynamic Rendering & Query Parameters\n\n**_Dynamic Rendering_**\n\nThis seems to be very natural in React. We know that state changes are reflected in the view immediately (obviously when there is a change). So in the render method of a component—if we return certain a component/html element conditionally, based on the value of a property of the state, the element/component will be rendered dynamically based on whether that property of the state has a value or not. The same conditional rendering can be used to make elements/components disappear, replace each other, show up dynamically.\n\nIn our example project, we use this for the following\n\n- make the PlayerInput disappear\n- Get the PlayerPreview to show up\n- Get the Battle results link to show up\n\n**_Query Params_**\n\nThe `to` prop of the `Link` component of React Router accepts url path strings or an object with props:\n\n- pathname: which takes a string for the link’s path\n- search: takes a string beginning with ‘?’ for query params followed by the query param name value string\n\nReact Router’s Route component passes a few props to the component it’s linked with. One of the prop is `match` which is an object with a property `url` which contains the current url’s path. The `to` value of a `Link` that routes to a sub-path of the current url should be composed of the `this.props.match.url` property, so that the path can be changed later without affecting the link.\n\n## Axios, Promises and the Github Api\n\nPromises, is a helpful JS library (not a part of js) that helps us write easy to digest async code.\n\nIf a certain function returns a `promise` instead of a _value_, the function invocation needs to be chained with a method `.then` which takes a function as its argument; this function is given the `data` that the promise ultimately returns as an argument and returns desired values that can be derived from that `data`.\n\nThe axios library is a promise based http client. We use its method `.get` to request the GitHub api for data and chain it with `.then` to return the data in the format desired. Axios also has a useful method .all that returns a promise which is an aggregation of an array of promises which it takes as an argument.\n\nAny function that returns an invocation of `axios.get` (chained with a `.then` method) is returning a promise and when that function is invoked it needs to be chained with a `.then` invocation to be able to receive the value axios intended to return.\n\nThe function composition used to interact with the GitHub api and finally expose a single simple method in api object is a great way to compose functions. Get inspired for your own api objects you compose in the future.\n\n## Composition vs. this.props.children\n\n**_`this.props.children` in React_**\n\nA lotta times in while working with HTML pages, we need access to the specific data between the opening and closing tag of an element. React gives us an easy way to do this for components. `this.props.children` will give us the specific data between the opening and closing tag of the component referred to here by `this`.\n\nIn case of there being more components inside the opening and closing tag of a component, `this.props.children` will return an array composed of the components contained within the component’s opening and closing tag.\n\nSo simply put, props.children is whatever is between the `<Opening>` and closing `</Opening>` blocks of a component.\n\n![example of how this.props.children works](http://i.imgur.com/hQe7cs5.png)\n\nThis picture simply explains how this is useful to us while creating our components in JSX. So components that have an opening and closing tag—include `props.children` in the ui they return to keep a section of their ui dynamic. So while creating the component, we can pass in any relevant ui as its child.\n\n## Building a Highly Reusable React Component\n\n**_Defaulting props with defaultProps_**\n\nAn important advantage of using the React library is reusable components that can even be used between different projects. Being able to specify `defaultProps` for a component makes designing reusable components a lot simpler. It enables different users to use the component as it is or with customized `props` suited to their use within their project.\n\nWe make the `<Loading />` component more reusable by specifying `defaultProps` for it so that different users can either use it as it is or by changing `props` as needed.\n\n**_Video_**\n\nThe `Loading` component has two `props`: `text` and `speed` for which we provide default values and specify prop types. Users of the `Loading` component can either default on the text \"Loading\" with dots added to it every 300 miliseconds or change the text and the speed how they like.\n\nFor the dot animation effect, we updated the component's state continuosly between an interval specified by the `speed` prop; this happens in the life-cycle event `componentDidMount`. If we don't clear this interval when the `componentWillUnmount` the state of this component will keep updating till the app's instance shuts down. So the interval is referenced to a property `interval` of the component which is then used to clear the interval when the component unmounts.\n\n## Building for Production\n\nWhen building our project for production, we're gonna need the JavaScript in `index_bundle.js` to be minified and we're gonna need React to be compiled for production (without warning and unnecessary console logs) rather than development.\n\nIn order to achieve this, we modify the webpack configuration object exported from `webpack.config.js`.\n_ We conditionally add a couple items to the `plugins` property of the `config` object if the process' `NODE_ENV` property says `'production'`.\n_ 1st item: we define a `new` plugin using `webpack.DefinePlugin` which makes the `NODE_ENV` property of `process.env` equal to `'production'`. **This `NODE_ENV='production'` is for the code that webpack is compiling.** Whereas, the one in the condition, was for the code that compiles our project (i.e. the code in `webpack.config.js`). \\* 2nd item: an instance of `webpack.optimize.UglifyJsPlugin()` for webpack to minify and uglify all the JavaScript in `index_bundle.js`. This makes it impossible for other devs to imitate our application using dev tools.\n\nLastly, we add a script `\"build\"` to the npm `\"scripts\"` in `package.json`; it says:\n`NODE_ENV='production' webpack -p`\n\nNow when we run `npm run build` from our project directory, webpack will build our project in the `dist` subdirectory of our project. The `NODE_ENV='production'` is essential to pass the condition specified in `webpack.config.js` to add production plugins to the `config` object. `webpack -p` simply tells webpack to build for production.\n\n**_Installing modules locally rather than globally_**\n\nWhen installing `firebase-tools`, Tyler gives an awesome suggestion to avoid installing npm modules globally and to refer their commands from within scripts in `package.json` instead. Since when the commands run from there, they refer to the locally installed node modules and don't require us to install them globally. Another example of this is how we use webpack in this project. If we want to refer to webpack from our command line, npm will require us to install it globally.\n\nThere's nothing wrong with installling modules globally, except that our project will be forced to use the most updated version of that module. Which will create problems when incompatible updates are made to the module.\n","slug":"react-fundamentals","published":1,"updated":"2019-04-22T20:21:33.213Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjusu50ku0012wkqzbo7ki1ex","content":"<p><em>Notes from the course by <a href=\"https://tylermcginnis.com\" target=\"_blank\" rel=\"noopener\">Tyler McGinnis</a></em></p>\n<p><img src=\"/images/reactlogo.png\" alt=\"React JS\"></p>\n<h2 id=\"Intro-to-the-React-Ecosystem\"><a href=\"#Intro-to-the-React-Ecosystem\" class=\"headerlink\" title=\"Intro to the React Ecosystem\"></a>Intro to the React Ecosystem</h2><p>Top qualities of React:</p>\n<ul>\n<li><strong>Composition</strong><ul>\n<li>everything in the React DOM is a component</li>\n<li>components are analogous to a container that wraps functionality within itself, much like functions do</li>\n<li>components can be used to compose other components much like functional composition</li>\n<li>well-defined components can be used between different projects (hence the advent of component libraries)</li>\n</ul>\n</li>\n<li><strong>Declarative</strong><ul>\n<li>declarative code abstracts the implementation/control-flow handled by imperative code with the help of functions</li>\n<li>declarative code focuses on the WHAT rather than the HOW of the problem and uses abstracts the HOW to do so</li>\n<li>React is declarative with everything except with changing the state of a component which anyways results in it being re-rendered</li>\n</ul>\n</li>\n<li><strong>Unidirectional Dataflow</strong><ul>\n<li>in React the state is stored in a component as opposed to the DOM (which is how it is with JQuery)</li>\n<li>state is explicitly changed and that causes the DOM to re-render</li>\n<li>data flows from the state to the DOM and never the other way around</li>\n<li>parent components pass data to child components with the help of props</li>\n</ul>\n</li>\n<li><strong>Explicit Mutations</strong><ul>\n<li>changing state must be done explicitly in React</li>\n<li>changing the state of a component with this.setState renders it to the DOM<ul>\n<li>there is no need of adding event listeners or dirty checking</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Just JavaScript</strong><ul>\n<li>React takes advantage of the JavaScript’s functionality, api, and capabilities (also functional style)</li>\n</ul>\n</li>\n</ul>\n<p>This course will cover the following tools from the React Ecosystem:</p>\n<ul>\n<li><strong>React Router</strong><ul>\n<li>component that allows us to map a url path to a component</li>\n<li>declare the routes to be rendered within router</li>\n<li>each route has a path property and a component property that allows you to map a path to a component</li>\n<li>router is powerful and enables routes to have different children and makes active link states, etc., extremely easy</li>\n</ul>\n</li>\n<li><strong>Webpack</strong><ul>\n<li>most popular module bundler within the React community</li>\n<li>helps perform transformations to the code, making it ready for dev or production</li>\n<li>specify entry files which we work on, output directory, and final filename, as well as the loaders through which the specified files should be transformed</li>\n</ul>\n</li>\n<li><strong>Babel</strong><ul>\n<li>transpiler used to transform JSX to JS and ES6 to ES5, etc</li>\n<li>loaded in webpack</li>\n</ul>\n</li>\n<li><strong>Axios</strong><ul>\n<li>API used to send HTTP requests to different APIs (in our case the GitHub api)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Setup-First-React-Component-with-NPM-Webpack-and-Babel\"><a href=\"#Setup-First-React-Component-with-NPM-Webpack-and-Babel\" class=\"headerlink\" title=\"Setup First React Component with NPM, Webpack and Babel\"></a>Setup First React Component with NPM, Webpack and Babel</h2><p><img src=\"/images/npmlogo.svg\" alt=\"React JS\"></p>\n<p><strong><em>NPM</em></strong></p>\n<p>In writing software, it is an accepted idea that modularity is a great idea to for reusing code and increase the abilities and efficiencies of programmers. NPM is a node package manager that aims to solve the problem of enabling efficient collaboration and sharing of different modules.</p>\n<p>The main problem with CDNs is maintaining updated versions of dependencies once their number starts going out of hand and sharing the same dependency files with team members working on the project.</p>\n<p>npm init initialises a new npm project in current directory. It gives the directory a package.json file which contains information about the project’s dependencies with versions and also allows to run node scripts that perform different tasks (like testing ava, et cetera).</p>\n<p>NPM allows us to install modules globally and locally only for the project. NPM has commands for saving individual modules globally or locally, to run tests mentioned in the scripts object and to install all dependencies mentioned in package.json.</p>\n<p><code>npm install —save</code> adds the module being installed to package.json as a dependency rather than a devDependency, which is what happens when we use <code>npm install —save-dev</code></p>\n<p><strong><em>Webpack</em></strong></p>\n<p>Webpack is a module bundler that helps us make production and development transformations to the code we write. The reason for it to exist is that web developers shouldn’t have to transform code every time they want to test or deploy it. These transformations include but are not limited to: bundling js, bundling css, minification and uglification, jsx to js, sass/less to css, et cetera.</p>\n<p>Webpack needs the entry point for the main javascript files. It has a modules property that we use to specify all loaders (rules) that need to make a transformation on the code. It has a plugins property which specifies plugins like html-webpack-config’s object in its array. It needs the template and filename in the output distribution folder.</p>\n<p>Webpack loaders allow us to preprocess files (like css, et cetera) as we <code>require</code> them into the root js file.</p>\n<p>The code that pieces the above together is fairly simple.</p>\n<p>While using webpack-dev-server to run a web server locally, any changes we make do not cause webpack to compile our bundle to the dist folder. However, it dynamically updates quickly because webpack saves the changes in a cache that is meant to refresh quickly rather than compiling a build bundle every time a change is made.</p>\n<p><strong><em>Babel</em></strong></p>\n<p>Babel is a popular javascript transpiler. It enables us to write future versions / variations / abstractions of javascript and babel compiles them to javascript which is compatible with most browsers.</p>\n<p>We need to install each babel preset package using npm as a dev dependency for the project we’re using it with.</p>\n<p>In web pack’s config object’s module property’s rules array we need to use <code>babel-loader</code> on .js files.</p>\n<p>In order to configure babel, we need to explicitly mention the <code>presets</code> corresponding to the transformations we wish to make in a babel config object.</p>\n<p>We can either include this object in a file name <code>.babelrc</code> or we can refer it to a property babel in <code>package.json</code>.</p>\n<p><strong><em>React</em></strong></p>\n<p>React relies on a component based architecture in which the app is a component made up of components. Each component can be thought of as a collection of HTML, CSS, JS and some internal data specific to that component.</p>\n<p>The way parent/child component relationship works is that the state of a component lives in its parent and has to be passed to the child with an attribute (called props/properties). This makes managing data simple because we know exactly where our data lives and we shouldn’t manipulate it elsewhere.</p>\n<p>A React Component may be composed of the following:</p>\n<ul>\n<li>[internal data]</li>\n<li>ui</li>\n<li>[lifecycle event]</li>\n</ul>\n<p>Every component is supposed to have a render method. The reason is that the render method returns the template for that component and it is necessary for a component to have a ui.</p>\n<p>We need to tell ReactDOM to which element the components should be rendered to. You usually have to use ReactDOM.render only once in your applications because rendering the most parent element will render all the children as well.</p>\n<p>JSX is converted to React.createElement methods which describes what you see on the screen (notice only describes, doesn’t mean that it is what we see). React.createElement returns an object representation of the DOM node. It is also called virtual DOM node.</p>\n<p>React interprets JSX and transforms it into lightweight javascript objects which are used to create a virtual DOM. Changes in the virtual dom are tracked on only the necessary updates are rendered to the DOM.</p>\n<p><code>React.createElement</code> takes 3 arguments:</p>\n<ul>\n<li>element type: <code>div</code>, <code>span</code>, component</li>\n<li>properties object</li>\n<li>children (multiple)<br>When React encounters a component in any of the above arguments, it replaces that with what the components React.createElement returns. Hence when rendering the most parent component using ReactDOM, the entire virtual DOM is created.</li>\n</ul>\n<p>This invocation of React.createElement to create a virtual DOM node only happens while using ReactDOM.render and while changing state using setState.</p>\n<p>The process looks something like this,</p>\n<p>Signal to notify our app some data has changed -&gt; re-render virtual dom -&gt; diff previous virtual dom with new virtual dom -&gt; only update real dom with necessary changes. This gives react performance ups.</p>\n<p><strong><em>Lecture video</em></strong></p>\n<p>npm install —-save-dev means add this to the object referenced by the devDependencies property of package.json.</p>\n<p>While npm install —-save means add this to the object referenced by the dependencies property of package.json.</p>\n<p>One can add scripts to package.json that can be run with the script name as argument to npm. These scripts can range from webpack productiont, webpack-dev-server to ava test scripts.</p>\n<p>From the example mentioned in NPM text section of this lesson:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"scripts\": &#123;</span><br><span class=\"line\">  \"test\": \"ava 'app/**/*.test.js' --verbose --require ./other/setup-ava-tests.js\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Dataflow-with-props\"><a href=\"#Dataflow-with-props\" class=\"headerlink\" title=\"Dataflow with props\"></a>Dataflow with props</h2><p>We already know that props are the primary way to pass data into a component (when it is created a.k.a. invoked within a parent component or the ReactDOM.render method). In this lesson we got hands on practice with passing props like username, name and img url to a component from its creation in the ReactDOM.render method and its invocation in a parent component. We also replaced multiple props in a parent component with a single property which takes a javascript object.</p>\n<p><img src=\"/images/react.png\" alt=\"React JS\"></p>\n<p>In JSX a javascript expression can be written within single curly braces {<em>javascript goes here</em>}. The primary way to build list uis in React is to simply pass in an array or other iterator and use javascript’s functionality of map and filter, et cetera.</p>\n<p>When rendering list items in jsx (<code>&lt;li&gt; {something} &lt;/li&gt;</code>), React gives us a warning saying that we should add a unique key prop value pair to each list item. This allows React to keep track of changes in the list and reflect them on the ui in an efficient manner. Particularly for items that have been added or removed from the list. The value of the key prop should be a unique identifier for that item in the list (be careful using the index argument in filter and maps callback function, since the index for each item keep changing depending on the number of items in the iterative).</p>\n<h2 id=\"Pure-functions-f-d-v-Props-and-nesting-components-in-React\"><a href=\"#Pure-functions-f-d-v-Props-and-nesting-components-in-React\" class=\"headerlink\" title=\"Pure functions. f(d)=v. Props and nesting components in React.\"></a>Pure functions. <code>f(d)=v</code>. Props and nesting components in React.</h2><p><strong><em>Nested components and props</em></strong></p>\n<p>Props are to components what arguments are to functions. Props are the way in which a parent components passes data to its child component. When specifying a component in JSX (invoking a component), a property value can be passed in the component in a way that looks similar to an attribute=“value” pair in HTML tags.</p>\n<p><strong><em>Building UIs with pure functions and function compositions in React</em></strong></p>\n<p>In react, components can be thought of as pure functions, often composed with other pure functions. In a pure function, we pass arguments and get a value in return.</p>\n<p>In react, components are like pure functions that take arguments and return a UI view. A neat expression to summarise this would be <code>f(d) = V</code>. (where d is data and V is the view).</p>\n<p>Composing function with helper functions is good practice to modularise code and similarly the same goes for react components. So much so, that React recently introduced stateless functional components which allow us to define components as normal JS functions that return JSX dom, these functions take the props as their argument (unlike the traditional component class with a render method).</p>\n<p>Tyler goes on to say that learning React the right way is like an introduction to the world of functional programming where composing pure functions is the go to way to do something. Hence we should treat the props passed to a component as immutable.</p>\n<p>React components can easily be composed of other components. What this means is that the JSX that is rendered by a component could be invoking other components while passing the prop types it need as property attributes.</p>\n<p><strong><em>Intro to PropTypes</em></strong></p>\n<p>PropTypes is a way to do type checking on props in React. It has recently been separated from React to its own library.</p>\n<p>PropTypes allow us to declare the type of each prop being passed to a component. Then, if the prop passed isn’t of the declared type, we get a warning in the console.</p>\n<p>PropTypes can be string, func, bool, object (of a particular shape with each properties type specified), et cetera.</p>\n<p><strong><em>Video</em></strong></p>\n<p>The reliance on particular state is a very large contributor to a system’s complexity. What this means is that when using a function with side effects, the system has to worry about and keep track of the state that it depends on and modifies, whereas with pure functions the need to keep track of particular state disappears. Hence simplifying the system.</p>\n<p>Hence components are easy to think about, they’re easy to test (because we don’t have to asses the state before testing components), they’re easy to reuse and they’re easy to reproduce the same results. So we can conclude that: react components do not change any state outside they’re scope and cause any mutations/ async requests, et cetera.</p>\n<p>Important thing to note:<br>The JSX dom representation that a react component returns should be wrapped in a single DOM container element (which can be any html element objects or a react component). In short, don’t return multiple DOM or react components without wrapping them in a single container.</p>\n<p><strong>Any react component we want to make, should be:</strong></p>\n<p><img src=\"http://i.imgur.com/72dYgU2.png\" alt=\"principles for a react component\"></p>\n<p><strong><em>Quiz</em></strong></p>\n<p>The above purity means that we should treat props as immutable from within components (or their render method).</p>\n<p>The <code>this</code> keyword + Managing and Updating State<br>The this keyword</p>\n<p>When invoking a method, the keyword this within its body refers to the object the method is a property of (the method will be invoked on an instance of that object, which will be on the left of the method invocation before the dot notation). In different situations the value of the this keyword is not very obvious and requires a thorough understanding of the different ways JavaScript binds the this keyword (which acts as context in functions/methods).</p>\n<ul>\n<li><strong>Implicit Binding</strong>: object has a property which equals to a function and within that functions body one can refer to other properties of that object with this.dotNotation</li>\n<li><strong>Explicit Binding</strong>: binding using functions’ in-built functionality .call, .apply, .bind.</li>\n<li><strong>New/Window Binding</strong>: when we use new to create an instance of an object, it binds the this keyword to itself within any of its methods/properties.</li>\n</ul>\n<p><strong><em>Managing &amp; Updating State</em></strong></p>\n<p>We specify the state of a component within its constructor (which first calls super with the props as argument). The state has to be explicitly changed using the component’s <code>setState</code> method which takes in a function as an argument; the function having to return the new <code>state</code> object.</p>\n<p>We go on to create the popular tabs on the github-battle project and set its state. We defined a method that changes the components state when a particular item in the component was clicked. We link the component’s method to that list item using the <code>onClick</code> attribute.</p>\n<p>React advocates love how React needs users to explicitly change the state. When the state is changed the necessary changes reflect on the DOM immediately.</p>\n<h2 id=\"Stateless-Functional-Components\"><a href=\"#Stateless-Functional-Components\" class=\"headerlink\" title=\"Stateless Functional Components\"></a>Stateless Functional Components</h2><p>While using React, we’re gonna have a lot of components that only have a render method and optionally take in some props (they have no other method or state). These components can be defined as pure functions instead, removing the unnecessary component class abstraction.</p>\n<p><strong>It is a great idea to separate container components from presentational components in React.</strong></p>\n<p>Stateless functional components will aid us in doing so. It is a good idea to use these because this is a good way to separate container and presentational components. The functional component takes props as its first argument.</p>\n<p>Tyler encourages us to create a stateless functional component whenever we feel that the components render method is getting long enough to understand with a glance.</p>\n<p>Stateless functional components should not be called functional components because in future, React will have functional components to which we can add state.</p>\n<p><strong><em>Private Components</em></strong><br>If a components render method is getting long, we can compose it out of multiple stateless functional components. If such a component is composing a container component and is present in the same module from which only the container component is being exported, it is called a private component (like private functions).</p>\n<p>Another advantage of using stateless functional components is that the chances of calling the container component’s methods in a wrong context reduce heavily, because of the absence of references to <code>this</code>.</p>\n<h2 id=\"Life-Cycle-Events-Ajax\"><a href=\"#Life-Cycle-Events-Ajax\" class=\"headerlink\" title=\"Life Cycle Events + Ajax\"></a>Life Cycle Events + Ajax</h2><p><strong><em>React Life Cycle Events</em></strong></p>\n<p>In the beginning of the course Tyler explained that a component has certain life cycle events associated with it; the chart on the bottom illustrates each one’s time of invocation with respect to the life-cycle of a component.</p>\n<p>React’s life cycle events can be broken into two categories:</p>\n<ol>\n<li>When a component gets mounted to the DOM or unmounted from it.</li>\n<li>When a component receives new data.</li>\n</ol>\n<p>For the first category, the component may need to perform some/all of the following tasks during that time in the life cycle:</p>\n<ul>\n<li>Default props - if props aren’t given to a component, they default to the specified Component.defaultProps object.</li>\n<li>Initial State - initial state is retrieved from within the constructor of the component (like how we do it)</li>\n<li>Make an Ajax request to fetch some data - common use case, the request can be made in the body of componentDidMount method (which is self explanatory)</li>\n<li>Set up or remove any listeners or web-sockets (like a firebase ref listener) - start listener within componentDidMount and stop listener in componentWillUnmount (events are self-explanatory)</li>\n</ul>\n<p>Now coming to the life cycle events that triggered when the component receives new data from its parent component.</p>\n<ul>\n<li><code>componentWillReceiveProps</code> - for times when you want to execute some code whenever your component receives props</li>\n<li><code>shouldComponentUpdate</code> - allows us to add another condition which should return true for react to re-render that component (and obviously its children)</li>\n</ul>\n<p><img src=\"http://i.imgur.com/3LkFtGd.png\" alt=\"react component&#39;s life cycle events\"></p>\n<p><strong><em>Making Ajax Requests</em></strong></p>\n<p>An Http client library can be used to make Http requests to the server side (or any api we wish to use). <em>Axios</em> is a promise based Http library that we used. It requires the <code>encodedURI</code> as an argument and returns a promise.</p>\n<p>In our web application, we need to make ajax requests when the popular component mounts and when its state changes. So we make some changing in the method <code>updateLanguage</code>, to add a <code>repos=null</code> property on the state object temporarily, till the axios promise returns its response—after which the state is updated again to <code>repos=repos</code>.</p>\n<p>Loved the way Tyler structured the files and method names to make the Ajax request, abstracted the entire api calls in a module with contextual readable method names. Created a subdirectory <code>utils</code> in <code>App</code>, and in that a file named <code>Api.js</code>. We required axios within that file and exported an object with all necessary methods required for our app to interact with the api.<br>This method was then invoked in the new implementation of the <code>updateLanguage</code> method of the Popular component.</p>\n<p><img src=\"/images/reactrouter.png\" alt=\"React JS\"></p>\n<h2 id=\"React-Router-v4\"><a href=\"#React-Router-v4\" class=\"headerlink\" title=\"React Router v4\"></a>React Router v4</h2><p>React Router is a component based routing mechanism for React apps (and native). It is the most popular routing package for react and is built by the reacttraining.com team itself.</p>\n<p>It’s very simple to use. We used the following components present in the react-router-dom module:</p>\n<ul>\n<li>BrowserRouter as Router - is the component between which all the routes are nested. Our most parent component.</li>\n<li>Route - the component that helps specify views for each component, has many small nuances one needs to be aware of</li>\n<li>Link - just a link with prop to.</li>\n<li>NavLink - has activeClassName prop, to apply a css class when active</li>\n<li>Switch - used to make sure only one of the Routes is active at any moment (useful for showing a route without a path for paths that are not handled aka 404)<ul>\n<li>instead of rendering all of the routes that are active, switch is gonna let only 1 route be active at a time</li>\n</ul>\n</li>\n</ul>\n<p><strong><em>Route</em></strong></p>\n<p>The main routing component which links url paths to components. We used the following props that Route accepts:</p>\n<ul>\n<li>path - prop takes string for the url path at which component should be active in the view<ul>\n<li>Note: if a route has path=‘/first’, it’s component will be active for all paths that start with /first</li>\n<li>to avoid the above, we need to prepend prop path with keyword exact</li>\n</ul>\n</li>\n<li>component - takes a javascript expression referring to the component that one wants to link to the path</li>\n<li>render - this prop is useful when you don’t want to link the route to a component, but instead specify the JSX right there. This prop takes a value of a function that returns the JSX you wish this route to return. This is used mostly for the 404 pages I’m assuming, in a route that’s the last child of the switch component (and has no path prop value obviously).</li>\n<li>exact prop makes sure the route is rendered/active only when the path matches exactly and not just partly</li>\n</ul>\n<p><strong><em>Link</em></strong></p>\n<p>This component is the basic anchor tag in react, except obviously it knows what component it originates in.</p>\n<ul>\n<li>to - prop takes the path to route to when the user clicks the link</li>\n</ul>\n<p><strong><em>NavLink</em></strong></p>\n<p>Composed of the component Link, except with additional functionality to make Links active when their path matches the current path.</p>\n<ul>\n<li><code>activeClassName</code> - is the class that is applied to the NavLink component when the current path matches with the link’s path</li>\n<li><code>exact</code> - this prop makes sure the activeClassName is applied only when the path has an exact match with the link’s path (not just partly, similar to the exact prop in routes)</li>\n</ul>\n<p><code>BrowserRouter</code> and <code>Switch</code> don’t have much more than what’s outlined in the brief points above.</p>\n<h2 id=\"Forms-and-Encapsulation-in-React\"><a href=\"#Forms-and-Encapsulation-in-React\" class=\"headerlink\" title=\"Forms and Encapsulation in React\"></a>Forms and Encapsulation in React</h2><p>In this lesson we start-off using the React developer tools where we can see the tree like structure of our app, we can see the props passed to each component and the state living in each component.</p>\n<p><strong><em>Input fields</em></strong></p>\n<p>In a typical web application, what we’re used to doing is to grab the value in the input field when a user fills it in and clicks submit. However, in React, we have two ways in which we could handle input fields in forms:</p>\n<ul>\n<li>Controlled Component<ul>\n<li>The controlled way is when we bind the value of the input field to the state of that component</li>\n<li>So when the user types in the value, the state updates and then changes the value of the input field (counterintuitive but it is like that and not the other way around)</li>\n<li>We can see the state change in real time as the user types in the React developer tool</li>\n<li>This is the way we’re going to be following in this course and is how the React docs typically recommend that we deal with forms</li>\n<li>This is called a controlled component because React is controlling the value of the specific input field</li>\n</ul>\n</li>\n<li>Uncontrolled Component<ul>\n<li>The uncontrolled way is a little more traditional, where the user fills the input field</li>\n<li>and the state doesn’t change till he presses submit (or a similar event)</li>\n</ul>\n</li>\n</ul>\n<p><strong><em>Idea of Encapsulation</em></strong></p>\n<p>This idea is such that the form we’re working with is a component which has child components for individual input fields.</p>\n<ul>\n<li><strong>From -&gt; component, Input -&gt; child controlled components</strong></li>\n<li>The input field components have their values bound to a specific property on their state</li>\n<li>As the value of this state updates, the state of the parent form component remains the same (sees no change)</li>\n<li>The parent component passes a function (like onSubmit handler) to these controlled components and the value of the parent’s state updates only when this function is invoked<br>_ and the parent’s state has values which are the result of passing the child components state through that function<br>_ this is a little hard to understand without context, but I’m on the right page<br>So we can encapsulate the complexity of a specific state in a child component and pass in a function which helps its parent grab the value at a certain event invocation.</li>\n</ul>\n<h2 id=\"Dynamic-Rendering-amp-Query-Parameters\"><a href=\"#Dynamic-Rendering-amp-Query-Parameters\" class=\"headerlink\" title=\"Dynamic Rendering &amp; Query Parameters\"></a>Dynamic Rendering &amp; Query Parameters</h2><p><strong><em>Dynamic Rendering</em></strong></p>\n<p>This seems to be very natural in React. We know that state changes are reflected in the view immediately (obviously when there is a change). So in the render method of a component—if we return certain a component/html element conditionally, based on the value of a property of the state, the element/component will be rendered dynamically based on whether that property of the state has a value or not. The same conditional rendering can be used to make elements/components disappear, replace each other, show up dynamically.</p>\n<p>In our example project, we use this for the following</p>\n<ul>\n<li>make the PlayerInput disappear</li>\n<li>Get the PlayerPreview to show up</li>\n<li>Get the Battle results link to show up</li>\n</ul>\n<p><strong><em>Query Params</em></strong></p>\n<p>The <code>to</code> prop of the <code>Link</code> component of React Router accepts url path strings or an object with props:</p>\n<ul>\n<li>pathname: which takes a string for the link’s path</li>\n<li>search: takes a string beginning with ‘?’ for query params followed by the query param name value string</li>\n</ul>\n<p>React Router’s Route component passes a few props to the component it’s linked with. One of the prop is <code>match</code> which is an object with a property <code>url</code> which contains the current url’s path. The <code>to</code> value of a <code>Link</code> that routes to a sub-path of the current url should be composed of the <code>this.props.match.url</code> property, so that the path can be changed later without affecting the link.</p>\n<h2 id=\"Axios-Promises-and-the-Github-Api\"><a href=\"#Axios-Promises-and-the-Github-Api\" class=\"headerlink\" title=\"Axios, Promises and the Github Api\"></a>Axios, Promises and the Github Api</h2><p>Promises, is a helpful JS library (not a part of js) that helps us write easy to digest async code.</p>\n<p>If a certain function returns a <code>promise</code> instead of a <em>value</em>, the function invocation needs to be chained with a method <code>.then</code> which takes a function as its argument; this function is given the <code>data</code> that the promise ultimately returns as an argument and returns desired values that can be derived from that <code>data</code>.</p>\n<p>The axios library is a promise based http client. We use its method <code>.get</code> to request the GitHub api for data and chain it with <code>.then</code> to return the data in the format desired. Axios also has a useful method .all that returns a promise which is an aggregation of an array of promises which it takes as an argument.</p>\n<p>Any function that returns an invocation of <code>axios.get</code> (chained with a <code>.then</code> method) is returning a promise and when that function is invoked it needs to be chained with a <code>.then</code> invocation to be able to receive the value axios intended to return.</p>\n<p>The function composition used to interact with the GitHub api and finally expose a single simple method in api object is a great way to compose functions. Get inspired for your own api objects you compose in the future.</p>\n<h2 id=\"Composition-vs-this-props-children\"><a href=\"#Composition-vs-this-props-children\" class=\"headerlink\" title=\"Composition vs. this.props.children\"></a>Composition vs. this.props.children</h2><p><strong><em><code>this.props.children</code> in React</em></strong></p>\n<p>A lotta times in while working with HTML pages, we need access to the specific data between the opening and closing tag of an element. React gives us an easy way to do this for components. <code>this.props.children</code> will give us the specific data between the opening and closing tag of the component referred to here by <code>this</code>.</p>\n<p>In case of there being more components inside the opening and closing tag of a component, <code>this.props.children</code> will return an array composed of the components contained within the component’s opening and closing tag.</p>\n<p>So simply put, props.children is whatever is between the <code>&lt;Opening&gt;</code> and closing <code>&lt;/Opening&gt;</code> blocks of a component.</p>\n<p><img src=\"http://i.imgur.com/hQe7cs5.png\" alt=\"example of how this.props.children works\"></p>\n<p>This picture simply explains how this is useful to us while creating our components in JSX. So components that have an opening and closing tag—include <code>props.children</code> in the ui they return to keep a section of their ui dynamic. So while creating the component, we can pass in any relevant ui as its child.</p>\n<h2 id=\"Building-a-Highly-Reusable-React-Component\"><a href=\"#Building-a-Highly-Reusable-React-Component\" class=\"headerlink\" title=\"Building a Highly Reusable React Component\"></a>Building a Highly Reusable React Component</h2><p><strong><em>Defaulting props with defaultProps</em></strong></p>\n<p>An important advantage of using the React library is reusable components that can even be used between different projects. Being able to specify <code>defaultProps</code> for a component makes designing reusable components a lot simpler. It enables different users to use the component as it is or with customized <code>props</code> suited to their use within their project.</p>\n<p>We make the <code>&lt;Loading /&gt;</code> component more reusable by specifying <code>defaultProps</code> for it so that different users can either use it as it is or by changing <code>props</code> as needed.</p>\n<p><strong><em>Video</em></strong></p>\n<p>The <code>Loading</code> component has two <code>props</code>: <code>text</code> and <code>speed</code> for which we provide default values and specify prop types. Users of the <code>Loading</code> component can either default on the text “Loading” with dots added to it every 300 miliseconds or change the text and the speed how they like.</p>\n<p>For the dot animation effect, we updated the component’s state continuosly between an interval specified by the <code>speed</code> prop; this happens in the life-cycle event <code>componentDidMount</code>. If we don’t clear this interval when the <code>componentWillUnmount</code> the state of this component will keep updating till the app’s instance shuts down. So the interval is referenced to a property <code>interval</code> of the component which is then used to clear the interval when the component unmounts.</p>\n<h2 id=\"Building-for-Production\"><a href=\"#Building-for-Production\" class=\"headerlink\" title=\"Building for Production\"></a>Building for Production</h2><p>When building our project for production, we’re gonna need the JavaScript in <code>index_bundle.js</code> to be minified and we’re gonna need React to be compiled for production (without warning and unnecessary console logs) rather than development.</p>\n<p>In order to achieve this, we modify the webpack configuration object exported from <code>webpack.config.js</code>.<br>_ We conditionally add a couple items to the <code>plugins</code> property of the <code>config</code> object if the process’ <code>NODE_ENV</code> property says <code>&#39;production&#39;</code>.<br>_ 1st item: we define a <code>new</code> plugin using <code>webpack.DefinePlugin</code> which makes the <code>NODE_ENV</code> property of <code>process.env</code> equal to <code>&#39;production&#39;</code>. <strong>This <code>NODE_ENV=&#39;production&#39;</code> is for the code that webpack is compiling.</strong> Whereas, the one in the condition, was for the code that compiles our project (i.e. the code in <code>webpack.config.js</code>). * 2nd item: an instance of <code>webpack.optimize.UglifyJsPlugin()</code> for webpack to minify and uglify all the JavaScript in <code>index_bundle.js</code>. This makes it impossible for other devs to imitate our application using dev tools.</p>\n<p>Lastly, we add a script <code>&quot;build&quot;</code> to the npm <code>&quot;scripts&quot;</code> in <code>package.json</code>; it says:<br><code>NODE_ENV=&#39;production&#39; webpack -p</code></p>\n<p>Now when we run <code>npm run build</code> from our project directory, webpack will build our project in the <code>dist</code> subdirectory of our project. The <code>NODE_ENV=&#39;production&#39;</code> is essential to pass the condition specified in <code>webpack.config.js</code> to add production plugins to the <code>config</code> object. <code>webpack -p</code> simply tells webpack to build for production.</p>\n<p><strong><em>Installing modules locally rather than globally</em></strong></p>\n<p>When installing <code>firebase-tools</code>, Tyler gives an awesome suggestion to avoid installing npm modules globally and to refer their commands from within scripts in <code>package.json</code> instead. Since when the commands run from there, they refer to the locally installed node modules and don’t require us to install them globally. Another example of this is how we use webpack in this project. If we want to refer to webpack from our command line, npm will require us to install it globally.</p>\n<p>There’s nothing wrong with installling modules globally, except that our project will be forced to use the most updated version of that module. Which will create problems when incompatible updates are made to the module.</p>\n","site":{"data":{"projects":[{"name":"tenzin.ca","url":"http://tenzin.ca/","desc":"home"},{"name":"curriculum vitae","url":"#","desc":"hire me"},{"name":"photography","url":"/photography/","desc":"a brief portfolio"},{"name":"eve online","url":"https://github.com/citizenofearth/eve","desc":"musings on the scifi space simulator"},{"name":"javascript patterns","url":"https://github.com/citizenofearth/javascript-patterns","desc":"common recipes for javascript"},{"name":"todomvc","url":"https://github.com/citizenofearth/todomvc","desc":"basic todo app written in several front-end frameworks"},{"name":"es6 features","url":"https://github.com/citizenofearth/es6features","desc":"overview of ecmascript 6"},{"name":"d3","url":"https://github.com/citizenofearth/d3","desc":"data driven documents"}]}},"excerpt":"","more":"<p><em>Notes from the course by <a href=\"https://tylermcginnis.com\" target=\"_blank\" rel=\"noopener\">Tyler McGinnis</a></em></p>\n<p><img src=\"/images/reactlogo.png\" alt=\"React JS\"></p>\n<h2 id=\"Intro-to-the-React-Ecosystem\"><a href=\"#Intro-to-the-React-Ecosystem\" class=\"headerlink\" title=\"Intro to the React Ecosystem\"></a>Intro to the React Ecosystem</h2><p>Top qualities of React:</p>\n<ul>\n<li><strong>Composition</strong><ul>\n<li>everything in the React DOM is a component</li>\n<li>components are analogous to a container that wraps functionality within itself, much like functions do</li>\n<li>components can be used to compose other components much like functional composition</li>\n<li>well-defined components can be used between different projects (hence the advent of component libraries)</li>\n</ul>\n</li>\n<li><strong>Declarative</strong><ul>\n<li>declarative code abstracts the implementation/control-flow handled by imperative code with the help of functions</li>\n<li>declarative code focuses on the WHAT rather than the HOW of the problem and uses abstracts the HOW to do so</li>\n<li>React is declarative with everything except with changing the state of a component which anyways results in it being re-rendered</li>\n</ul>\n</li>\n<li><strong>Unidirectional Dataflow</strong><ul>\n<li>in React the state is stored in a component as opposed to the DOM (which is how it is with JQuery)</li>\n<li>state is explicitly changed and that causes the DOM to re-render</li>\n<li>data flows from the state to the DOM and never the other way around</li>\n<li>parent components pass data to child components with the help of props</li>\n</ul>\n</li>\n<li><strong>Explicit Mutations</strong><ul>\n<li>changing state must be done explicitly in React</li>\n<li>changing the state of a component with this.setState renders it to the DOM<ul>\n<li>there is no need of adding event listeners or dirty checking</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Just JavaScript</strong><ul>\n<li>React takes advantage of the JavaScript’s functionality, api, and capabilities (also functional style)</li>\n</ul>\n</li>\n</ul>\n<p>This course will cover the following tools from the React Ecosystem:</p>\n<ul>\n<li><strong>React Router</strong><ul>\n<li>component that allows us to map a url path to a component</li>\n<li>declare the routes to be rendered within router</li>\n<li>each route has a path property and a component property that allows you to map a path to a component</li>\n<li>router is powerful and enables routes to have different children and makes active link states, etc., extremely easy</li>\n</ul>\n</li>\n<li><strong>Webpack</strong><ul>\n<li>most popular module bundler within the React community</li>\n<li>helps perform transformations to the code, making it ready for dev or production</li>\n<li>specify entry files which we work on, output directory, and final filename, as well as the loaders through which the specified files should be transformed</li>\n</ul>\n</li>\n<li><strong>Babel</strong><ul>\n<li>transpiler used to transform JSX to JS and ES6 to ES5, etc</li>\n<li>loaded in webpack</li>\n</ul>\n</li>\n<li><strong>Axios</strong><ul>\n<li>API used to send HTTP requests to different APIs (in our case the GitHub api)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Setup-First-React-Component-with-NPM-Webpack-and-Babel\"><a href=\"#Setup-First-React-Component-with-NPM-Webpack-and-Babel\" class=\"headerlink\" title=\"Setup First React Component with NPM, Webpack and Babel\"></a>Setup First React Component with NPM, Webpack and Babel</h2><p><img src=\"/images/npmlogo.svg\" alt=\"React JS\"></p>\n<p><strong><em>NPM</em></strong></p>\n<p>In writing software, it is an accepted idea that modularity is a great idea to for reusing code and increase the abilities and efficiencies of programmers. NPM is a node package manager that aims to solve the problem of enabling efficient collaboration and sharing of different modules.</p>\n<p>The main problem with CDNs is maintaining updated versions of dependencies once their number starts going out of hand and sharing the same dependency files with team members working on the project.</p>\n<p>npm init initialises a new npm project in current directory. It gives the directory a package.json file which contains information about the project’s dependencies with versions and also allows to run node scripts that perform different tasks (like testing ava, et cetera).</p>\n<p>NPM allows us to install modules globally and locally only for the project. NPM has commands for saving individual modules globally or locally, to run tests mentioned in the scripts object and to install all dependencies mentioned in package.json.</p>\n<p><code>npm install —save</code> adds the module being installed to package.json as a dependency rather than a devDependency, which is what happens when we use <code>npm install —save-dev</code></p>\n<p><strong><em>Webpack</em></strong></p>\n<p>Webpack is a module bundler that helps us make production and development transformations to the code we write. The reason for it to exist is that web developers shouldn’t have to transform code every time they want to test or deploy it. These transformations include but are not limited to: bundling js, bundling css, minification and uglification, jsx to js, sass/less to css, et cetera.</p>\n<p>Webpack needs the entry point for the main javascript files. It has a modules property that we use to specify all loaders (rules) that need to make a transformation on the code. It has a plugins property which specifies plugins like html-webpack-config’s object in its array. It needs the template and filename in the output distribution folder.</p>\n<p>Webpack loaders allow us to preprocess files (like css, et cetera) as we <code>require</code> them into the root js file.</p>\n<p>The code that pieces the above together is fairly simple.</p>\n<p>While using webpack-dev-server to run a web server locally, any changes we make do not cause webpack to compile our bundle to the dist folder. However, it dynamically updates quickly because webpack saves the changes in a cache that is meant to refresh quickly rather than compiling a build bundle every time a change is made.</p>\n<p><strong><em>Babel</em></strong></p>\n<p>Babel is a popular javascript transpiler. It enables us to write future versions / variations / abstractions of javascript and babel compiles them to javascript which is compatible with most browsers.</p>\n<p>We need to install each babel preset package using npm as a dev dependency for the project we’re using it with.</p>\n<p>In web pack’s config object’s module property’s rules array we need to use <code>babel-loader</code> on .js files.</p>\n<p>In order to configure babel, we need to explicitly mention the <code>presets</code> corresponding to the transformations we wish to make in a babel config object.</p>\n<p>We can either include this object in a file name <code>.babelrc</code> or we can refer it to a property babel in <code>package.json</code>.</p>\n<p><strong><em>React</em></strong></p>\n<p>React relies on a component based architecture in which the app is a component made up of components. Each component can be thought of as a collection of HTML, CSS, JS and some internal data specific to that component.</p>\n<p>The way parent/child component relationship works is that the state of a component lives in its parent and has to be passed to the child with an attribute (called props/properties). This makes managing data simple because we know exactly where our data lives and we shouldn’t manipulate it elsewhere.</p>\n<p>A React Component may be composed of the following:</p>\n<ul>\n<li>[internal data]</li>\n<li>ui</li>\n<li>[lifecycle event]</li>\n</ul>\n<p>Every component is supposed to have a render method. The reason is that the render method returns the template for that component and it is necessary for a component to have a ui.</p>\n<p>We need to tell ReactDOM to which element the components should be rendered to. You usually have to use ReactDOM.render only once in your applications because rendering the most parent element will render all the children as well.</p>\n<p>JSX is converted to React.createElement methods which describes what you see on the screen (notice only describes, doesn’t mean that it is what we see). React.createElement returns an object representation of the DOM node. It is also called virtual DOM node.</p>\n<p>React interprets JSX and transforms it into lightweight javascript objects which are used to create a virtual DOM. Changes in the virtual dom are tracked on only the necessary updates are rendered to the DOM.</p>\n<p><code>React.createElement</code> takes 3 arguments:</p>\n<ul>\n<li>element type: <code>div</code>, <code>span</code>, component</li>\n<li>properties object</li>\n<li>children (multiple)<br>When React encounters a component in any of the above arguments, it replaces that with what the components React.createElement returns. Hence when rendering the most parent component using ReactDOM, the entire virtual DOM is created.</li>\n</ul>\n<p>This invocation of React.createElement to create a virtual DOM node only happens while using ReactDOM.render and while changing state using setState.</p>\n<p>The process looks something like this,</p>\n<p>Signal to notify our app some data has changed -&gt; re-render virtual dom -&gt; diff previous virtual dom with new virtual dom -&gt; only update real dom with necessary changes. This gives react performance ups.</p>\n<p><strong><em>Lecture video</em></strong></p>\n<p>npm install —-save-dev means add this to the object referenced by the devDependencies property of package.json.</p>\n<p>While npm install —-save means add this to the object referenced by the dependencies property of package.json.</p>\n<p>One can add scripts to package.json that can be run with the script name as argument to npm. These scripts can range from webpack productiont, webpack-dev-server to ava test scripts.</p>\n<p>From the example mentioned in NPM text section of this lesson:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"scripts\": &#123;</span><br><span class=\"line\">  \"test\": \"ava 'app/**/*.test.js' --verbose --require ./other/setup-ava-tests.js\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Dataflow-with-props\"><a href=\"#Dataflow-with-props\" class=\"headerlink\" title=\"Dataflow with props\"></a>Dataflow with props</h2><p>We already know that props are the primary way to pass data into a component (when it is created a.k.a. invoked within a parent component or the ReactDOM.render method). In this lesson we got hands on practice with passing props like username, name and img url to a component from its creation in the ReactDOM.render method and its invocation in a parent component. We also replaced multiple props in a parent component with a single property which takes a javascript object.</p>\n<p><img src=\"/images/react.png\" alt=\"React JS\"></p>\n<p>In JSX a javascript expression can be written within single curly braces {<em>javascript goes here</em>}. The primary way to build list uis in React is to simply pass in an array or other iterator and use javascript’s functionality of map and filter, et cetera.</p>\n<p>When rendering list items in jsx (<code>&lt;li&gt; {something} &lt;/li&gt;</code>), React gives us a warning saying that we should add a unique key prop value pair to each list item. This allows React to keep track of changes in the list and reflect them on the ui in an efficient manner. Particularly for items that have been added or removed from the list. The value of the key prop should be a unique identifier for that item in the list (be careful using the index argument in filter and maps callback function, since the index for each item keep changing depending on the number of items in the iterative).</p>\n<h2 id=\"Pure-functions-f-d-v-Props-and-nesting-components-in-React\"><a href=\"#Pure-functions-f-d-v-Props-and-nesting-components-in-React\" class=\"headerlink\" title=\"Pure functions. f(d)=v. Props and nesting components in React.\"></a>Pure functions. <code>f(d)=v</code>. Props and nesting components in React.</h2><p><strong><em>Nested components and props</em></strong></p>\n<p>Props are to components what arguments are to functions. Props are the way in which a parent components passes data to its child component. When specifying a component in JSX (invoking a component), a property value can be passed in the component in a way that looks similar to an attribute=“value” pair in HTML tags.</p>\n<p><strong><em>Building UIs with pure functions and function compositions in React</em></strong></p>\n<p>In react, components can be thought of as pure functions, often composed with other pure functions. In a pure function, we pass arguments and get a value in return.</p>\n<p>In react, components are like pure functions that take arguments and return a UI view. A neat expression to summarise this would be <code>f(d) = V</code>. (where d is data and V is the view).</p>\n<p>Composing function with helper functions is good practice to modularise code and similarly the same goes for react components. So much so, that React recently introduced stateless functional components which allow us to define components as normal JS functions that return JSX dom, these functions take the props as their argument (unlike the traditional component class with a render method).</p>\n<p>Tyler goes on to say that learning React the right way is like an introduction to the world of functional programming where composing pure functions is the go to way to do something. Hence we should treat the props passed to a component as immutable.</p>\n<p>React components can easily be composed of other components. What this means is that the JSX that is rendered by a component could be invoking other components while passing the prop types it need as property attributes.</p>\n<p><strong><em>Intro to PropTypes</em></strong></p>\n<p>PropTypes is a way to do type checking on props in React. It has recently been separated from React to its own library.</p>\n<p>PropTypes allow us to declare the type of each prop being passed to a component. Then, if the prop passed isn’t of the declared type, we get a warning in the console.</p>\n<p>PropTypes can be string, func, bool, object (of a particular shape with each properties type specified), et cetera.</p>\n<p><strong><em>Video</em></strong></p>\n<p>The reliance on particular state is a very large contributor to a system’s complexity. What this means is that when using a function with side effects, the system has to worry about and keep track of the state that it depends on and modifies, whereas with pure functions the need to keep track of particular state disappears. Hence simplifying the system.</p>\n<p>Hence components are easy to think about, they’re easy to test (because we don’t have to asses the state before testing components), they’re easy to reuse and they’re easy to reproduce the same results. So we can conclude that: react components do not change any state outside they’re scope and cause any mutations/ async requests, et cetera.</p>\n<p>Important thing to note:<br>The JSX dom representation that a react component returns should be wrapped in a single DOM container element (which can be any html element objects or a react component). In short, don’t return multiple DOM or react components without wrapping them in a single container.</p>\n<p><strong>Any react component we want to make, should be:</strong></p>\n<p><img src=\"http://i.imgur.com/72dYgU2.png\" alt=\"principles for a react component\"></p>\n<p><strong><em>Quiz</em></strong></p>\n<p>The above purity means that we should treat props as immutable from within components (or their render method).</p>\n<p>The <code>this</code> keyword + Managing and Updating State<br>The this keyword</p>\n<p>When invoking a method, the keyword this within its body refers to the object the method is a property of (the method will be invoked on an instance of that object, which will be on the left of the method invocation before the dot notation). In different situations the value of the this keyword is not very obvious and requires a thorough understanding of the different ways JavaScript binds the this keyword (which acts as context in functions/methods).</p>\n<ul>\n<li><strong>Implicit Binding</strong>: object has a property which equals to a function and within that functions body one can refer to other properties of that object with this.dotNotation</li>\n<li><strong>Explicit Binding</strong>: binding using functions’ in-built functionality .call, .apply, .bind.</li>\n<li><strong>New/Window Binding</strong>: when we use new to create an instance of an object, it binds the this keyword to itself within any of its methods/properties.</li>\n</ul>\n<p><strong><em>Managing &amp; Updating State</em></strong></p>\n<p>We specify the state of a component within its constructor (which first calls super with the props as argument). The state has to be explicitly changed using the component’s <code>setState</code> method which takes in a function as an argument; the function having to return the new <code>state</code> object.</p>\n<p>We go on to create the popular tabs on the github-battle project and set its state. We defined a method that changes the components state when a particular item in the component was clicked. We link the component’s method to that list item using the <code>onClick</code> attribute.</p>\n<p>React advocates love how React needs users to explicitly change the state. When the state is changed the necessary changes reflect on the DOM immediately.</p>\n<h2 id=\"Stateless-Functional-Components\"><a href=\"#Stateless-Functional-Components\" class=\"headerlink\" title=\"Stateless Functional Components\"></a>Stateless Functional Components</h2><p>While using React, we’re gonna have a lot of components that only have a render method and optionally take in some props (they have no other method or state). These components can be defined as pure functions instead, removing the unnecessary component class abstraction.</p>\n<p><strong>It is a great idea to separate container components from presentational components in React.</strong></p>\n<p>Stateless functional components will aid us in doing so. It is a good idea to use these because this is a good way to separate container and presentational components. The functional component takes props as its first argument.</p>\n<p>Tyler encourages us to create a stateless functional component whenever we feel that the components render method is getting long enough to understand with a glance.</p>\n<p>Stateless functional components should not be called functional components because in future, React will have functional components to which we can add state.</p>\n<p><strong><em>Private Components</em></strong><br>If a components render method is getting long, we can compose it out of multiple stateless functional components. If such a component is composing a container component and is present in the same module from which only the container component is being exported, it is called a private component (like private functions).</p>\n<p>Another advantage of using stateless functional components is that the chances of calling the container component’s methods in a wrong context reduce heavily, because of the absence of references to <code>this</code>.</p>\n<h2 id=\"Life-Cycle-Events-Ajax\"><a href=\"#Life-Cycle-Events-Ajax\" class=\"headerlink\" title=\"Life Cycle Events + Ajax\"></a>Life Cycle Events + Ajax</h2><p><strong><em>React Life Cycle Events</em></strong></p>\n<p>In the beginning of the course Tyler explained that a component has certain life cycle events associated with it; the chart on the bottom illustrates each one’s time of invocation with respect to the life-cycle of a component.</p>\n<p>React’s life cycle events can be broken into two categories:</p>\n<ol>\n<li>When a component gets mounted to the DOM or unmounted from it.</li>\n<li>When a component receives new data.</li>\n</ol>\n<p>For the first category, the component may need to perform some/all of the following tasks during that time in the life cycle:</p>\n<ul>\n<li>Default props - if props aren’t given to a component, they default to the specified Component.defaultProps object.</li>\n<li>Initial State - initial state is retrieved from within the constructor of the component (like how we do it)</li>\n<li>Make an Ajax request to fetch some data - common use case, the request can be made in the body of componentDidMount method (which is self explanatory)</li>\n<li>Set up or remove any listeners or web-sockets (like a firebase ref listener) - start listener within componentDidMount and stop listener in componentWillUnmount (events are self-explanatory)</li>\n</ul>\n<p>Now coming to the life cycle events that triggered when the component receives new data from its parent component.</p>\n<ul>\n<li><code>componentWillReceiveProps</code> - for times when you want to execute some code whenever your component receives props</li>\n<li><code>shouldComponentUpdate</code> - allows us to add another condition which should return true for react to re-render that component (and obviously its children)</li>\n</ul>\n<p><img src=\"http://i.imgur.com/3LkFtGd.png\" alt=\"react component&#39;s life cycle events\"></p>\n<p><strong><em>Making Ajax Requests</em></strong></p>\n<p>An Http client library can be used to make Http requests to the server side (or any api we wish to use). <em>Axios</em> is a promise based Http library that we used. It requires the <code>encodedURI</code> as an argument and returns a promise.</p>\n<p>In our web application, we need to make ajax requests when the popular component mounts and when its state changes. So we make some changing in the method <code>updateLanguage</code>, to add a <code>repos=null</code> property on the state object temporarily, till the axios promise returns its response—after which the state is updated again to <code>repos=repos</code>.</p>\n<p>Loved the way Tyler structured the files and method names to make the Ajax request, abstracted the entire api calls in a module with contextual readable method names. Created a subdirectory <code>utils</code> in <code>App</code>, and in that a file named <code>Api.js</code>. We required axios within that file and exported an object with all necessary methods required for our app to interact with the api.<br>This method was then invoked in the new implementation of the <code>updateLanguage</code> method of the Popular component.</p>\n<p><img src=\"/images/reactrouter.png\" alt=\"React JS\"></p>\n<h2 id=\"React-Router-v4\"><a href=\"#React-Router-v4\" class=\"headerlink\" title=\"React Router v4\"></a>React Router v4</h2><p>React Router is a component based routing mechanism for React apps (and native). It is the most popular routing package for react and is built by the reacttraining.com team itself.</p>\n<p>It’s very simple to use. We used the following components present in the react-router-dom module:</p>\n<ul>\n<li>BrowserRouter as Router - is the component between which all the routes are nested. Our most parent component.</li>\n<li>Route - the component that helps specify views for each component, has many small nuances one needs to be aware of</li>\n<li>Link - just a link with prop to.</li>\n<li>NavLink - has activeClassName prop, to apply a css class when active</li>\n<li>Switch - used to make sure only one of the Routes is active at any moment (useful for showing a route without a path for paths that are not handled aka 404)<ul>\n<li>instead of rendering all of the routes that are active, switch is gonna let only 1 route be active at a time</li>\n</ul>\n</li>\n</ul>\n<p><strong><em>Route</em></strong></p>\n<p>The main routing component which links url paths to components. We used the following props that Route accepts:</p>\n<ul>\n<li>path - prop takes string for the url path at which component should be active in the view<ul>\n<li>Note: if a route has path=‘/first’, it’s component will be active for all paths that start with /first</li>\n<li>to avoid the above, we need to prepend prop path with keyword exact</li>\n</ul>\n</li>\n<li>component - takes a javascript expression referring to the component that one wants to link to the path</li>\n<li>render - this prop is useful when you don’t want to link the route to a component, but instead specify the JSX right there. This prop takes a value of a function that returns the JSX you wish this route to return. This is used mostly for the 404 pages I’m assuming, in a route that’s the last child of the switch component (and has no path prop value obviously).</li>\n<li>exact prop makes sure the route is rendered/active only when the path matches exactly and not just partly</li>\n</ul>\n<p><strong><em>Link</em></strong></p>\n<p>This component is the basic anchor tag in react, except obviously it knows what component it originates in.</p>\n<ul>\n<li>to - prop takes the path to route to when the user clicks the link</li>\n</ul>\n<p><strong><em>NavLink</em></strong></p>\n<p>Composed of the component Link, except with additional functionality to make Links active when their path matches the current path.</p>\n<ul>\n<li><code>activeClassName</code> - is the class that is applied to the NavLink component when the current path matches with the link’s path</li>\n<li><code>exact</code> - this prop makes sure the activeClassName is applied only when the path has an exact match with the link’s path (not just partly, similar to the exact prop in routes)</li>\n</ul>\n<p><code>BrowserRouter</code> and <code>Switch</code> don’t have much more than what’s outlined in the brief points above.</p>\n<h2 id=\"Forms-and-Encapsulation-in-React\"><a href=\"#Forms-and-Encapsulation-in-React\" class=\"headerlink\" title=\"Forms and Encapsulation in React\"></a>Forms and Encapsulation in React</h2><p>In this lesson we start-off using the React developer tools where we can see the tree like structure of our app, we can see the props passed to each component and the state living in each component.</p>\n<p><strong><em>Input fields</em></strong></p>\n<p>In a typical web application, what we’re used to doing is to grab the value in the input field when a user fills it in and clicks submit. However, in React, we have two ways in which we could handle input fields in forms:</p>\n<ul>\n<li>Controlled Component<ul>\n<li>The controlled way is when we bind the value of the input field to the state of that component</li>\n<li>So when the user types in the value, the state updates and then changes the value of the input field (counterintuitive but it is like that and not the other way around)</li>\n<li>We can see the state change in real time as the user types in the React developer tool</li>\n<li>This is the way we’re going to be following in this course and is how the React docs typically recommend that we deal with forms</li>\n<li>This is called a controlled component because React is controlling the value of the specific input field</li>\n</ul>\n</li>\n<li>Uncontrolled Component<ul>\n<li>The uncontrolled way is a little more traditional, where the user fills the input field</li>\n<li>and the state doesn’t change till he presses submit (or a similar event)</li>\n</ul>\n</li>\n</ul>\n<p><strong><em>Idea of Encapsulation</em></strong></p>\n<p>This idea is such that the form we’re working with is a component which has child components for individual input fields.</p>\n<ul>\n<li><strong>From -&gt; component, Input -&gt; child controlled components</strong></li>\n<li>The input field components have their values bound to a specific property on their state</li>\n<li>As the value of this state updates, the state of the parent form component remains the same (sees no change)</li>\n<li>The parent component passes a function (like onSubmit handler) to these controlled components and the value of the parent’s state updates only when this function is invoked<br>_ and the parent’s state has values which are the result of passing the child components state through that function<br>_ this is a little hard to understand without context, but I’m on the right page<br>So we can encapsulate the complexity of a specific state in a child component and pass in a function which helps its parent grab the value at a certain event invocation.</li>\n</ul>\n<h2 id=\"Dynamic-Rendering-amp-Query-Parameters\"><a href=\"#Dynamic-Rendering-amp-Query-Parameters\" class=\"headerlink\" title=\"Dynamic Rendering &amp; Query Parameters\"></a>Dynamic Rendering &amp; Query Parameters</h2><p><strong><em>Dynamic Rendering</em></strong></p>\n<p>This seems to be very natural in React. We know that state changes are reflected in the view immediately (obviously when there is a change). So in the render method of a component—if we return certain a component/html element conditionally, based on the value of a property of the state, the element/component will be rendered dynamically based on whether that property of the state has a value or not. The same conditional rendering can be used to make elements/components disappear, replace each other, show up dynamically.</p>\n<p>In our example project, we use this for the following</p>\n<ul>\n<li>make the PlayerInput disappear</li>\n<li>Get the PlayerPreview to show up</li>\n<li>Get the Battle results link to show up</li>\n</ul>\n<p><strong><em>Query Params</em></strong></p>\n<p>The <code>to</code> prop of the <code>Link</code> component of React Router accepts url path strings or an object with props:</p>\n<ul>\n<li>pathname: which takes a string for the link’s path</li>\n<li>search: takes a string beginning with ‘?’ for query params followed by the query param name value string</li>\n</ul>\n<p>React Router’s Route component passes a few props to the component it’s linked with. One of the prop is <code>match</code> which is an object with a property <code>url</code> which contains the current url’s path. The <code>to</code> value of a <code>Link</code> that routes to a sub-path of the current url should be composed of the <code>this.props.match.url</code> property, so that the path can be changed later without affecting the link.</p>\n<h2 id=\"Axios-Promises-and-the-Github-Api\"><a href=\"#Axios-Promises-and-the-Github-Api\" class=\"headerlink\" title=\"Axios, Promises and the Github Api\"></a>Axios, Promises and the Github Api</h2><p>Promises, is a helpful JS library (not a part of js) that helps us write easy to digest async code.</p>\n<p>If a certain function returns a <code>promise</code> instead of a <em>value</em>, the function invocation needs to be chained with a method <code>.then</code> which takes a function as its argument; this function is given the <code>data</code> that the promise ultimately returns as an argument and returns desired values that can be derived from that <code>data</code>.</p>\n<p>The axios library is a promise based http client. We use its method <code>.get</code> to request the GitHub api for data and chain it with <code>.then</code> to return the data in the format desired. Axios also has a useful method .all that returns a promise which is an aggregation of an array of promises which it takes as an argument.</p>\n<p>Any function that returns an invocation of <code>axios.get</code> (chained with a <code>.then</code> method) is returning a promise and when that function is invoked it needs to be chained with a <code>.then</code> invocation to be able to receive the value axios intended to return.</p>\n<p>The function composition used to interact with the GitHub api and finally expose a single simple method in api object is a great way to compose functions. Get inspired for your own api objects you compose in the future.</p>\n<h2 id=\"Composition-vs-this-props-children\"><a href=\"#Composition-vs-this-props-children\" class=\"headerlink\" title=\"Composition vs. this.props.children\"></a>Composition vs. this.props.children</h2><p><strong><em><code>this.props.children</code> in React</em></strong></p>\n<p>A lotta times in while working with HTML pages, we need access to the specific data between the opening and closing tag of an element. React gives us an easy way to do this for components. <code>this.props.children</code> will give us the specific data between the opening and closing tag of the component referred to here by <code>this</code>.</p>\n<p>In case of there being more components inside the opening and closing tag of a component, <code>this.props.children</code> will return an array composed of the components contained within the component’s opening and closing tag.</p>\n<p>So simply put, props.children is whatever is between the <code>&lt;Opening&gt;</code> and closing <code>&lt;/Opening&gt;</code> blocks of a component.</p>\n<p><img src=\"http://i.imgur.com/hQe7cs5.png\" alt=\"example of how this.props.children works\"></p>\n<p>This picture simply explains how this is useful to us while creating our components in JSX. So components that have an opening and closing tag—include <code>props.children</code> in the ui they return to keep a section of their ui dynamic. So while creating the component, we can pass in any relevant ui as its child.</p>\n<h2 id=\"Building-a-Highly-Reusable-React-Component\"><a href=\"#Building-a-Highly-Reusable-React-Component\" class=\"headerlink\" title=\"Building a Highly Reusable React Component\"></a>Building a Highly Reusable React Component</h2><p><strong><em>Defaulting props with defaultProps</em></strong></p>\n<p>An important advantage of using the React library is reusable components that can even be used between different projects. Being able to specify <code>defaultProps</code> for a component makes designing reusable components a lot simpler. It enables different users to use the component as it is or with customized <code>props</code> suited to their use within their project.</p>\n<p>We make the <code>&lt;Loading /&gt;</code> component more reusable by specifying <code>defaultProps</code> for it so that different users can either use it as it is or by changing <code>props</code> as needed.</p>\n<p><strong><em>Video</em></strong></p>\n<p>The <code>Loading</code> component has two <code>props</code>: <code>text</code> and <code>speed</code> for which we provide default values and specify prop types. Users of the <code>Loading</code> component can either default on the text “Loading” with dots added to it every 300 miliseconds or change the text and the speed how they like.</p>\n<p>For the dot animation effect, we updated the component’s state continuosly between an interval specified by the <code>speed</code> prop; this happens in the life-cycle event <code>componentDidMount</code>. If we don’t clear this interval when the <code>componentWillUnmount</code> the state of this component will keep updating till the app’s instance shuts down. So the interval is referenced to a property <code>interval</code> of the component which is then used to clear the interval when the component unmounts.</p>\n<h2 id=\"Building-for-Production\"><a href=\"#Building-for-Production\" class=\"headerlink\" title=\"Building for Production\"></a>Building for Production</h2><p>When building our project for production, we’re gonna need the JavaScript in <code>index_bundle.js</code> to be minified and we’re gonna need React to be compiled for production (without warning and unnecessary console logs) rather than development.</p>\n<p>In order to achieve this, we modify the webpack configuration object exported from <code>webpack.config.js</code>.<br>_ We conditionally add a couple items to the <code>plugins</code> property of the <code>config</code> object if the process’ <code>NODE_ENV</code> property says <code>&#39;production&#39;</code>.<br>_ 1st item: we define a <code>new</code> plugin using <code>webpack.DefinePlugin</code> which makes the <code>NODE_ENV</code> property of <code>process.env</code> equal to <code>&#39;production&#39;</code>. <strong>This <code>NODE_ENV=&#39;production&#39;</code> is for the code that webpack is compiling.</strong> Whereas, the one in the condition, was for the code that compiles our project (i.e. the code in <code>webpack.config.js</code>). * 2nd item: an instance of <code>webpack.optimize.UglifyJsPlugin()</code> for webpack to minify and uglify all the JavaScript in <code>index_bundle.js</code>. This makes it impossible for other devs to imitate our application using dev tools.</p>\n<p>Lastly, we add a script <code>&quot;build&quot;</code> to the npm <code>&quot;scripts&quot;</code> in <code>package.json</code>; it says:<br><code>NODE_ENV=&#39;production&#39; webpack -p</code></p>\n<p>Now when we run <code>npm run build</code> from our project directory, webpack will build our project in the <code>dist</code> subdirectory of our project. The <code>NODE_ENV=&#39;production&#39;</code> is essential to pass the condition specified in <code>webpack.config.js</code> to add production plugins to the <code>config</code> object. <code>webpack -p</code> simply tells webpack to build for production.</p>\n<p><strong><em>Installing modules locally rather than globally</em></strong></p>\n<p>When installing <code>firebase-tools</code>, Tyler gives an awesome suggestion to avoid installing npm modules globally and to refer their commands from within scripts in <code>package.json</code> instead. Since when the commands run from there, they refer to the locally installed node modules and don’t require us to install them globally. Another example of this is how we use webpack in this project. If we want to refer to webpack from our command line, npm will require us to install it globally.</p>\n<p>There’s nothing wrong with installling modules globally, except that our project will be forced to use the most updated version of that module. Which will create problems when incompatible updates are made to the module.</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjusu50io0000wkqzo0zo11eu","tag_id":"cjusu50j60004wkqznqjiqm12","_id":"cjusu50jr000cwkqzcm57zzww"},{"post_id":"cjusu50io0000wkqzo0zo11eu","tag_id":"cjusu50ji0008wkqzwvhj653x","_id":"cjusu50js000dwkqzh5626wpz"},{"post_id":"cjusu50j00002wkqzaycgfu0i","tag_id":"cjusu50jp000bwkqzuy56qbhq","_id":"cjusu50jv000fwkqzujzwx6ly"},{"post_id":"cjusu50j80005wkqzp7yjfhbc","tag_id":"cjusu50ji0008wkqzwvhj653x","_id":"cjusu50jx000kwkqz2mza2ytx"},{"post_id":"cjusu50j80005wkqzp7yjfhbc","tag_id":"cjusu50jw000gwkqzxfp6h9zt","_id":"cjusu50jx000lwkqzvko8llog"},{"post_id":"cjusu50j80005wkqzp7yjfhbc","tag_id":"cjusu50jw000hwkqzidctn8h0","_id":"cjusu50jy000nwkqzkden8kra"},{"post_id":"cjusu50j80005wkqzp7yjfhbc","tag_id":"cjusu50jx000iwkqz8wx5m0p6","_id":"cjusu50jy000owkqz8etnxngi"},{"post_id":"cjusu50ja0006wkqzfj0p5pro","tag_id":"cjusu50jx000jwkqzdqkm30z9","_id":"cjusu50jz000rwkqzp3rnw5nt"},{"post_id":"cjusu50ja0006wkqzfj0p5pro","tag_id":"cjusu50ji0008wkqzwvhj653x","_id":"cjusu50jz000swkqz4h1xslub"},{"post_id":"cjusu50ja0006wkqzfj0p5pro","tag_id":"cjusu50jy000pwkqzmg9a7gr5","_id":"cjusu50k0000uwkqzp9te7sfj"},{"post_id":"cjusu50jg0007wkqz0hjvanju","tag_id":"cjusu50jz000qwkqzj67b30zr","_id":"cjusu50k0000vwkqz8bw5vy8s"},{"post_id":"cjusu50jk0009wkqzcvhlf1eq","tag_id":"cjusu50jz000twkqzsh5sfkuz","_id":"cjusu50k1000xwkqzw24ccqxw"},{"post_id":"cjusu50jk0009wkqzcvhlf1eq","tag_id":"cjusu50ji0008wkqzwvhj653x","_id":"cjusu50k1000ywkqz7dffc4ph"},{"post_id":"cjusu50jn000awkqz3p8cyuse","tag_id":"cjusu50ji0008wkqzwvhj653x","_id":"cjusu50k1000zwkqzgf59r43x"},{"post_id":"cjusu50jn000awkqz3p8cyuse","tag_id":"cjusu50k0000wwkqzfbf8m3mz","_id":"cjusu50k10010wkqzrt1oel5z"},{"post_id":"cjusu50ku0012wkqzbo7ki1ex","tag_id":"cjusu50j60004wkqznqjiqm12","_id":"cjusu50kx0013wkqzctx39mhf"},{"post_id":"cjusu50ku0012wkqzbo7ki1ex","tag_id":"cjusu50ji0008wkqzwvhj653x","_id":"cjusu50ky0014wkqzvlijlcbq"}],"Tag":[{"name":"react","_id":"cjusu50j60004wkqznqjiqm12"},{"name":"javascript","_id":"cjusu50ji0008wkqzwvhj653x"},{"name":"hello","_id":"cjusu50jp000bwkqzuy56qbhq"},{"name":"cors","_id":"cjusu50jw000gwkqzxfp6h9zt"},{"name":"xhr","_id":"cjusu50jw000hwkqzidctn8h0"},{"name":"ajax","_id":"cjusu50jx000iwkqz8wx5m0p6"},{"name":"d3","_id":"cjusu50jx000jwkqzdqkm30z9"},{"name":"data","_id":"cjusu50jy000pwkqzmg9a7gr5"},{"name":"data science","_id":"cjusu50jz000qwkqzj67b30zr"},{"name":"pwa","_id":"cjusu50jz000twkqzsh5sfkuz"},{"name":"programming","_id":"cjusu50k0000wwkqzfbf8m3mz"}]}}